install.packages("ggplot2")
ggplot2(scbi.stem2, aes(x = `dbh`, y = `sp`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(
title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016\nData: Original CSV from the Weather Underground'
) +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
library(ggplot2)
ggplot2(scbi.stem2, aes(x = `dbh`, y = `sp`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(
title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016\nData: Original CSV from the Weather Underground'
) +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
rm(scbi.stem2)
scbi.dendroAll_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
View(scbi.dendroAll_2018)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
rm(scbi.dendroAll_2018)
#subset by the most recent survey and live trees
data_2019 <- subset(data_2018,survey.ID=="2018.14" & status=="alive")
View(data_2019)
data_2019$survey.ID <- ""
cols <- c("survey.ID", "exactdate", "measure", "codes", "notes", "status", "field.recorders", "data.enter", "new.band")
data_2019$cols <- ""
data_2019[,cols] <- ""
write.csv(data_2019, "scbi.dendroAll_2019.csv", row.names=FALSE)
#subset by the most recent survey and live trees
data_2019 <- subset(data_2018,survey.ID=="2018.14" & status=="alive")
cols <- c("survey.ID", "exactdate", "measure", "codes", "notes", "status", "field.recorders", "data.enter", "new.band")
data_2019[,cols] <- ""
View(data_2019)
write.csv(data_2019, "scbi.dendroAll_2019.csv", row.names=FALSE)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
#subset by the last survey from the year
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.14' & data_2018$status=='alive') #get rid of '0' values for minimum
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
View(data_trees)
View(data_2018)
data_trees <- data_2018[!duplicated(data_2018["sp"]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax.mm")
names(dbhmin) <- c("sp", "dbhmin.mm")
names(dbhavg) <- c("sp", "dbhavg.mm")
View(dbhavg)
View(dbhmax)
View(dbhmin)
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
View(dbhavg)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual.n")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1), 1)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual.n")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
#have to make two separate dataframes, then merge them together to make sure the "Sum" row is kept
data_count <- merge(countbi, countintra, by="sp")
data_num <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join, by="sp")
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
data_merged <- data_merged[order(data_merged$sp),]
data_merged <- data_merged[c(1:21,23,24,22),]
View(data_merged)
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
data_merged <- data_merged[order(data_merged$sp),]
View(data_merged)
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
data_merged <- data_merged[order(data_merged$sp),]
##reorder to make "Sum" row be last. These numbers may change depending on if a tree has been fully removed from the survey
data_merged <- data_merged[c(1:19,21,22,20),]
View(data_merged)
write.csv(data_merged, "dendro_trees_dbhcount2018.csv", row.names=FALSE)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
data_install<-data_2018[which(data_2018$survey.ID=='2018.01' & data_2018$codes=='RD'), ]
data_install<-data_2018[which(data_2018$survey.ID=='2018.14' & data_2018$codes=='RD'), ]
View(data_install)
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure", "codes")]
trends <- trends[which(trends$survey.ID=='2018.01' & trends$survey.ID=='2018.14'), ]
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure", "codes")]
View(trends)
trends1 <- trends[which(trends$survey.ID=='2018.01' & trends$survey.ID=='2018.14'), ]
View(trends1)
trends1 <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
View(trends1)
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure", "codes")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
rm(trends1)
avggrowth <- trends[,c("tag","sp")]
avggrowth <- avggrowth[which(duplicated(avggrowth$tag)),]
View(avggrowth)
keys <- colnames(trends)[!grepl('measure',colnames(trends))]
avggrowth <- as.data.table(dat)
avggrowth <- as.data.table(trends)
avggrowth[,list(avg= mean(measure)),keys]
keys
avggrowth[,list(avg= mean(measure)),keys]
avggrowth[,list(mm= mean(measure)),keys]
avggrowth[,lapply(.SD,mean),keys]
aggregate(avggrowth$measure,by=list(keys),data=avggrowth,FUN=mean)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
keys <- colnames(trends)[!grepl('measure',colnames(trends))]
avggrowth <- as.data.table(trends)
avggrowth[,lapply(.SD,mean),keys]
?as.data.table
avggrowth <- setDT(trends)
avggrowth[,lapply(.SD,mean),keys]
avggrowth[,lapply(mean),keys]
?lapply
avggrowth[,lapply(avggrowth,mean),keys]
avggrowth <- setDT(trends)
avggrowth[,lapply(avggrowth$measure,mean),keys]
View(avggrowth)
library(data.table)
keys <- colnames(trends)[!grepl('measure',colnames(trends))]
avggrowth <- setDT(trends)
avggrowth[,lapply(.SD,mean),keys]
library(data.table)
keys <- colnames(trends)[!grepl('measure',colnames(trends))]
avggrowth <- as.data.table(trends)
avggrowth[,lapply(.SD,mean),keys]
avggrowth[,list(mm=mean(measure)),keys]
avggrowth[,lapply(.SD,mean), by=keys]
avggrowth[,lapply(.SD,mean), by=tag]
aggregate(measure ~ ., mean, data=trends)
avggrowth <- aggregate(measure ~ ., mean, data=trends)
View(trends)
test <- do.call(rbind,lapply(lapply(split(trends,trends$tag),`[`,5),colMeans))
dat3<-trends[,list(avggrowth=mean(measure)),list(tag)]
View(dat3)
dat4<-with(trends,aggregate(cbind(measure),list(tag),FUN=mean))
colnames(dat4)<-colnames(trends)[c(1:5)]
View(dat4)
View(dat3)
View(dat4)
library(plyr)
dat5<-ddply(trends,.(tag),colwise(mean,c("measure")))
View(dat3)
dat3<-trends[,list(avggrowth=diff(measure)),list(tag)]
View(dat3)
growth$sp <- duplicated(trends$sp)
growth<-trends[,list(band.growth=diff(measure)),list(tag)]
growth$sp <- duplicated(trends$sp)
View(growth)
?list
X <- trends[,duplicated(trends$tag)]
X <- trends[,c("tag", "sp")]
X$tag <- duplicated(X$tag)
View(X)
X$tag <- unique(X$tag)
View(X)
X <- unique(X[,"tag"])
View(X)
X <- trends[,c("tag", "sp")]
X <- unique(X[,"tag"])
View(X)
X <- trends[,c("tag", "sp")]
X <- X[duplicated(X),]
View(X)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
growth<-trends[,list(band.growth=diff(measure)),list(tag)]
View(trends)
growth<-trends[,list(band.growth=diff(trends$measure)),list(trends$tag)]
growth<-trends[,list(band.growth=diff(trends$measure))&list(trends$tag)]
growth <- data.table(trends)
growth<-trends[,list(band.growth=diff(measure))&list(tag)]
View(growth)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
library(data.table)
growth <- data.table(trends)
growth<-trends[,list(band.growth=diff(measure))&list(tag)]
growth<-trends[,list(band.growth=diff(measure)),list(tag)]
growth<-growth[,list(band.growth=diff(measure)),list(tag)]
X <- trends[,c("tag", "sp")]
X <- X[duplicated(X),]
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag),list(sp)]
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
View(growth)
order(growth)
order(growth$band.growth)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp,measure)]
View(growth)
range <- c(growth$band.growth)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
range <- c(growth$band.growth)
range <- c(sort(growth$band.growth))
range <- c(sort(growth$band.growth, decreasing=FALSE))
range <- c(sort(growth$band.growth, decreasing=TRUE))
mean(range)
range
range <- range[range >=0]
range
mean(range)
sd(range)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
View(data_install)
data_install$codes <- ifelse(data_install$measure>=133, paste(data_install$codes, "RD", sep = ";"), data_install$codes)
View(data_install)
# Create field_form_bandreplace forms from master
setwd()
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
##in 2018's example, mean=11.88 and sd=8.94, so I'm assigning values in measure >= 133 to have a code of RD.
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
data_install$codes <- ifelse(data_install$measure>=133, paste(data_install$codes, "RD", sep = ";"), data_install$codes)
View(data_install)
ifelse(data_install$codes %in% "", "", ";")
ifelse(data_install$measure>=133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ifelse(data_install$codes %in% "", "", ";"), data_install$codes))
data_install$measure>=133 & !grepl("RD", data_install$codes)
paste(data_install$codes, "RD", sep = ifelse(data_install$codes %in% "", "", ";")
paste(data_install$codes, "RD", sep = ifelse(data_install$codes %in% "", "", ";"))
# Create field_form_bandreplace forms from master
setwd()
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
##in 2018's example, mean=11.88 and sd=8.94, so I'm assigning values in measure >= 133 to have a code of RD.
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
paste(data_install$codes, "RD", sep = ifelse(data_install$codes %in% "", "", ";")
)
ifelse(data_install$measure>=133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ifelse(data_install$codes %in% "", "", ";")), data_install$codes)
data_install$measure>=133 & !grepl("RD", data_install$codes)
ifelse(data_install$measure>=133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";") data_install$codes)
ifelse(data_install$measure>=133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$measure >= 133
data_install$codes
data_install$codes <- as.character(data_install$codes)
ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
grepl("^;", "", data_install$codes)
data_install$codes
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
gsub("^;", "", data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
View(data_install)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
data_install<-data_2018[which(data_2018$codes=='RD'), ]
View(data_install)
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
data_install<-data_install[which(data_install$codes %in% 'RD'), ]
View(data_install)
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
View(data_install)
View(data_2018)
data_install<-data_install[which(data_install$codes %in% 'RD'), ]
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
data_install<-data_install[grepl("RD",data_install[["codes"]]), ]
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
##in 2018's example, mean=11.88 and sd=8.94, so I'm assigning values in measure >= 133 to have a code of RD.
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
data_install<-data_install[grepl("RD",data_install[["codes"]]), ]
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 145 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
data_install<-data_install[grepl("RD",data_install[["codes"]]), ]
##rest of code is for making the field_form
data_install<-data_install[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "location", "dendDiam", "dendroID", "type", "dendHt")]
data_install$measure = NA
data_install$codes = NA
data_install$dendDiam = NA
data_install$dendHt = NA
data_install$type = NA
data_install$dendroID = NA
data_install$install.date = NA
data_install$dbhnew = NA
library(dplyr)
data_install<-data_install %>% rename("codes&notes" = codes, "stem" = stemtag)
?rename
data_install<-data_install %>% rename("codes&notes" = codes, "stem" = stemtag)
library(dplyr)
data_install<-data_install %>% rename("codes&notes" = codes, "stem" = stemtag)
data_install$codes&notes <- data_install$codes
data_install$codes <- data_install$codes&notes
data_install <- rename(data_install,codes="codes&notes", stemtag="stem")
data_install %>% rename(codes&notes=codes, stem=stemtag)
setnames(data_install, old=c("codes", "stemtag"), new=c("codes&notes", "stem"))
View(data_install)
data_install[is.na(data_install)] <- " "
data_install<-data_install[,c(1:6,14,15,11,12,10,13,7:9)]
data_install$location<-gsub("South", "S", data_install$location)
data_install$location<-gsub("North", "N", data_install$location)
matrix <- function(data_install, table_title) {
rbind(c(table_title, rep('', ncol(data_install)-1)), # title
names(data_install), # column names
unname(sapply(data_install, as.character))) # data
}
temp <- matrix(data_install, table_title=('Dendroband Replacement        Date:                       Surveyors:'))
library(xlsx)
write.xlsx(temp, "field_form_bandreplace.xlsx", row.names = FALSE, col.names=FALSE)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/2018/scbi.dendroAll_2018.csv")
trends <- data_2018[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
##in 2018's example, mean=11.88 and sd=8.94, so I'm assigning values in measure >= 133 to have a code of RD.
data_install<-data_2018[which(data_2018$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
##subset by RD codes (having subset by 2018.14 already above)
data_install<-data_install[grepl("RD",data_install[["codes"]]), ]
##rest of code is for making the field_form
data_install<-data_install[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "location", "dendDiam", "dendroID", "type", "dendHt")]
data_install$measure = NA
data_install$codes = NA
data_install$dendDiam = NA
data_install$dendHt = NA
data_install$type = NA
data_install$dendroID = NA
data_install$install.date = NA
data_install$dbhnew = NA
library(dplyr)
setnames(data_install, old=c("codes", "stemtag"), new=c("codes&notes", "stem"))
data_install[is.na(data_install)] <- " "
data_install<-data_install[,c(1:6,14,15,11,12,10,13,7:9)]
data_install$location<-gsub("South", "S", data_install$location)
data_install$location<-gsub("North", "N", data_install$location)
matrix <- function(data_install, table_title) {
rbind(c(table_title, rep('', ncol(data_install)-1)), # title
names(data_install), # column names
unname(sapply(data_install, as.character))) # data
}
temp <- matrix(data_install, table_title=('Dendroband Replacement        Date:                       Surveyors:'))
library(xlsx)
write.xlsx(temp, "field_form_bandreplace.xlsx", row.names = FALSE, col.names=FALSE)
measurement_notes_2010 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2010.csv")
View(measurement_notes_2010)
measurement_notes_2010_chronology <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2010_chronology.csv")
View(measurement_notes_2010_chronology)
meas10 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2010.csv")
chron10 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2010_chronology.csv")
library(compare)
compare(meas10, chron10)
all(meas10==chron10)
all.equal(chron10,meas10)
meas16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2016_17.csv")
chron16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2016_17_chronology.csv")
all.equal(chron10,meas10)
all.equal(chron16,meas16)
meas16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2016_17.csv")
chron16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2016_17_chronology.csv")
all.equal(chron16,meas16)
meas16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2016_17.csv")
chron16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2016_17_chronology.csv")
all.equal(chron16,meas16)
meas16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2016_17.csv")
chron16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2016_17_chronology.csv")
meas16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2016_17.csv")
chron16 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2016_17_chronology.csv")
all.equal(chron16,meas16)
meas10 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/measurement_files/measurement_notes_2010.csv")
View(meas10)
chron10 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/tree_cores/chronologies/measurement_notes_2010_chronology.csv")
View(chron10)
all.equal(chron16,meas16)
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
View(scbi.stem2)
sigeo <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
View(scbi.stem2)
rm(scbi.stem2)
#plot grid coordinates to see if they make sense
plot(sigeo$gx, sigeo$gy)
## divide 4-digit quadrat number by 100 w/o remainder and w/ remainder to get quadrat x and y columns and row separetely
sigeo$quadrat_x <- as.numeric(as.character(sigeo$quadrat)) %/% 100
sigeo$quadrat_y <- as.numeric(as.character(sigeo$quadrat)) %% 100
View(sigeo)
summary(sigeo$grid_y)
names(sigeo)
## get grid coordinates by multiplying each quadrat coordinate by 20 and adding the corresponding within-quadrat coordinate (lx and ly)
sigeo$grid_x <- (sigeo$quadrat_x - 1)
sigeo$grid_y <- (sigeo$quadrat_y - 1)
View(sigeo)
#Instal this package if you don't have it, get libraries
#install.packages("rgdal")
library(rgdal)
library(sp)
## NAD83 coordinates of the SW and NW corners of the SIGEO plot
NAD83.SW <- c(747385.521, 4308506.438)
NAD83.NW <- c(747370.676, 4309146.156)
## Angle (in radians) at which the plot's western boundary is offset from true NAD83 line of latitude
Offset <- atan2(NAD83.NW[1] - NAD83.SW[1], NAD83.NW[2] - NAD83.SW[2])
## Function that transforms grid coordinates into NAD83 coordinates
grid2nad83 <- function(x, y) {
NAD83.X <- NAD83.SW[1] + (x*cos(Offset) + y*sin(Offset))
NAD83.Y <- NAD83.SW[2] + (-x*sin(Offset) + y*cos(Offset))
nad83 <- list(NAD83.X, NAD83.Y)
names(nad83) <- c("NAD83_X", "NAD83_Y")
nad83
}
## add NAD83 coordinate columns to SIGEO data table
sigeo<-data.frame(sigeo, grid2nad83(sigeo$gx, sigeo$gy))
# Add lat lon to the file, first run these 2 lines
utmcoor<-SpatialPoints(cbind(sigeo$NAD83_X, sigeo$NAD83_Y), proj4string=CRS("+proj=utm +zone=17S"))
longlatcoor<-spTransform(utmcoor,CRS("+proj=longlat"))
#add the results ('latlongcoor' output) as two new columns in original dataframe
sigeo$lat<- coordinates(longlatcoor)[,2]
sigeo$lon <- coordinates(longlatcoor)[,1]
plot(sigeo$lon, sigeo$lat)
View(sigeo)
## get grid coordinates by multiplying each quadrat coordinate by 20 and adding the corresponding within-quadrat coordinate (lx and ly)
sigeo$grid_x <- 20*(sigeo$quadrat_x - 1)
sigeo$grid_y <- 20*(sigeo$quadrat_y - 1)
View(sigeo)
sigeo$grid_y <- 20*(sigeo$quadrat_y - 1) + sigeo$ly

########################################################################################
#7. interpreting the outcomes ####
library(ggplot2)
#this plot shows regression line for certain variables against resistance values, separated by year and species
ggplot(trees_all, aes(x = dbh_ln, y = resist.value, colour = year)) +
facet_wrap(~sp, nrow=4) +
geom_point() +
theme_classic() +
geom_line(data = cbind(trees_all, pred = predict(lmm_all[[32]])), aes(y = pred)) +
theme(legend.position = "right")
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/field_forms")
##1a. if new trees added between last fall survey and spring survey, do this ####
data_2019 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2019.csv")
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
prevmeasbi <- subset(data_2018,survey.ID=="2018.14") #subset by previous survey.ID to get previous measure. If printing this for the spring survey, use the last survey.ID from last year.
data_bi <- data_2019
data_bi$prevmeas <- prevmeasbi$measure[match(data_bi$stemID, prevmeasbi$stemID)]
View(data_bi)
data_bi<-data_bi[ ,c("tag", "stemtag", "sp", "dbh", "quadrat", "lx", "ly", "measure", "crown.condition", "crown.illum", "codes", "prevmeas")]
data_bi$prevmeas <- ifelse(!is.na(data_bi$measure), data_bi$measure, data_bi$prevmeas)
View(data_bi)
check <- data_bi[is.na(data_bi$prevmeas), ]
View(check)
data_bi$measure = NA
data_bi$codes = NA
data_bi$crown.condition = NA
data_bi$crown.illum = NA
data_bi$"Fall measure"= NA
library(dplyr)
data_bi<-data_bi %>% rename("Spring measure" = measure, "codes&notes_spr" = codes, "stem" = stemtag, "crown" = crown.condition, "illum" = crown.illum)
cols <- colnames(data_bi[,c(8:11,13)])
data_bi[,cols] <- " "
data_bi$"codes&notes_fall" <- ""
data_bi<-data_bi[,c("tag", "stem", "sp", "dbh", "quadrat", "lx", "ly", "prevmeas", "Spring measure", "Fall measure", "crown", "illum", "codes&notes_spr", "codes&notes_fall")]
View(data_bi)
##1c. continue with code from either 1a. or 1b. ####
#assign values per tag by survey area (based on biannual map in https://github.com/SCBI-ForestGEO/Dendrobands/tree/master/maps)
data_bi$area <- ""
data_bi$area <-
ifelse((data_bi$quadrat %in% c(1301:1303))|
(data_bi$quadrat %in% c(1401:1404))|
(data_bi$quadrat %in% c(1501:1515))|
(data_bi$quadrat %in% c(1601:1615))|
(data_bi$quadrat %in% c(1701:1715))|
(data_bi$quadrat %in% c(1801:1815))|
(data_bi$quadrat %in% c(1901:1915))|
(data_bi$quadrat %in% c(2001:2015)), 1,
ifelse((data_bi$quadrat %in% c(504:507))|
(data_bi$quadrat %in% c(608))|
(data_bi$quadrat %in% c(703:712))|
(data_bi$quadrat %in% c(803:813))|
(data_bi$quadrat %in% c(901:913))|
(data_bi$quadrat %in% c(1003:1012))|
(data_bi$quadrat %in% c(1101:1112))|
(data_bi$quadrat %in% c(1201:1212))|
(data_bi$quadrat %in% c(1304:1311))|
(data_bi$quadrat %in% c(1405:1411)), 2,
ifelse((data_bi$quadrat %in% c(101:115))|
(data_bi$quadrat %in% c(201:215))|
(data_bi$quadrat %in% c(301:315))|
(data_bi$quadrat %in% c(401:415))|
(data_bi$quadrat %in% c(502,514,515,610,611,614
,615,701,702,713,714,715
,801,1001,1014,1313,1314
,1315,1413)), 3,
ifelse((data_bi$quadrat %in% c(116:132))|
(data_bi$quadrat %in% c(216:232))|
(data_bi$quadrat %in% c(316:332))|
(data_bi$quadrat %in% c(416:432))|
(data_bi$quadrat %in% c(516:532))|
(data_bi$quadrat %in% c(616:624))|
(data_bi$quadrat %in% c(716:724))|
(data_bi$quadrat %in% c(816:824)), 4,
ifelse((data_bi$quadrat %in% c(916:924))|
(data_bi$quadrat %in% c(1016:1024))|
(data_bi$quadrat %in% c(1116:1124))|
(data_bi$quadrat %in% c(1216:1224))|
(data_bi$quadrat %in% c(1316:1324))|
(data_bi$quadrat %in% c(1416,1417,1422)), 5,
ifelse((data_bi$quadrat %in% c(1419))|
(data_bi$quadrat %in% c(1516:1524))|
(data_bi$quadrat %in% c(1616:1624))|
(data_bi$quadrat %in% c(1716:1724))|
(data_bi$quadrat %in% c(1816:1824))|
(data_bi$quadrat %in% c(1916:1924))|
(data_bi$quadrat %in% c(2016:2024)), 6,
ifelse((data_bi$quadrat %in% c(625:632))|
(data_bi$quadrat %in% c(725:732))|
(data_bi$quadrat %in% c(825:832))|
(data_bi$quadrat %in% c(925:932))|
(data_bi$quadrat %in% c(1025:1029,1031,1032)), 7,
ifelse((data_bi$quadrat %in% c(1030))|
(data_bi$quadrat %in% c(1125:1132))|
(data_bi$quadrat %in% c(1225:1232))|
(data_bi$quadrat %in% c(1325:1332))|
(data_bi$quadrat %in% c(1425:1432)), 8,
ifelse((data_bi$quadrat %in% c(1525:1532))|
(data_bi$quadrat %in% c(1625:1632))|
(data_bi$quadrat %in% c(1725:1732))|
(data_bi$quadrat %in% c(1825:1832))|
(data_bi$quadrat %in% c(1925:1932))|
(data_bi$quadrat %in% c(2025:2032)), 9, "")))))))))
View(data_bi)
##1c. continue with code from either 1a. or 1b. ####
#assign values per tag by survey area (based on biannual map in https://github.com/SCBI-ForestGEO/Dendrobands/tree/master/maps)
data_bi$area <- ""
data_bi$area <-
ifelse((data_bi$quadrat %in% c(1301:1303))|
(data_bi$quadrat %in% c(1401:1404))|
(data_bi$quadrat %in% c(1501:1515))|
(data_bi$quadrat %in% c(1601:1615))|
(data_bi$quadrat %in% c(1701:1715))|
(data_bi$quadrat %in% c(1801:1815))|
(data_bi$quadrat %in% c(1901:1915))|
(data_bi$quadrat %in% c(2001:2015)), 1,
ifelse((data_bi$quadrat %in% c(404:405))|
(data_bi$quadrat %in% c(504:507))|
(data_bi$quadrat %in% c(608))|
(data_bi$quadrat %in% c(703:712))|
(data_bi$quadrat %in% c(803:813))|
(data_bi$quadrat %in% c(901:913))|
(data_bi$quadrat %in% c(1003:1012))|
(data_bi$quadrat %in% c(1101:1112))|
(data_bi$quadrat %in% c(1201:1212))|
(data_bi$quadrat %in% c(1304:1311))|
(data_bi$quadrat %in% c(1405:1411)), 2,
ifelse((data_bi$quadrat %in% c(101:115))|
(data_bi$quadrat %in% c(201:215))|
(data_bi$quadrat %in% c(301:315))|
(data_bi$quadrat %in% c(401:403, 406:415))|
(data_bi$quadrat %in% c(502,514,515,610,611,614
,615,701,702,713,714,715
,801,1001,1014,1313,1314
,1315,1413)), 3,
ifelse((data_bi$quadrat %in% c(116:132))|
(data_bi$quadrat %in% c(216:232))|
(data_bi$quadrat %in% c(316:332))|
(data_bi$quadrat %in% c(416:432))|
(data_bi$quadrat %in% c(516:532))|
(data_bi$quadrat %in% c(616:624))|
(data_bi$quadrat %in% c(716:724))|
(data_bi$quadrat %in% c(816:824)), 4,
ifelse((data_bi$quadrat %in% c(916:924))|
(data_bi$quadrat %in% c(1016:1024))|
(data_bi$quadrat %in% c(1116:1124))|
(data_bi$quadrat %in% c(1216:1224))|
(data_bi$quadrat %in% c(1316:1324))|
(data_bi$quadrat %in% c(1416,1417,1422)), 5,
ifelse((data_bi$quadrat %in% c(1419))|
(data_bi$quadrat %in% c(1516:1524))|
(data_bi$quadrat %in% c(1616:1624))|
(data_bi$quadrat %in% c(1716:1724))|
(data_bi$quadrat %in% c(1816:1824))|
(data_bi$quadrat %in% c(1916:1924))|
(data_bi$quadrat %in% c(2016:2024)), 6,
ifelse((data_bi$quadrat %in% c(625:632))|
(data_bi$quadrat %in% c(725:732))|
(data_bi$quadrat %in% c(825:832))|
(data_bi$quadrat %in% c(925:932))|
(data_bi$quadrat %in% c(1025:1029,1031,1032)), 7,
ifelse((data_bi$quadrat %in% c(1030))|
(data_bi$quadrat %in% c(1125:1132))|
(data_bi$quadrat %in% c(1225:1232))|
(data_bi$quadrat %in% c(1325:1332))|
(data_bi$quadrat %in% c(1425:1432)), 8,
ifelse((data_bi$quadrat %in% c(1525:1532))|
(data_bi$quadrat %in% c(1625:1632))|
(data_bi$quadrat %in% c(1725:1732))|
(data_bi$quadrat %in% c(1825:1832))|
(data_bi$quadrat %in% c(1925:1932))|
(data_bi$quadrat %in% c(2025:2032)), 9, "")))))))))
View(data_bi)
data_2019 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2019.csv")
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
prevmeasbi <- subset(data_2018,survey.ID=="2018.14") #subset by previous survey.ID to get previous measure. If printing this for the spring survey, use the last survey.ID from last year.
data_bi <- data_2019
data_bi$prevmeas <- prevmeasbi$measure[match(data_bi$stemID, prevmeasbi$stemID)]
data_bi<-data_bi[ ,c("tag", "stemtag", "sp", "dbh", "quadrat", "lx", "ly", "measure", "crown.condition", "crown.illum", "codes", "prevmeas")]
data_bi$prevmeas <- ifelse(!is.na(data_bi$measure), data_bi$measure, data_bi$prevmeas)
check <- data_bi[is.na(data_bi$prevmeas), ]
View(data_bi)
data_bi$codes
data_bi$measure = NA
data_bi$crown.condition = NA
data_bi$crown.illum = NA
data_bi$"Fall measure"= NA
library(dplyr)
data_bi<-data_bi %>% rename("Spring measure" = measure, "codes&notes_spr" = codes, "stem" = stemtag, "crown" = crown.condition, "illum" = crown.illum)
cols <- colnames(data_bi[,c(8:11,13)])
data_bi[,cols] <- " "
View(data_bi)
data_2019 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2019.csv")
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
prevmeasbi <- subset(data_2018,survey.ID=="2018.14") #subset by previous survey.ID to get previous measure. If printing this for the spring survey, use the last survey.ID from last year.
data_bi <- data_2019
data_bi$prevmeas <- prevmeasbi$measure[match(data_bi$stemID, prevmeasbi$stemID)]
data_bi<-data_bi[ ,c("tag", "stemtag", "sp", "dbh", "quadrat", "lx", "ly", "measure", "crown.condition", "crown.illum", "codes", "prevmeas")]
data_bi$prevmeas <- ifelse(!is.na(data_bi$measure), data_bi$measure, data_bi$prevmeas)
check <- data_bi[is.na(data_bi$prevmeas), ]
data_bi$measure = NA
data_bi$crown.condition = NA
data_bi$crown.illum = NA
data_bi$"Fall measure"= NA
library(dplyr)
data_bi<-data_bi %>% rename("Spring measure" = measure, "codes&notes_spr" = codes, "stem" = stemtag, "crown" = crown.condition, "illum" = crown.illum)
cols <- colnames(data_bi[,c(8:10,13)])
data_bi[,cols] <- " "
View(data_bi)
data_bi$"codes&notes_fall" <- data_bi$`codes&notes_spr`
data_bi<-data_bi[,c("tag", "stem", "sp", "dbh", "quadrat", "lx", "ly", "prevmeas", "Spring measure", "Fall measure", "crown", "illum", "codes&notes_spr", "codes&notes_fall")]
##1c. continue with code from either 1a. or 1b. ####
#assign values per tag by survey area (based on biannual map in https://github.com/SCBI-ForestGEO/Dendrobands/tree/master/maps)
data_bi$area <- ""
data_bi$area <-
ifelse((data_bi$quadrat %in% c(1301:1303))|
(data_bi$quadrat %in% c(1401:1404))|
(data_bi$quadrat %in% c(1501:1515))|
(data_bi$quadrat %in% c(1601:1615))|
(data_bi$quadrat %in% c(1701:1715))|
(data_bi$quadrat %in% c(1801:1815))|
(data_bi$quadrat %in% c(1901:1915))|
(data_bi$quadrat %in% c(2001:2015)), 1,
ifelse((data_bi$quadrat %in% c(404:405))|
(data_bi$quadrat %in% c(504:507))|
(data_bi$quadrat %in% c(608))|
(data_bi$quadrat %in% c(703:712))|
(data_bi$quadrat %in% c(803:813))|
(data_bi$quadrat %in% c(901:913))|
(data_bi$quadrat %in% c(1003:1012))|
(data_bi$quadrat %in% c(1101:1112))|
(data_bi$quadrat %in% c(1201:1212))|
(data_bi$quadrat %in% c(1304:1311))|
(data_bi$quadrat %in% c(1405:1411)), 2,
ifelse((data_bi$quadrat %in% c(101:115))|
(data_bi$quadrat %in% c(201:215))|
(data_bi$quadrat %in% c(301:315))|
(data_bi$quadrat %in% c(401:403, 406:415))|
(data_bi$quadrat %in% c(502,514,515,610,611,614
,615,701,702,713,714,715
,801,1001,1014,1313,1314
,1315,1413)), 3,
ifelse((data_bi$quadrat %in% c(116:132))|
(data_bi$quadrat %in% c(216:232))|
(data_bi$quadrat %in% c(316:332))|
(data_bi$quadrat %in% c(416:432))|
(data_bi$quadrat %in% c(516:532))|
(data_bi$quadrat %in% c(616:624))|
(data_bi$quadrat %in% c(716:724))|
(data_bi$quadrat %in% c(816:824)), 4,
ifelse((data_bi$quadrat %in% c(916:924))|
(data_bi$quadrat %in% c(1016:1024))|
(data_bi$quadrat %in% c(1116:1124))|
(data_bi$quadrat %in% c(1216:1224))|
(data_bi$quadrat %in% c(1316:1324))|
(data_bi$quadrat %in% c(1416,1417,1422)), 5,
ifelse((data_bi$quadrat %in% c(1419))|
(data_bi$quadrat %in% c(1516:1524))|
(data_bi$quadrat %in% c(1616:1624))|
(data_bi$quadrat %in% c(1716:1724))|
(data_bi$quadrat %in% c(1816:1824))|
(data_bi$quadrat %in% c(1916:1924))|
(data_bi$quadrat %in% c(2016:2024)), 6,
ifelse((data_bi$quadrat %in% c(625:632))|
(data_bi$quadrat %in% c(725:732))|
(data_bi$quadrat %in% c(825:832))|
(data_bi$quadrat %in% c(925:932))|
(data_bi$quadrat %in% c(1025:1029,1031,1032)), 7,
ifelse((data_bi$quadrat %in% c(1030))|
(data_bi$quadrat %in% c(1125:1132))|
(data_bi$quadrat %in% c(1225:1232))|
(data_bi$quadrat %in% c(1325:1332))|
(data_bi$quadrat %in% c(1425:1432)), 8,
ifelse((data_bi$quadrat %in% c(1525:1532))|
(data_bi$quadrat %in% c(1625:1632))|
(data_bi$quadrat %in% c(1725:1732))|
(data_bi$quadrat %in% c(1825:1832))|
(data_bi$quadrat %in% c(1925:1932))|
(data_bi$quadrat %in% c(2025:2032)), 9, "")))))))))
View(data_bi)
##1c. continue with code from either 1a. or 1b. ####
#assign values per tag by survey area (based on biannual map in https://github.com/SCBI-ForestGEO/Dendrobands/tree/master/maps)
data_bi$area <- ""
data_bi$area <-
ifelse((data_bi$quadrat %in% c(1301:1303))|
(data_bi$quadrat %in% c(1401:1404))|
(data_bi$quadrat %in% c(1501:1515))|
(data_bi$quadrat %in% c(1601:1615))|
(data_bi$quadrat %in% c(1701:1715))|
(data_bi$quadrat %in% c(1801:1815))|
(data_bi$quadrat %in% c(1901:1915))|
(data_bi$quadrat %in% c(2001:2015)), 1,
ifelse((data_bi$quadrat %in% c(404:405))|
(data_bi$quadrat %in% c(504:507))|
(data_bi$quadrat %in% c(603:609))|
(data_bi$quadrat %in% c(703:712))|
(data_bi$quadrat %in% c(803:813))|
(data_bi$quadrat %in% c(901:913))|
(data_bi$quadrat %in% c(1003:1012))|
(data_bi$quadrat %in% c(1101:1112))|
(data_bi$quadrat %in% c(1201:1212))|
(data_bi$quadrat %in% c(1304:1311))|
(data_bi$quadrat %in% c(1405:1411)), 2,
ifelse((data_bi$quadrat %in% c(101:115))|
(data_bi$quadrat %in% c(201:215))|
(data_bi$quadrat %in% c(301:315))|
(data_bi$quadrat %in% c(401:403, 406:415))|
(data_bi$quadrat %in% c(502,514,515,610,611,614
,615,701,702,713,714,715
,801,1001,1014,1313,1314
,1315,1413)), 3,
ifelse((data_bi$quadrat %in% c(116:132))|
(data_bi$quadrat %in% c(216:232))|
(data_bi$quadrat %in% c(316:332))|
(data_bi$quadrat %in% c(416:432))|
(data_bi$quadrat %in% c(516:532))|
(data_bi$quadrat %in% c(616:624))|
(data_bi$quadrat %in% c(716:724))|
(data_bi$quadrat %in% c(816:824)), 4,
ifelse((data_bi$quadrat %in% c(916:924))|
(data_bi$quadrat %in% c(1016:1024))|
(data_bi$quadrat %in% c(1116:1124))|
(data_bi$quadrat %in% c(1216:1224))|
(data_bi$quadrat %in% c(1316:1324))|
(data_bi$quadrat %in% c(1416,1417,1422)), 5,
ifelse((data_bi$quadrat %in% c(1419))|
(data_bi$quadrat %in% c(1516:1524))|
(data_bi$quadrat %in% c(1616:1624))|
(data_bi$quadrat %in% c(1716:1724))|
(data_bi$quadrat %in% c(1816:1824))|
(data_bi$quadrat %in% c(1916:1924))|
(data_bi$quadrat %in% c(2016:2024)), 6,
ifelse((data_bi$quadrat %in% c(625:632))|
(data_bi$quadrat %in% c(725:732))|
(data_bi$quadrat %in% c(825:832))|
(data_bi$quadrat %in% c(925:932))|
(data_bi$quadrat %in% c(1025:1029,1031,1032)), 7,
ifelse((data_bi$quadrat %in% c(1030))|
(data_bi$quadrat %in% c(1125:1132))|
(data_bi$quadrat %in% c(1225:1232))|
(data_bi$quadrat %in% c(1325:1332))|
(data_bi$quadrat %in% c(1425:1432)), 8,
ifelse((data_bi$quadrat %in% c(1525:1532))|
(data_bi$quadrat %in% c(1625:1632))|
(data_bi$quadrat %in% c(1725:1732))|
(data_bi$quadrat %in% c(1825:1832))|
(data_bi$quadrat %in% c(1925:1932))|
(data_bi$quadrat %in% c(2025:2032)), 9, "")))))))))
data_bi$area
data_bi$area <- is.numeric(data_bi$area)
View(data_bi)
##1c. continue with code from either 1a. or 1b. ####
#assign values per tag by survey area (based on biannual map in https://github.com/SCBI-ForestGEO/Dendrobands/tree/master/maps)
data_bi$area <- ""
data_bi$area <-
ifelse((data_bi$quadrat %in% c(1301:1303))|
(data_bi$quadrat %in% c(1401:1404))|
(data_bi$quadrat %in% c(1501:1515))|
(data_bi$quadrat %in% c(1601:1615))|
(data_bi$quadrat %in% c(1701:1715))|
(data_bi$quadrat %in% c(1801:1815))|
(data_bi$quadrat %in% c(1901:1915))|
(data_bi$quadrat %in% c(2001:2015)), 1,
ifelse((data_bi$quadrat %in% c(404:405))|
(data_bi$quadrat %in% c(504:507))|
(data_bi$quadrat %in% c(603:609))|
(data_bi$quadrat %in% c(703:712))|
(data_bi$quadrat %in% c(803:813))|
(data_bi$quadrat %in% c(901:913))|
(data_bi$quadrat %in% c(1003:1012))|
(data_bi$quadrat %in% c(1101:1112))|
(data_bi$quadrat %in% c(1201:1212))|
(data_bi$quadrat %in% c(1304:1311))|
(data_bi$quadrat %in% c(1405:1411)), 2,
ifelse((data_bi$quadrat %in% c(101:115))|
(data_bi$quadrat %in% c(201:215))|
(data_bi$quadrat %in% c(301:315))|
(data_bi$quadrat %in% c(401:403, 406:415))|
(data_bi$quadrat %in% c(502,514,515,610,611,614
,615,701,702,713,714,715
,801,1001,1014,1313,1314
,1315,1413)), 3,
ifelse((data_bi$quadrat %in% c(116:132))|
(data_bi$quadrat %in% c(216:232))|
(data_bi$quadrat %in% c(316:332))|
(data_bi$quadrat %in% c(416:432))|
(data_bi$quadrat %in% c(516:532))|
(data_bi$quadrat %in% c(616:624))|
(data_bi$quadrat %in% c(716:724))|
(data_bi$quadrat %in% c(816:824)), 4,
ifelse((data_bi$quadrat %in% c(916:924))|
(data_bi$quadrat %in% c(1016:1024))|
(data_bi$quadrat %in% c(1116:1124))|
(data_bi$quadrat %in% c(1216:1224))|
(data_bi$quadrat %in% c(1316:1324))|
(data_bi$quadrat %in% c(1416,1417,1422)), 5,
ifelse((data_bi$quadrat %in% c(1419))|
(data_bi$quadrat %in% c(1516:1524))|
(data_bi$quadrat %in% c(1616:1624))|
(data_bi$quadrat %in% c(1716:1724))|
(data_bi$quadrat %in% c(1816:1824))|
(data_bi$quadrat %in% c(1916:1924))|
(data_bi$quadrat %in% c(2016:2024)), 6,
ifelse((data_bi$quadrat %in% c(625:632))|
(data_bi$quadrat %in% c(725:732))|
(data_bi$quadrat %in% c(825:832))|
(data_bi$quadrat %in% c(925:932))|
(data_bi$quadrat %in% c(1025:1029,1031,1032)), 7,
ifelse((data_bi$quadrat %in% c(1030))|
(data_bi$quadrat %in% c(1125:1132))|
(data_bi$quadrat %in% c(1225:1232))|
(data_bi$quadrat %in% c(1325:1332))|
(data_bi$quadrat %in% c(1425:1432)), 8,
ifelse((data_bi$quadrat %in% c(1525:1532))|
(data_bi$quadrat %in% c(1625:1632))|
(data_bi$quadrat %in% c(1725:1732))|
(data_bi$quadrat %in% c(1825:1832))|
(data_bi$quadrat %in% c(1925:1932))|
(data_bi$quadrat %in% c(2025:2032)), 9, "")))))))))
need.area <- data_bi[!data_bi$area == "[[:digit:]]", ]
View(need.area)
need.area <- data_bi[data_bi$area == " ", ]
need.area <- data_bi[data_bi$area == "", ]
View(need.area)
##1c. continue with code from either 1a. or 1b. ####
#assign values per tag by survey area (based on biannual map in https://github.com/SCBI-ForestGEO/Dendrobands/tree/master/maps)
data_bi$area <- ""
data_bi$area <-
ifelse((data_bi$quadrat %in% c(1301:1303))|
(data_bi$quadrat %in% c(1401:1404))|
(data_bi$quadrat %in% c(1501:1515))|
(data_bi$quadrat %in% c(1601:1615))|
(data_bi$quadrat %in% c(1701:1715))|
(data_bi$quadrat %in% c(1801:1815))|
(data_bi$quadrat %in% c(1901:1915))|
(data_bi$quadrat %in% c(2001:2015)), 1,
ifelse((data_bi$quadrat %in% c(404:405))|
(data_bi$quadrat %in% c(504:507))|
(data_bi$quadrat %in% c(603:609))|
(data_bi$quadrat %in% c(703:712))|
(data_bi$quadrat %in% c(803:813))|
(data_bi$quadrat %in% c(901:913))|
(data_bi$quadrat %in% c(1003:1012))|
(data_bi$quadrat %in% c(1101:1112))|
(data_bi$quadrat %in% c(1201:1212))|
(data_bi$quadrat %in% c(1304:1311))|
(data_bi$quadrat %in% c(1405:1411)), 2,
ifelse((data_bi$quadrat %in% c(101:115))|
(data_bi$quadrat %in% c(201:215))|
(data_bi$quadrat %in% c(301:315))|
(data_bi$quadrat %in% c(401:403, 406:415))|
(data_bi$quadrat %in% c(502,512:515))|
(data_bi$quadrat %in% c(610,611,614,615,
701,702,713,714,715
,801,1001,1013,1014,1215,
1313,1314,1315,1413,1415)), 3,
ifelse((data_bi$quadrat %in% c(116:132))|
(data_bi$quadrat %in% c(216:232))|
(data_bi$quadrat %in% c(316:332))|
(data_bi$quadrat %in% c(416:432))|
(data_bi$quadrat %in% c(516:532))|
(data_bi$quadrat %in% c(616:624))|
(data_bi$quadrat %in% c(716:724))|
(data_bi$quadrat %in% c(816:824)), 4,
ifelse((data_bi$quadrat %in% c(916:924))|
(data_bi$quadrat %in% c(1016:1024))|
(data_bi$quadrat %in% c(1116:1124))|
(data_bi$quadrat %in% c(1216:1224))|
(data_bi$quadrat %in% c(1316:1324))|
(data_bi$quadrat %in% c(1416:1418,1420:1424)), 5,
ifelse((data_bi$quadrat %in% c(1419))|
(data_bi$quadrat %in% c(1516:1524))|
(data_bi$quadrat %in% c(1616:1624))|
(data_bi$quadrat %in% c(1716:1724))|
(data_bi$quadrat %in% c(1816:1824))|
(data_bi$quadrat %in% c(1916:1924))|
(data_bi$quadrat %in% c(2016:2024)), 6,
ifelse((data_bi$quadrat %in% c(625:632))|
(data_bi$quadrat %in% c(725:732))|
(data_bi$quadrat %in% c(825:832))|
(data_bi$quadrat %in% c(925:932))|
(data_bi$quadrat %in% c(1025:1029,1031,1032)), 7,
ifelse((data_bi$quadrat %in% c(1030))|
(data_bi$quadrat %in% c(1125:1132))|
(data_bi$quadrat %in% c(1225:1232))|
(data_bi$quadrat %in% c(1325:1332))|
(data_bi$quadrat %in% c(1425:1432)), 8,
ifelse((data_bi$quadrat %in% c(1525:1532))|
(data_bi$quadrat %in% c(1625:1632))|
(data_bi$quadrat %in% c(1725:1732))|
(data_bi$quadrat %in% c(1825:1832))|
(data_bi$quadrat %in% c(1925:1932))|
(data_bi$quadrat %in% c(2025:2032)), 9, "")))))))))
need.area <- data_bi[data_bi$area == "", ]
matrix <- function(data_bi, table_title) {
rbind(c(table_title, rep('', ncol(data_bi)-1)), # title
names(data_bi), # column names
unname(sapply(data_bi, as.character))) # data
}
temp <- matrix(data_bi, table_title=('Biannual Survey       Spr.Date:                       Spr.SurveyID:                  Spr.Recorder:                   |FallDate:                       FallSurveyID:                 FallRecorder:'))
library(xlsx)
write.xlsx(temp, "field_form_biannual_2019.xlsx", row.names=FALSE, col.names=FALSE) #we write the file to .xlsx to more easily change print settings and cell dimensions
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms")
##2a. spring survey data entry ####
data_biannual <- data_bi
library(data.table)
setnames(data_biannual, old=c("stem", "Spring measure", "codes&notes_spr", "crown", "illum"), new=c("stemtag", "measure", "codes", "crown.condition", "crown.illum"))
data_biannual <- data_biannual[!colnames(data_biannual) %in% c("Fall measure", "codes&notes_fall", "dbh", "lx", "ly")]
newcols <- c("survey.ID", "year", "month", "day", "notes", "field.recorders", "data.enter")
data_biannual[,newcols] <- ""
data_biannual <- data_biannual[, c("tag", "stemtag", "sp", "quadrat", "survey.ID", "year", "month", "day", "measure", "crown.condition", "crown.illum", "codes", "notes", "field.recorders", "data.enter", "area")]
View(data_biannual)
write.csv(data_biannual, "data_entry_biannual_spr2019.csv", row.names=FALSE)

test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename[i])
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
data_list
View(data_list)
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename)
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename)
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename)
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
file_list <- list.files("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011", pattern="data_entry_intraannual")
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename)
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011")
file_list <- list.files("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011", pattern="data_entry_intraannual")
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename)
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
View(data_2011)
data_2011 <- data_2011[duplicated(data_2011),]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_2011 <- data_2011[!duplicated(data_2011),]
View(data_2011)
write.csv(data_2011, "scbi.dendroAll_2011.csv", row.names=FALSE)
# for biannual
#####
# for last biannual survey
data_biannual <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/data_entry_biannual_2011-23.csv")
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_biannual <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/data_entry_biannual_2011-23.csv")
names2011 <- c(colnames(data_2011))
namesbi <- c(colnames(data_biannual))
## find the names that are in data_2017 but not in data_biannual
missing <- setdiff(names2011, namesbi)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2017)
## add these missed names to data_biannual in order to combine to the master
data_biannual[missing] <- NA
data_biannual$area <- NULL #this column is only relevant for field
test <- rbind(data_2011, data_biannual)
test <- test[order(test[,1], test[,3]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
#test$dendroID <- na.locf(test$dendroID.spring)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
##rewrite the date to be standard format (ONLY if current written dates are in same format) & (ONLY after last biannual survey for year)
test$exactdate <- format(as.Date(test$exactdate,format="%m/%d/%Y"), "%Y-%m-%d")
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_biannual <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/data_entry_biannual_2011-23.csv")
names2011 <- c(colnames(data_2011))
namesbi <- c(colnames(data_biannual))
## find the names that are in data_2017 but not in data_biannual
missing <- setdiff(names2011, namesbi)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2017)
## add these missed names to data_biannual in order to combine to the master
data_biannual[missing] <- NA
data_biannual$area <- NULL #this column is only relevant for field
test <- rbind(data_2011, data_biannual)
test <- test[order(test[,1], test[,3]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
#test$dendroID <- na.locf(test$dendroID.spring)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
##rewrite the date to be standard format (ONLY if current written dates are in same format) & (ONLY after last biannual survey for year)
test$exactdate <- format(as.Date(test$exactdate,format="%m/%d/%Y"), "%Y-%m-%d")
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
# for intraannual
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename)
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011")
file_list <- list.files("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011", pattern="data_entry_intraannual")
# for intraannual
for (i in seq(along=file_list)){
filename = file_list[[i]]
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_intra <- read.csv(filename)
names2011 <- c(colnames(data_2011))
namesintra <- c(colnames(data_intra))
## find the names that are in data_2018 but not in data_biannual
missing <- setdiff(names2011, namesintra)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2018)
## add these missed names to data_biannual in order to combine to the master
data_intra[missing] <- NA
data_intra$area <- NULL #this column is only relevant for field
data_intra$location <- NULL #only for when merging data pre-2018
test <- rbind(data_2011, data_intra)
test <- test[order(test[,"tag"], test[,"survey.ID"]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
test$dendroID <- na.locf(test$dendroID)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
}
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_2011 <- data_2011[!duplicated(data_2011),]
write.csv(data_2011, "scbi.dendroAll_2011.csv", row.names=FALSE)
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
data_biannual <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/data_entry_biannual_2011-23.csv")
names2011 <- c(colnames(data_2011))
namesbi <- c(colnames(data_biannual))
## find the names that are in data_2017 but not in data_biannual
missing <- setdiff(names2011, namesbi)
## if need be, do the opposite
# missing <- setdiff(namesbi, names2017)
## add these missed names to data_biannual in order to combine to the master
data_biannual[missing] <- NA
data_biannual$area <- NULL #this column is only relevant for field
test <- rbind(data_2011, data_biannual)
test <- test[order(test[,1], test[,3]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
#test$dendroID <- na.locf(test$dendroID.spring)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
test <- rbind(data_2011, data_biannual)
data_biannual$location <- NULL
test <- rbind(data_2011, data_biannual)
test <- test[order(test[,1], test[,3]),] #order by tag and survey.ID
## these values are constant from the previous survey.ID
library(zoo)
test$biannual <- na.locf(test$biannual)
test$intraannual <- na.locf(test$intraannual)
test$lx <- na.locf(test$lx)
test$ly <- na.locf(test$ly)
test$stemID <- na.locf(test$stemID)
test$treeID <- na.locf(test$treeID)
test$dbh <- na.locf(test$dbh)
## these should be constant from previous survey, but obviously are updated whenever a new dendroband is installed
#test$dendroID <- na.locf(test$dendroID.spring)
test$type <- na.locf(test$type)
test$dendHt <- na.locf(test$dendHt)
## these values are not always constant
test$new.band <- ifelse(is.na(test$new.band), 0, test$new.band)
deadcodes <- c("D", "DS", "DC", "DN", "DT")
test$status <- as.character(test$status)
test$status <- ifelse((is.na(test$status))&(test$codes %in% deadcodes), "dead",
ifelse((is.na(test$status)), na.locf(test$status), test$status))
test$codes <- as.character(test$codes)
test$codes <- ifelse(is.na(test$codes), "", test$codes)
test$notes <- as.character(test$notes)
test$notes <- ifelse(is.na(test$notes), "", test$notes)
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
View(test)
test$biannual <- 1
write.csv(test, "scbi.dendroAll_2011.csv", row.names=FALSE)
# for biannual
#####
# for last biannual survey
data_2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2011/scbi.dendroAll_2011.csv")
test$dendroID <- na.locf(test$dendroID)
View(data_2011)
data_2011$dendroID <- na.locf(data_2011$dendroID)
View(data_2011)
write.csv(data_2011, "scbi.dendroAll_2011.csv", row.names=FALSE)

dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendro_trees.csv")
View(dendro_trees)
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendro_trees.csv")
View(dendro_trees)
#dendro_trees
tree_replace <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2019/data_entry_new_trees_2019.csv")
View(tree_replace)
recensus2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
library(data.table)
tree_replace <- setnames(tree_replace, old=c("stem", "dbhnew"), new=c("stemtag", "dbh"))
tree_replace <- setnames(tree_replace, old=c("year", "month", "day"), new=c("dendro.start.year", "dendro.start.month", "dendro.start.day"))
tree_replace$biannual <- as.numeric(tree_replace$biannual)
tree_replace$stemID <- recensus2013$stemID[match(tree_replace$tag, recensus2013$tag)]
tree_replace$treeID <- recensus2013$treeID[match(tree_replace$tag, recensus2013$tag)]
tree_replace$cored <- 0
extra <- setdiff(colnames(dendro_trees), colnames(tree_replace))
extra
class(tree_replace$quadrat)
tree_replace$quadrat
tree_replace$quadrat %% 100 >= 16
tree_replace$location <- ifelse(tree_replace$quadrat %% 100 >= 16, "North", "South")
View(tree_replace)
tree_replace$codes <- NULL
tree_replace$notes <- NULL
extra <- setdiff(colnames(dendro_trees), colnames(tree_replace))
extar
extra
tree_replace[,extra] <- NA
setdiff(colnames(tree_replace), colnames(dendro_trees))
remove_cols <- setdiff(colnames(tree_replace), colnames(dendro_trees))
tree_replace[,remove_cols] <- NULL
geo_stems <- read.csv("V:/SIGEO/GIS_data/R-script_Convert local-global coord/scbi_stem_utm_lat_long.csv")
View(geo_stems)
View(recensus2013)
stem_coords <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/census3_coord_local_plot.csv")
View(stem_coords)
View(geo_stems)
stem_coords <- setnames(fulltreesgeo, old=c("qx","qy","px","py"), new=c("lx","ly","gx","gy"))
tree_replace$lx <- stem_coords$lx[match(tree_replace$tag, stem_coords$tag)]
tree_replace$ly <- stem_coords$ly[match(tree_replace$tag, stem_coords$tag)]
tree_replace$gx <- stem_coords$gx[match(tree_replace$tag, stem_coords$tag)]
tree_replace$gy <- stem_coords$gy[match(tree_replace$tag, stem_coords$tag)]
tree_replace$lon <- geo_stems$lon[match(tree_replace$tag, geo_stems$tag)]
tree_replace$lat <- geo_stems$lat[match(tree_replace$tag, geo_stems$tag)]
tree_replace$NAD83_X <- geo_stems$NAD83_X[match(tree_replace$tag, geo_stems$tag)]
tree_replace$NAD83_Y <- geo_stems$NAD83_Y[match(tree_replace$tag, geo_stems$tag)]
tree_replace <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2019/data_entry_new_trees_2019.csv")
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendro_trees.csv")
recensus2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
geo_stems <- read.csv("V:/SIGEO/GIS_data/R-script_Convert local-global coord/scbi_stem_utm_lat_long.csv")
stem_coords <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/census3_coord_local_plot.csv")
library(data.table)
tree_replace <- setnames(tree_replace, old=c("stem", "dbhnew"), new=c("stemtag", "dbh"))
tree_replace <- setnames(tree_replace, old=c("year", "month", "day"), new=c("dendro.start.year", "dendro.start.month", "dendro.start.day"))
tree_replace$biannual <- as.numeric(tree_replace$biannual)
tree_replace$stemID <- recensus2013$stemID[match(tree_replace$tag, recensus2013$tag)]
tree_replace$treeID <- recensus2013$treeID[match(tree_replace$tag, recensus2013$tag)]
tree_replace$cored <- 0
tree_replace$location <- ifelse(tree_replace$quadrat %% 100 >= 16, "North", "South")
add_cols <- setdiff(colnames(dendro_trees), colnames(tree_replace))
tree_replace[,add_cols] <- NA
remove_cols <- setdiff(colnames(tree_replace), colnames(dendro_trees))
tree_replace[,remove_cols] <- NULL
#add in coordinates
stem_coords <- setnames(stem_coords, old=c("qx","qy","px","py"), new=c("lx","ly","gx","gy"))
tree_replace$lx <- stem_coords$lx[match(tree_replace$tag, stem_coords$tag)]
tree_replace$ly <- stem_coords$ly[match(tree_replace$tag, stem_coords$tag)]
tree_replace$gx <- stem_coords$gx[match(tree_replace$tag, stem_coords$tag)]
tree_replace$gy <- stem_coords$gy[match(tree_replace$tag, stem_coords$tag)]
tree_replace$lon <- geo_stems$lon[match(tree_replace$tag, geo_stems$tag)]
tree_replace$lat <- geo_stems$lat[match(tree_replace$tag, geo_stems$tag)]
tree_replace$NAD83_X <- geo_stems$NAD83_X[match(tree_replace$tag, geo_stems$tag)]
tree_replace$NAD83_Y <- geo_stems$NAD83_Y[match(tree_replace$tag, geo_stems$tag)]
View(tree_replace)
dendro_trees <- rbind(dendro_trees, tree_replace)
dendro_trees <- dendro_trees[order(dendro_trees$tag, dendro_trees$stemtag), ]
View(dendro_trees)
dendroID <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendroID.csv")
View(dendroID)
##8b. dendroID ####
tree_replace <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2019/data_entry_new_trees_2019.csv")
dendroID <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendroID.csv")
setdiff(colnames(tree_replace), colnames(dendroID))
View(tree_replace)
recensus2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
library(data.table)
tree_replace <- setnames(tree_replace, old=c("stem", "dbhnew"), new=c("stemtag", "dbh"))
tree_replace$new.band <- 1
tree_replace$survey.ID <- 2019
tree_replace$stemID <- recensus2013$stemID[match(tree_replace$tag, recensus2013$tag)]
tree_replace$treeID <- recensus2013$treeID[match(tree_replace$tag, recensus2013$tag)]
remove_cols <- setdiff(colnames(tree_replace), colnames(dendroID))
remove_cols
add_cols <- setdiff(colnames(dendroID), colnames(tree_replace))
add_cols
tree_replace[,remove_cols] <- NULL
add_cols <- setdiff(colnames(dendroID), colnames(tree_replace))
tree_replace[,add_cols] <- NA
dendroID <- rbind(dendroID, tree_replace)
dendroID <- dendroID[order(dendroID$tag, dendroID$stemtag), ]
View(dendroID)
tree_replace$dbh <- tree_replace$dbh*10
tree_replace$dendDiam <- tree_replace$dendDiam*10
View(tree_replace)
library(data.table)
dendro_2019 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2019.csv")
tree_replace <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2019/data_entry_new_trees_2019.csv")
recensus2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
tree_replace <- setnames(tree_replace, old=c("stem", "dbhnew"), new=c("stemtag", "dbh"))
tree_replace$biannual <- as.numeric(tree_replace$biannual)
tree_replace$status <- "alive"
tree_replace$new.band <- 1
tree_replace$survey.ID <- 2019
tree_replace$stemID <- recensus2013$stemID[match(tree_replace$tag, recensus2013$tag)]
tree_replace$treeID <- recensus2013$treeID[match(tree_replace$tag, recensus2013$tag)]
extra <- setdiff(colnames(dendro_2019), colnames(tree_replace))
tree_replace[,extra] <- NA
dendro_2019 <- rbind(dendro_2019, tree_replace)
dendro_2019 <- dendro_2019[order(dendro_2019$tag, dendro_2019$stemtag), ]
View(dendro_2019)
ANPP <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/results/dendro_trees_ANPP.csv")
ANPP <- ANPP[with(ANPP, order(-ANPP.ANPP_Mg.C.ha1.y1_10cm)), ]
##find the % ANPP contribution for each species
ANPP$percent.totalANPP <- (ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm / sum(ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm))*100
##ignoring litu (over-represented), subset the top 6 species
ANPP <- ANPP[c(2:7), ]
##determine number of individuals to be replacements by finding the % contribution within the subset, then multiplying by the total number of trees that need to be replaced (66).
ANPP$n.replace <- (ANPP$percent.totalANPP / sum(ANPP$percent.totalANPP))*66
ANPP$n.replace <- round(ANPP$n.replace, digits=0)
View(ANPP)
ANPP <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/results/dendro_trees_ANPP.csv")
ANPP <- ANPP[with(ANPP, order(-ANPP.ANPP_Mg.C.ha1.y1_10cm)), ]
##find the % ANPP contribution for each species
ANPP$percent.totalANPP <- (ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm / sum(ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm))*100
View(ANPP)
ANPP <- ANPP[c(9:10), ]
View(ANPP)
ANPP$n.replace <- (ANPP$percent.totalANPP / sum(ANPP$percent.totalANPP))*66
ANPP$n.replace <- round(ANPP$n.replace, digits=0)
View(ANPP)
ANPP$n.replace <- 4
View(ANPP)
ANPP$under.350 <- 2
ANPP$over.350 <- 2
replace <- ANPP[, c(1:4, 9:12)]
View(replace)
recensus2018 <- read.csv("I:/recensus2018.csv")
recensus2018$DBH <- recensus2018$DBH*10
library(data.table)
recensus2018 <- setnames(recensus2018, old=c("Tag", "StemTag", "QuadratName", "Mnemonic", "DBH","Codes"),new=c("tag", "stemtag", "quadrat", "sp", "dbh18", "codes"))
recensus2018$codes <- as.character(recensus2018$codes)
replace$sp <- as.character(replace$sp)
sp <- c(replace$sp) #list of species for replacement trees
n.o350 <- c(replace$over.350)
n.u350 <- c(replace$under.350)
dendrobands <- c(dendro_trees$tag)
#############################################################################
#2 list of dead trees that need to be replaced ####
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendro_trees.csv")
dendrobands <- c(dendro_trees$tag) #trees that are already in dendroband survey
##subset by trees not already in dendrobands, by our target species, by alive trees over 350 dbh
trees.o350 <- subset(recensus2018, !(recensus2018$tag %in% dendrobands) & (recensus2018$sp %in% sp) & !(grepl("D", recensus2018$codes)) & (recensus2018$dbh18 > 350))
#same for under 350 but above 100 (based on range(under.350$dbhdead))
trees.u350 <- subset(recensus2018, !(recensus2018$tag %in% dendrobands) & (recensus2018$sp %in% sp) & !(grepl("D", recensus2018$codes)) & (recensus2018$dbh18 <= 350) & (recensus2018$dbh18 >100))
##this nest loop says: for each replacement sp and the number of trees, generate random trees based on DBH values. The duplicated function is there because it sometimes includes duplicate tags, so be cautious for the number within the output df
test.o350 <- NULL
for (i in seq(along=sp)){
for (j in seq(along=n.o350)){
if(i==j){
species <- sp[[i]]
number <- n.o350[[j]]
species <- subset(trees.o350, trees.o350$sp %in% species)
species <- species[species$dbh18 %in% c(sample(species$dbh18, number)), ]
species <- species[!duplicated(species$dbh18), ]
test.o350 <- rbind(test.o350,species)
}
##same thing for u350
test.u350 <- NULL
for (i in seq(along=sp)){
for (j in seq(along=n.u350)){
if(i==j){
species <- sp[[i]]
number <- n.u350[[j]]
species <- subset(trees.u350, trees.u350$sp %in% species)
species <- species[species$dbh18 %in% c(sample(species$dbh18, number)), ]
species <- species[!duplicated(species$dbh18), ]
test.u350 <- rbind(test.u350,species)
}
fulltrees <- rbind(test.o350, test.u350)
fulltrees <- fulltrees[, c("tag", "stemtag", "quadrat", "sp", "dbh18", "codes")]
View(dendro_trees)
View(fulltrees)
stem_coords <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/census3_coord_local_plot.csv")
fulltreesgeo <- merge(fulltrees, stem_coords, by.x=c("tag", "stemtag","quadrat"), by.y=c("tag", "stemtag","quadratname"))
fulltreesgeo <- setnames(fulltreesgeo, old=c("qx","qy","px","py"), new=c("lx","ly","gx","gy"))
fulltreesgeo <- fulltreesgeo[with(fulltreesgeo, order(tag)), ]
newtrees<-fulltreesgeo[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "codes", "dbh18")] #depending on what data is being added, can add in location column
newtrees$measure = ""
newtrees$dendDiam = ""
newtrees$dendHt = ""
newtrees$type = ""
newtrees$dendroID = ""
newtrees$install.date = ""
newtrees$dbhnew = ""
newtrees$biannual <- 1
newtrees$intra <- ""
newtrees$codes <- as.character(newtrees$codes)
newtrees$codes = ifelse(newtrees$codes %in% "NULL", "", newtrees$codes)
#newtrees$location <-gsub("South", "S", newtrees$location)
#newtrees$location <-gsub("North", "N", newtrees$location)
setnames(newtrees, old=c("codes", "stemtag"), new=c("codes&notes", "stem"))
newtrees <- newtrees[,c(1:6,8,16:17,14,15,13,12,10,11,9,7)]
View(newtrees)
newtrees$intra <- 0
getwd()
matrix <- function(newtrees, table_title) {
rbind(c(table_title, rep('', ncol(newtrees)-1)), # title
names(newtrees), # column names
unname(sapply(newtrees, as.character))) # data
}
temp1 <- matrix(newtrees, table_title=('New Dendroband Trees                    Date:                       Surveyors:'))
library(xlsx)
write.xlsx(temp1, "field_form_new_trees_2019.xlsx", row.names = FALSE, col.names=FALSE)
newtrees$year <- ""
newtrees$month <- ""
newtrees$day <- ""
newtrees$notes <- ""
newtrees$field.recorders <- ""
newtrees$data.enter <- ""
newtrees$install.date <- NULL
library(data.table)
newtrees <- setnames(newtrees, old=c("intra", "codes&notes"), new=c("intraannual", "codes"))
newtrees <- newtrees[ ,c(1:6,17:19,8:16,20:22)]
newtrees[is.na(newtrees)] <- ""
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/data_entry_forms/2019")
View(newtrees)
write.csv(newtrees, "test.csv", row.names=FALSE)
#############################################################################
#2 list of dead trees that need to be replaced ####
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendro_trees.csv")
ANPP <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/results/dendro_trees_ANPP.csv")
ANPP <- ANPP[with(ANPP, order(-ANPP.ANPP_Mg.C.ha1.y1_10cm)), ]
##find the % ANPP contribution for each species
ANPP$percent.totalANPP <- (ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm / sum(ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm))*100
ANPP <- ANPP[c(9:10), ]
View(ANPP)
ANPP$n.replace <- 5
ANPP$n.replace <- 6
ANPP$over.350 <- 3
ANPP$under.350 <- 3
replace <- ANPP[, c(1:4, 9:12)]
View(replace)
recensus2018 <- read.csv("I:/recensus2018.csv")
recensus2018$DBH <- recensus2018$DBH*10
library(data.table)
recensus2018 <- setnames(recensus2018, old=c("Tag", "StemTag", "QuadratName", "Mnemonic", "DBH","Codes"),new=c("tag", "stemtag", "quadrat", "sp", "dbh18", "codes"))
recensus2018$codes <- as.character(recensus2018$codes)
replace$sp <- as.character(replace$sp)
sp <- c(replace$sp) #list of species for replacement trees
n.o350 <- c(replace$over.350)
n.u350 <- c(replace$under.350)
dendrobands <- c(dendro_trees$tag) #trees that are already in dendroband survey
##subset by trees not already in dendrobands, by our target species, by alive trees over 350 dbh
trees.o350 <- subset(recensus2018, !(recensus2018$tag %in% dendrobands) & (recensus2018$sp %in% sp) & !(grepl("D", recensus2018$codes)) & (recensus2018$dbh18 > 350))
#same for under 350 but above 100 (based on range(under.350$dbhdead))
trees.u350 <- subset(recensus2018, !(recensus2018$tag %in% dendrobands) & (recensus2018$sp %in% sp) & !(grepl("D", recensus2018$codes)) & (recensus2018$dbh18 <= 350) & (recensus2018$dbh18 >100))
##this nest loop says: for each replacement sp and the number of trees, generate random trees based on DBH values. The duplicated function is there because it sometimes includes duplicate tags, so be cautious for the number within the output df
test.o350 <- NULL
for (i in seq(along=sp)){
for (j in seq(along=n.o350)){
if(i==j){
species <- sp[[i]]
number <- n.o350[[j]]
species <- subset(trees.o350, trees.o350$sp %in% species)
species <- species[species$dbh18 %in% c(sample(species$dbh18, number)), ]
species <- species[!duplicated(species$dbh18), ]
test.o350 <- rbind(test.o350,species)
}
##same thing for u350
test.u350 <- NULL
for (i in seq(along=sp)){
for (j in seq(along=n.u350)){
if(i==j){
species <- sp[[i]]
number <- n.u350[[j]]
species <- subset(trees.u350, trees.u350$sp %in% species)
species <- species[species$dbh18 %in% c(sample(species$dbh18, number)), ]
species <- species[!duplicated(species$dbh18), ]
test.u350 <- rbind(test.u350,species)
}
fulltrees <- rbind(test.o350, test.u350)
fulltrees <- fulltrees[, c("tag", "stemtag", "quadrat", "sp", "dbh18", "codes")]
View(fulltrees)
test.o350 <- NULL
for (i in seq(along=sp)){
for (j in seq(along=n.o350)){
if(i==j){
species <- sp[[i]]
number <- n.o350[[j]]
species <- subset(trees.o350, trees.o350$sp %in% species)
species <- species[species$dbh18 %in% c(sample(species$dbh18, number)), ]
species <- species[!duplicated(species$dbh18), ]
test.o350 <- rbind(test.o350,species)
}
##same thing for u350
test.u350 <- NULL
for (i in seq(along=sp)){
for (j in seq(along=n.u350)){
if(i==j){
species <- sp[[i]]
number <- n.u350[[j]]
species <- subset(trees.u350, trees.u350$sp %in% species)
species <- species[species$dbh18 %in% c(sample(species$dbh18, number)), ]
species <- species[!duplicated(species$dbh18), ]
test.u350 <- rbind(test.u350,species)
}
fulltrees <- rbind(test.o350, test.u350)
fulltrees <- fulltrees[, c("tag", "stemtag", "quadrat", "sp", "dbh18", "codes")]
View(fulltrees)
stem_coords <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/census3_coord_local_plot.csv")
fulltreesgeo <- merge(fulltrees, stem_coords, by.x=c("tag", "stemtag","quadrat"), by.y=c("tag", "stemtag","quadratname"))
fulltreesgeo <- setnames(fulltreesgeo, old=c("qx","qy","px","py"), new=c("lx","ly","gx","gy"))
fulltreesgeo <- fulltreesgeo[with(fulltreesgeo, order(tag)), ]
newtrees<-fulltreesgeo[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "codes", "dbh18")] #depending on what data is being added, can add in location column
newtrees$measure = ""
newtrees$dendDiam = ""
newtrees$dendHt = ""
newtrees$type = ""
newtrees$dendroID = ""
newtrees$install.date = ""
newtrees$dbhnew = ""
newtrees$biannual <- 1
newtrees$intra <- ""
newtrees$codes <- as.character(newtrees$codes)
newtrees$codes = ifelse(newtrees$codes %in% "NULL", "", newtrees$codes)
#newtrees$location <-gsub("South", "S", newtrees$location)
#newtrees$location <-gsub("North", "N", newtrees$location)
setnames(newtrees, old=c("codes", "stemtag"), new=c("codes&notes", "stem"))
newtrees <- newtrees[,c(1:6,8,16:17,14,15,13,12,10,11,9,7)]
matrix <- function(newtrees, table_title) {
rbind(c(table_title, rep('', ncol(newtrees)-1)), # title
names(newtrees), # column names
unname(sapply(newtrees, as.character))) # data
}
temp1 <- matrix(newtrees, table_title=('New Dendroband Trees                    Date:                       Surveyors:'))
library(xlsx)
write.xlsx(temp1, "field_form_new_trees_2019.xlsx", row.names = FALSE, col.names=FALSE)
getwd()
newtrees$year <- ""
newtrees$month <- ""
newtrees$day <- ""
newtrees$notes <- ""
newtrees$field.recorders <- ""
newtrees$data.enter <- ""
newtrees$install.date <- NULL
library(data.table)
newtrees <- setnames(newtrees, old=c("intra", "codes&notes"), new=c("intraannual", "codes"))
newtrees <- newtrees[ ,c(1:6,17:19,8:16,20:22)]
newtrees[is.na(newtrees)] <- ""
View(newtrees)
write.csv(newtrees, "test.csv", row.names=FALSE)

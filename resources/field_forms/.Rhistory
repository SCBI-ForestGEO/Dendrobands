setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/field_forms")
dendro18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
#Quick: number of bands that need to be fixed
length(c(grep("RD", dendro18$codes)))
data_field<-dendro_2018[which(data_2018$survey.ID>='2018.14' & data_2018$codes=='RD'), ]
#subset by RD codes and one entry per stem
data_field<-data_field[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "notes", "dendDiam", "dendroID", "type", "dendHt")]
data_field$measure = NA
data_field$codes = NA
data_field$notes = NA
data_field$dendDiam = NA
data_field$dendHt = NA
data_field$type = NA
data_field$dendroID = NA
data_field$year = NA
data_field$month = NA
data_field$day = NA
data_field$surveyor = NA
data_field$dbhnew = NA
data_field<-data_field[,c(1:6,14:16,18,11,12,10,13,7:9,17)]
data_field<-sapply(data_field, as.character)
data_field[is.na(data_field)] <- " "
data_field<-dendro_2018[which(dendro_2018$survey.ID>='2018.14' & dendro_2018$codes=='RD'), ]
#subset by RD codes and one entry per stem
data_field<-data_field[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "notes", "dendDiam", "dendroID", "type", "dendHt")]
data_field$measure = NA
data_field$codes = NA
data_field$notes = NA
data_field$dendDiam = NA
data_field$dendHt = NA
data_field$type = NA
data_field$dendroID = NA
data_field$year = NA
data_field$month = NA
data_field$day = NA
data_field$surveyor = NA
data_field$dbhnew = NA
data_field<-data_field[,c(1:6,14:16,18,11,12,10,13,7:9,17)]
data_field<-sapply(data_field, as.character)
data_field[is.na(data_field)] <- " "
#1c Create data_entry form ####
data_field<-dendro_2018[which(dendro_2018$survey.ID>='2018.14' & dendro_2018$codes=='RD'), ]
data_field<-dendro18[which(dendro18$survey.ID>='2018.14' & dendro18$codes=='RD'), ]
#subset by RD codes and one entry per stem
data_field<-data_field[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "notes", "dendDiam", "dendroID", "type", "dendHt")]
data_field$measure = NA
data_field$codes = NA
data_field$notes = NA
data_field$dendDiam = NA
data_field$dendHt = NA
data_field$type = NA
data_field$dendroID = NA
data_field$year = NA
data_field$month = NA
data_field$day = NA
data_field$surveyor = NA
data_field$dbhnew = NA
data_field<-data_field[,c(1:6,14:16,18,11,12,10,13,7:9,17)]
data_field<-sapply(data_field, as.character)
data_field[is.na(data_field)] <- " "
data_field<-dendro18[which(dendro18$survey.ID>='2018.14' & dendro18$codes=='RD'), ]
#subset by RD codes and one entry per stem
data_field<-data_field[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "notes", "dendDiam", "dendroID", "type", "dendHt")]
data_field$measure = NA
data_field$codes = NA
data_field$notes = NA
data_field$dendDiam = NA
data_field$dendHt = NA
data_field$type = NA
data_field$dendroID = NA
data_field$year = NA
data_field$month = NA
data_field$day = NA
data_field$surveyor = NA
data_field$dbhnew = NA
data_field<-data_field[ ,c(1:6,14:16,18,11,12,10,13,7:9,17)]
data_field<-sapply(data_field, as.character)
data_field[is.na(data_field)] <- " "
data_field<-dendro18[which(dendro18$survey.ID>='2018.14' & dendro18$codes=='RD'), ]
#subset by RD codes and one entry per stem
data_field<-data_field[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "notes", "dendDiam", "dendroID", "type", "dendHt")]
data_field$measure = NA
data_field$codes = NA
data_field$notes = NA
data_field$dendDiam = NA
data_field$dendHt = NA
data_field$type = NA
data_field$dendroID = NA
data_field$year = NA
data_field$month = NA
data_field$day = NA
data_field$surveyor = NA
data_field$dbhnew = NA
data_field<-data_field[ ,c(1:6,14:16,18,11,12,10,13,7:9,17)]
data_field[is.na(data_field)] <- " "
testInheritedMethods()<-dendro18[which(dendro18$codes=='RD'), ]
test<-dendro18[which(dendro18$codes=='RD'), ]
#Quick: number of bands that need to be fixed
length(c(grep("RD", dendro18$codes)))
#1c Create data_entry form ####
data_field<-dendro18[which(dendro18$survey.ID>='2018.14' & dendro18$codes %in% 'RD'), ]
trends <- dendro18[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
##if don't have much time, then focus first on those bands that really need fixing
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
##in 2018's example, mean=11.88 and sd=8.94, so I'm assigning values in measure >= 133 to have a code of RD.
data_install<-dendro18[which(dendro18$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
data_install<-data_install[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "dbh", "measure", "codes", "location", "dendDiam", "dendroID", "type", "dendHt")]
data_install$measure = NA
data_install$codes = NA
data_install$dendDiam = NA
data_install$dendHt = NA
data_install$type = NA
data_install$dendroID = NA
data_install$install.date = NA
data_install$dbhnew = NA
library(data.table)
setnames(data_install, old=c("codes", "stemtag"), new=c("codes&notes", "stem"))
data_install[is.na(data_install)] <- " "
data_install<-data_install[,c(1:7,15,16,12,13,11,14,8:10)]
length(c(grep("RD", dendro_install$codes)))
length(c(grep("RD", data_install$codes)))
View(data_install)
data_install<-dendro18[which(dendro18$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
length(c(grep("RD", data_install$codes)))
View(data_field)
data_fix_all <- data_install[which(data_install$codes == "RD"), ]
data_fix_all <- data_install[which(data_install$codes %in% "RD"), ]
length(c(grep("RD", data_fix_all$codes)))
data_fix_all <- data_install[which("RD" %in% data_install$codes), ]
data_fix_all <- data_install[which(data_install$codes %in% "RD"), ]
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/field_forms")
dendro18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
#Quick: number of bands that need to be fixed
length(c(grep("RD", dendro18$codes)))
#1 Create field and data_entry forms for trees that need fixing ####
##Either do 1a or 1b, then move to step 2.
##1a if have more time, determine # of dendrobands whose window is too large. These will need to be changed at some point. ####
trends <- dendro18[,c("tag", "stemtag", "survey.ID", "sp", "measure")]
trends <- trends[which(trends$survey.ID==c('2018.01', '2018.14')), ]
##determine which trees will need to have dendroband replaced based on measurements. The max a caliper can measure is 153.71 mm.
##if don't have much time, then focus first on those bands that really need fixing
library(data.table)
growth <- data.table(trends)
growth<-growth[,list(band.growth=diff(measure)),list(tag,sp)]
##range of measurement values over the growing season
range <- c(sort(growth$band.growth, decreasing=TRUE))
range <- range[range >=0]
range
mean(range)
sd(range)
##in 2018's example, mean=11.88 and sd=8.94, so I'm assigning values in measure >= 133 to have a code of RD.
data_install<-dendro18[which(dendro18$survey.ID=='2018.14'), ]
data_install$codes <- as.character(data_install$codes)
data_install$codes <- ifelse(data_install$measure >= 133 & !grepl("RD", data_install$codes), paste(data_install$codes, "RD", sep = ";"), data_install$codes)
data_install$codes <- gsub("^;", "", data_install$codes)
data_fix_all <- data_install[which(data_install$codes %in% "RD"), ]
length(c(grep("RD", data_install$codes)))
test <- data_install[data_install$codes == "RD", ]
View(test)
View(data_install)
test <- data_install[grep("RD", data_install$codes), ]
View(test)
data_fix_all <- data_install[grep("RD", data_install$codes), ]
#1b If don't have much time, focus on fixing the bands that need to be fixed ####
##these bands were marked as "RD" already from the field survey.
data_fix <- dendro18[grep("RD", dendro18$codes), ]
View(data_fix)
data_fix <- data_fix[which(data_fix$survey.ID>= 2018.14), ]
data_entry<-data_fix[ ,c("tag", "stemtag", "sp", "quadrat", "lx", "ly", "measure", "codes", "notes", "dendDiam", "dendroID", "type", "dendHt")]
data_entry$measure = NA
data_entry$codes = NA
data_entry$notes = NA
data_entry$dendDiam = NA
data_entry$dendHt = NA
data_entry$type = NA
data_entry$dendroID = NA
data_entry$year = NA
data_entry$month = NA
data_entry$day = NA
data_entry$surveyor = NA
data_entry$dbhnew = NA
data_entry<-data_entry[ ,c(1:6,14:16,18,11,12,10,13,7:9,17)]
data_entry[is.na(data_entry)] <- " "
write.csv(data_entry, "data_entry_fix_replace.csv", row.names=FALSE)
getwd()
#Quick: number of bands that need to be fixed
length(c(grep("RD", dendro18$codes)))
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/resources/field_forms")
dendro18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
#1 quick check of number of trees that need to be replaced
q <- dendro18[which(dendro18$survey.ID==c('2018.14')), ]
length(c(grep("dead", q$status)))
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendro_trees.csv")
dendrofull <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_dimensions/tree_crowns/cored_dendroband_crown_position_data/dendro_cored_full.csv")
dead <- dendro_trees[which(!(is.na(dendro_trees$mortality.year))), ]
dendrofull$dbhall <- pmax(dendrofull$dbh2008, dendrofull$dbh2013, dendrofull$dbh2018)
dead$dbhdead <- dendrofull$dbhall[match(dead$stemID, dendrofull$stemID)]
dead <- dead[, c(1:7,22,8:21)]
View(dead)
ANPP <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/results/dendro_trees_ANPP.csv")
ANPP <- ANPP[with(ANPP, order(-ANPP.ANPP_Mg.C.ha1.y1_10cm)), ]
##find the % ANPP contribution for each species
ANPP$percent.totalANPP <- (ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm / sum(ANPP$ANPP.ANPP_Mg.C.ha1.y1_10cm))*100
##ignoring litu (over-represented), subset the top 6 species
ANPP <- ANPP[c(2:7), ]
##determine number of individuals to be replacements by finding the % contribution within the subset, then multiplying by the total number of trees that need to be replaced (66).
ANPP$n.replace <- (ANPP$percent.totalANPP / sum(ANPP$percent.totalANPP))*66
ANPP$n.replace <- round(ANPP$n.replace, digits=0)
##split evenly by size class
over.350 <- dead[dead$dbhdead > 350, ]
under.350 <- dead[dead$dbhdead <= 350, ]
ANPP$under.350 <- c(2,2,2,1,1,1) #9 replacements under 350 dbh
ANPP$over.350 <- ANPP$n.replace - ANPP$under.350
replace <- ANPP[, c(1:4, 9:12)]
##double check the variety of dead intraannual
q <- dead[dead$intraannual ==1 & dead$dbhdead<=350, ]
length(q$dbhdead) #=1, so intra dead over 350 =8.
rm(q)
##represent the range of intraannual. Remember, all intraannual trees are biannual trees, so any new intra must be pulled from new biannual.
##this arrangement can be changed if we want to have other species.
replace$is.intraannual.u350 <- c(0,1,0,0,0,0)
replace$is.intraannual.o350 <- c(3,2,2,0,0,1)
replace <- replace[, c(1:7,9,8,10)]

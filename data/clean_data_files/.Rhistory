data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #for intraannual first
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min>0)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
View(dbhmin)
View(dbhmax)
data_trees <- data_2018[!duplicated(data_2018[7])]
data_trees <- data_2018[!duplicated(data_2018[7]),]
View(data_trees)
View(data_trees)
data_trees <- data_trees[c("sp")
data_trees <- data_trees[c("sp")]
data_trees <- data_trees[c("sp")]
data_trees$dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
library(tidyverse)
list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
View(dbhmax)
View(dbhmin)
View(dbhavg)
dbhmax$sp <- dbhmax$Group.1
View(dbhmax)
names(dbhmax) <- c("sp")
View(dbhmax)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
library(tidyverse)
list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
library(tidyverse)
list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
data_merged <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
View(data_merged)
View(dbhmax)
View(dbhmin)
View(dbhmax)
View(data_merged)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
View(data_2018)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
library(tidyverse)
data_merged <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
data_merged$biannual <- sum(data_2018$sp=="(data_merged$sp)")
View(data_merged)
data_merged$biannual <- sum(data_2018$sp==data_merged$sp)
data_merged$biannual <- sum(data_2018$sp==sp %in% data_merged$sp)
?freq
table(data_2018$sp, data_2018$biannual)
countbi <- table(data_2018$sp, data_2018$biannual)
countintra <- table(data_2018$sp, data_2018$intraannual)
data_merged <- list(data_trees,countbi, countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01')
countbi <- table(data_2018$sp, data_2018$biannual)
countintra <- table(data_2018$sp, data_2018$intraannual)
countbi
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01', drop = TRUE)
countbi <- table(data_2018$sp, data_2018$biannual)
countintra <- table(data_2018$sp, data_2018$intraannual)
countbi
View(data_01)
countbi <- table(data_01$sp, data_01$biannual)
countintra <- table(data_01$sp, data_01$intraannual)
countbi
?as.data.frame.matrix
countbi <- as.data.frame.matrix(table(data_01$sp, data_01$biannual))
View(countbi)
countbi <- as.data.frame.matrix(table(data_01$sp, data_01$biannual),row.names=TRUE)
View(countbi)
countbi <- as.data.frame.matrix(table(data_01$sp, data_01$biannual),row.names=FALSE)
View(countbi)
countbi <- as.data.frame.matrix(table(data_01$sp, data_01$biannual))
View(countbi)
countbi <- as.data.frame.matrix(table(data_01$sp, data_01$sp, data_01$biannual))
?table
countbi <- as.data.frame.matrix(table(data_01$sp, data_01$biannual, data_01$sp))
data.frame(rbind(table(data_01$sp, data_01$biannual))
)
countbi <-data.frame(rbind(table(data_01$sp, data_01$biannual))
)
View(countbi)
colnames(countintra) <- c("sp", "count")
countintra
countbi<- as.data.frame.matrix(table(data_01$sp, data_01$biannual))
setDT(countbi, keep.rownames=TRUE)[]
library(data.table)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "count")
View(countbi)
colnames(countbi) <- c("sp", "biannual")
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
library(data.table) #create data.frame with count of sp per survey
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01')
countbi<- as.data.frame.matrix(table(data_01$sp, data_01$biannual))
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual))
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "intraannual")
countrintra
countintra
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual))
View(countintra)
View(countbi)
View(countintra)
View(data_01)
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual==1))
View(countintra)
setDT(countintra, keep.rownames=TRUE)[]
countintra$FALSE <- NULL
countintra$FALSE -> NULL
countintra$FALSE -> NA
countintra$FALSE <- NULL
colnames(countintra) <- c("sp", "wrong" "intraannual")
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
library(tidyverse) #merge the data.frames together
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
View(data_merged)
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual==1)) %>%
setDT(countintra, keep.rownames=TRUE)[] %>%
colnames(countintra) <- c("sp", "wrong", "intraannual") %>%
countintra$wrong <- NULL
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual==1)) %>%
setDT(countintra, keep.rownames=TRUE)[] %>%
colnames(countintra) <- c("sp", "wrong", "intraannual")
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- as.data.frame.matrix(table(data_01$sp, data_01$biannual))
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual==1))
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
View(data_merged)
write.csv(data_merged, "dendro_trees_dbhcount.csv")
getwd()
data_merged <- data_merged[order(data_merged$sp),]
View(data_merged)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhavg) <- c("sp", "dbhavg")
names(dbhmin) <- c("sp", "dbhmin")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
View(dbhavg)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- as.data.frame.matrix(table(data_01$sp, data_01$biannual))
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual==1))
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
data_merged <- data_merged[order(data_merged$sp),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
countbi<- addmargins(table(data_01$sp, data_01$biannual))
View(countbi)
countbi<- addmargins(table(data_01$sp, data_01$biannual),2)
View(countbi)
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
View(countbi)
View(countbi)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- addmargins(table(data_01$sp, data_01$intraannual),1)
View(countintra)
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual==1))
countintra<- addmargins(table(data_01$sp, data_01$intraannual),1)
countintra<- as.data.frame.matrix(table(data_01$sp, data_01$intraannual))
countintra<- addmargins(table(data_01$sp, data_01$intraannual),1)
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1),1)
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1, all=FALSE),1)
View(countintra)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1,1))
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
data_merged <- data_merged[order(data_merged$sp),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1,1))
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
data_merged <- data_merged[order(data_merged$sp),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1,1))
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1, 1))
countintra<- addmargins(table(data_01$sp, data_01$intraannual=1, 1))
countintra<- addmargins(table(data_01$sp, data_01$intraannual=='1', 1))
countintra<- addmargins(table(data_01$sp, data_01$intraannual, 1))
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1), 1)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp")
data_merged <- data_merged[order(data_merged$sp),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp", all=TRUE)
View(data_merged)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp", all=T)
data_merged <- list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg) %>% reduce(left_join,by="sp", all.x=TRUE)
data_merged <- merge(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg,by="sp", all=TRUE)
?colsums
?sums
?sum,
?sum
?colSums
data_merged <- merge(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg,by="sp", all=TRUE)
data_merged <- merge(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg,by="sp")
View(countbi)
View(countintra)
View(data_trees)
View(dbhavg)
View(dbhmax)
View(dbhmin)
data_merged <- merge(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg, by="sp")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1), 1)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
data_merged <- merge(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg, by="sp")
?rbind
data_merged <- do.call("merge", list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg), by="sp", all=TRUE)
View(data_merged)
colSums(data_merged$biannual)
colSums(data_merged)
?colSums
data_merged <- rbind(data_merged, c("Total", colSums(data_merged[2:3])))
View(data_merged)
data_merged <- do.call("merge", list(data_trees,countbi,countintra,dbhmin,dbhmax,dbhavg), by="sp", all=TRUE)
data_merged <- rbind(data_merged, c("Total", colSums(data_merged[,2:3])))
View(data_merged)
data_count <- merge(countbi, countintra, by=sp)
data_count <- merge(countbi, countintra, by="sp")
data_num <- do.call("merge", list(data_trees,dbhmin,dbhmax,dbhavg))
data_num <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join, by="sp")
View(data_count)
View(data_num)
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
View(data_merged)
data_merged <- data_merged[order(data_merged$sp),]
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax")
names(dbhmin) <- c("sp", "dbhmin")
names(dbhavg) <- c("sp", "dbhavg")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1), 1)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
#have to make two separate dataframes, then merge them together to make sure the "Sum" row is kept
data_count <- merge(countbi, countintra, by="sp")
data_num <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join, by="sp")
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
data_merged <- data_merged[order(data_merged$sp),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
?order\
?order
View(data_merged)
data_merged <- data_merged[c(1:21,23,24,22),]
View(data_merged)
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax.mm")
names(dbhmin) <- c("sp", "dbhmin.mm")
names(dbhavg) <- c("sp", "dbhavg.mm")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1), 1)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
#have to make two separate dataframes, then merge them together to make sure the "Sum" row is kept
data_count <- merge(countbi, countintra, by="sp")
data_num <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join, by="sp")
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
data_merged <- data_merged[order(data_merged$sp),]
data_merged <- data_merged[c(1:21,23,24,22),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax.mm")
names(dbhmin) <- c("sp", "dbhmin.mm")
names(dbhavg) <- c("sp", "dbhavg.mm")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1), 1)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
#have to make two separate dataframes, then merge them together to make sure the "Sum" row is kept
data_count <- merge(countbi, countintra, by="sp")
data_num <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join, by="sp")
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
data_merged <- data_merged[order(data_merged$sp),]
data_merged <- data_merged[c(1:21,23,24,22),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)
data_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018/scbi.dendroAll_2018.csv")
data_surveys<- subset(data_2018,data_2018$survey.ID=='2018.01' & data_2018$status=='alive') #get rid of '0' values for min
data_trees <- data_2018[!duplicated(data_2018[7]),]
data_trees <- data_trees[c("sp")] #list that shows all sp alive and dead
#make data.frames with the dbhmax,min,mean by sp
dbhmax <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), max)
dbhmin <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), min)
dbhavg <- aggregate(data_surveys$dbh, by=list(data_surveys$sp), mean)
names(dbhmax) <- c("sp", "dbhmax.mm")
names(dbhmin) <- c("sp", "dbhmin.mm")
names(dbhavg) <- c("sp", "dbhavg.mm")
is.num <- sapply(dbhavg,is.numeric)
dbhavg[is.num] <- lapply(dbhavg[is.num], round, 1)
#create data.frame with count of sp per survey
library(data.table)
data_01<-subset(data_2018,data_2018$survey.ID=='2018.01') #get all sp
countbi<- addmargins(table(data_01$sp, data_01$biannual),1)
countbi<- as.data.frame.matrix(countbi)
setDT(countbi, keep.rownames=TRUE)[]
colnames(countbi) <- c("sp", "biannual.n")
countintra<- addmargins(table(data_01$sp, data_01$intraannual==1), 1)
countintra<- as.data.frame.matrix(countintra)
setDT(countintra, keep.rownames=TRUE)[]
colnames(countintra) <- c("sp", "wrong", "intraannual.n")
countintra$wrong <- NULL
#merge the data.frames together
library(tidyverse)
#have to make two separate dataframes, then merge them together to make sure the "Sum" row is kept
data_count <- merge(countbi, countintra, by="sp")
data_num <- list(data_trees,dbhmin,dbhmax,dbhavg) %>% reduce(left_join, by="sp")
data_merged <- merge(data_count, data_num, by="sp", all.x=TRUE)
data_merged <- data_merged[order(data_merged$sp),]
data_merged <- data_merged[c(1:21,23,24,22),]
write.csv(data_merged, "dendro_trees_dbhcount.csv", row.names=FALSE)

#facet_wrap(c("tag", "stemtag"), labeller="label_both")
print(q)
}
dev.off()
pdf(file = "DBH_growth_Dendrobands.pdf")
for (j in names(all_stems)){
dendro <- all_stems[[j]]
dendro$date <- paste0(dendro$month, sep="/", dendro$day, sep="/", dendro$year)
dendro$date <- as.Date(dendro$date, format="%m/%d/%Y")
#dendro$date <- factor(dendro$date, ordered=TRUE)
#dendro$doy <- julian(dendro$month, dendro$day, dendro$year, origin=c(01,01,2018))
q <- ggplot(dendro, aes(x = date, y = dbh2)) +
geom_line(color = "#0c4c8a") +
labs(title = "Tree Growth from Dendrobands 2011-2018",
subtitle = paste0("Tag:", sep=" ", dendro$tag, sep=",",
"Stemtag:", sep=" ", dendro$stemtag),
x = "Date",
y = "DBH in mm") +
theme_minimal()
#facet_wrap(c("tag", "stemtag"), labeller="label_both")
print(q)
}
dev.off()
pdf(file = "DBH_growth_Dendrobands.pdf")
for (j in names(all_stems)){
dendro <- all_stems[[j]]
dendro$date <- paste0(dendro$month, sep="/", dendro$day, sep="/", dendro$year)
dendro$date <- as.Date(dendro$date, format="%m/%d/%Y")
#dendro$date <- factor(dendro$date, ordered=TRUE)
#dendro$doy <- julian(dendro$month, dendro$day, dendro$year, origin=c(01,01,2018))
q <- ggplot(dendro, aes(x = date, y = dbh2)) +
geom_line(color = "#0c4c8a") +
labs(title = "Tree Growth from Dendrobands 2011-2018",
subtitle = paste0("Tag: ", dendro$tag, sep=", ",
"Stemtag:", dendro$stemtag, sep=", ",
"StemID: ", dendro$stemID),
x = "Date",
y = "DBH in mm") +
theme_minimal()
#facet_wrap(c("tag", "stemtag"), labeller="label_both")
print(q)
}
dev.off()
View(all_stems$stemID_11143)
View(all_stems$stemID_11394)
View(all_stems$stemID_12422)
View(all_stems$stemID_13195)
View(all_stems$stemID_1458)
View(all_stems$stemID_14158)
View(all_stems$stemID_14265)
View(all_stems$stemID_14979)
dendro2010 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2010.csv")
dendro2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
dendro2012 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2012.csv")
dendro2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2013.csv")
dendro2014 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2014.csv")
dendro2015 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2015.csv")
dendro2016 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2016.csv")
dendro2017 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2017.csv")
dendro2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
dendro2011 <- dendro2011[dendro2011$new.band==1, ]
dendro2012 <- dendro2012[dendro2012$new.band==1, ]
dendro2013 <- dendro2013[dendro2013$new.band==1, ]
dendro2014 <- dendro2014[dendro2014$new.band==1, ]
dendro2015 <- dendro2015[dendro2015$new.band==1, ]
dendro2016 <- dendro2016[dendro2016$new.band==1, ]
dendro2017 <- dendro2017[dendro2017$new.band==1, ]
dendro2018 <- dendro2018[dendro2018$new.band==1, ]
install <- rbind(dendro2010, dendro2011, dendro2012, dendro2013, dendro2014, dendro2015, dendro2016, dendro2017, dendro2018)
install <- install[ ,colnames(install) %in% c("tag", "stemtag", "sp", "quadrat", "stemID", "treeID", "biannual", "intraannual", "survey.ID", "dendDiam", "dbh", "new.band", "dendroID", "type", "dir", "dendHt", "crown.condition", "crown.illum", "lianas", "measureID")]
install <- install[order(install$tag, install$stemtag), ]
getwd()
write.csv(install, "dendroID.csv", row.names=FALSE)
duplicated(install$dendroID)
q <- install[duplicated(install$dendroID), ]
View(q)
dendro2010 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2010.csv")
dendro2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
dendro2012 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2012.csv")
dendro2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2013.csv")
dendro2014 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2014.csv")
dendro2015 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2015.csv")
dendro2016 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2016.csv")
dendro2017 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2017.csv")
dendro2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
dendro2011 <- dendro2011[dendro2011$new.band==1, ]
dendro2012 <- dendro2012[dendro2012$new.band==1, ]
dendro2013 <- dendro2013[dendro2013$new.band==1, ]
dendro2014 <- dendro2014[dendro2014$new.band==1, ]
dendro2015 <- dendro2015[dendro2015$new.band==1, ]
dendro2016 <- dendro2016[dendro2016$new.band==1, ]
dendro2017 <- dendro2017[dendro2017$new.band==1, ]
dendro2018 <- dendro2018[dendro2018$new.band==1, ]
install <- rbind(dendro2010, dendro2011, dendro2012, dendro2013, dendro2014, dendro2015, dendro2016, dendro2017, dendro2018)
install <- install[ ,colnames(install) %in% c("tag", "stemtag", "sp", "quadrat", "stemID", "treeID", "biannual", "intraannual", "survey.ID", "dendDiam", "dbh", "new.band", "dendroID", "type", "dir", "dendHt", "crown.condition", "crown.illum", "lianas", "measureID")]
install <- install[order(install$tag, install$stemtag), ]
q <- install[duplicated(install$dendroID), ]
View(q)
p <- install[install$dendroID == 208, ]
View(p)
dendro2010 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2010.csv")
dendro2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
dendro2012 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2012.csv")
dendro2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2013.csv")
dendro2014 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2014.csv")
dendro2015 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2015.csv")
dendro2016 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2016.csv")
dendro2017 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2017.csv")
dendro2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
dendro2011 <- dendro2011[dendro2011$new.band==1, ]
dendro2012 <- dendro2012[dendro2012$new.band==1, ]
dendro2013 <- dendro2013[dendro2013$new.band==1, ]
dendro2014 <- dendro2014[dendro2014$new.band==1, ]
dendro2015 <- dendro2015[dendro2015$new.band==1, ]
dendro2016 <- dendro2016[dendro2016$new.band==1, ]
dendro2017 <- dendro2017[dendro2017$new.band==1, ]
dendro2018 <- dendro2018[dendro2018$new.band==1, ]
install <- rbind(dendro2010, dendro2011, dendro2012, dendro2013, dendro2014, dendro2015, dendro2016, dendro2017, dendro2018)
install <- install[ ,colnames(install) %in% c("tag", "stemtag", "sp", "quadrat", "stemID", "treeID", "biannual", "intraannual", "survey.ID", "dendDiam", "dbh", "new.band", "dendroID", "type", "dir", "dendHt", "crown.condition", "crown.illum", "lianas", "measureID")]
install <- install[order(install$tag, install$stemtag), ]
q <- install[duplicated(install$dendroID), ]
write.csv(install, "dendroID.csv", row.names=FALSE)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data", pattern="_201[0-8]*.csv")
years <- c(2010:2018)
#1a. this loop breaks up each year's dendroband trees into separate dataframes by stemID
all_years <- list()
for (k in seq(along=dirs)){
file <- dirs[[k]]
yr <- read.csv(file)
yr_intra <- yr[yr$intraannual==1, ]
all_years[[k]] <- split(yr_intra, yr_intra$stemID)
#  if (file == dirs[[1]]){
#   all_years[[k]] <- split(yr, yr$stemID)
#  }
#  else{
#    all_years[[k]] <- split(yr_intra, yr_intra$stemID)
#  }
}
tent_name <- paste0("trees", sep="_", years)
names(all_years) <- tent_name
#the below loop takes all the unique stemIDs from each year and rbinds them.
all_stems <- list()
for(stemID in sort(unique(unlist(sapply(all_years, names))))) {
all_stems[[paste0("stemID_", stemID)]] <-  do.call(rbind, lapply(years, function(year) all_years[[paste0("trees", sep="_", year)]][[stemID]]))
}
#sort(unique(unlist(sapply(all_years, names)))) -> an explainer:
#sapply says find all the names within all_years
#unlist says take all those names (all those stemIDS) and dump them all together
#unique gets rid of the duplicates, and sort sorts them
#need to call in Condit's functions (also saved in separate R code) for the next bit
objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
#1b. this loop says the following:
##1. Assigns the first dbh of the growth column as the first dbh.
##2. Says the following:
##2i.If new.band=0 (no band change), we have a measure, and we have a previous dbh2, use Condit's function to determine next dbh2 based on caliper measurement.
##2ii. If new.band=0, we have a measure, and the previous dbh2 is NA, use Condit's function by comparing the new measure with the most recent non-NA dbh2.
##2iii. If new.band=0 and the previous measure is NA, give dbh2 a value of NA.
##2iv. If new.band=1 (band and measurement change), we have a measure, and there's a new dbh, assign that dbh to dbh2.
##2v. If new.band=1, we have a measure, and there's no new dbh (indicating a new dbh wasn't recorded when the band was changed), dbh2 is the sum of the differences of the previous dbh2's added to the most recent dbh2.
##2vi. UNCOMMON If new.band=1 , measure is NA, and the dbh in the original column is unchanged , dbh2 is the sum of the differences of the previous dbh2's added to the most recent dbh2.
##2vii. UNCOMMON If new.band=1, measure is NA, and dbh is different, dbh2 is the new dbh plus the mean of the differences of the previous dbh2's.
library(zoo)
for(stems in names(all_stems)) {
tree.n <- all_stems[[stems]]
tree.n$dbh2 <- NA
tree.n$dbh2[1] <- tree.n$dbh[1]
tree.n$dbh2 <- as.numeric(tree.n$dbh2)
tree.n$measure <- as.numeric(tree.n$measure)
tree.n$dbh <- as.numeric(tree.n$dbh)
q <- mean(unlist(tapply(tree.n$measure, tree.n$dendroID, diff)), na.rm=TRUE)
for(i in 2:(nrow(tree.n))){
tree.n$dbh2[[i]] <-
ifelse(tree.n$new.band[[i]] == 0 & tree.n$survey.ID[[i]] == 2014.01 & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & !is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tree.n$dbh2[[i-1]], tree.n$measure[[i-1]], tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tail(na.locf(tree.n$dbh2[1:i-1]), n=1), tail(na.locf(tree.n$measure[1:i-1]), n=1), tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & is.na(tree.n$measure[[i]]), NA,
ifelse(tree.n$new.band[[i]]==1 & !is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 1 & !is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1: i-1]), na.rm = T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[i] + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=TRUE),
tree.n$dbh2))))))))
}
all_stems[[stems]] <- tree.n
}
#2a. for-loop graphs ####
#this code makes graphs for every dendroband stemID
library(ggplot2)
pdf(file = "DBH_growth_Dendrobands.pdf")
for (j in names(all_stems)){
dendro <- all_stems[[j]]
dendro$date <- paste0(dendro$month, sep="/", dendro$day, sep="/", dendro$year)
dendro$date <- as.Date(dendro$date, format="%m/%d/%Y")
#dendro$date <- factor(dendro$date, ordered=TRUE)
#dendro$doy <- julian(dendro$month, dendro$day, dendro$year, origin=c(01,01,2018))
q <- ggplot(dendro, aes(x = date, y = dbh2)) +
geom_line(color = "#0c4c8a") +
labs(title = "Tree Growth from Dendrobands 2011-2018",
subtitle = paste0("Tag: ", dendro$tag, sep=", ",
"Stemtag:", dendro$stemtag, sep=", ",
"StemID: ", dendro$stemID),
x = "Date",
y = "DBH in mm") +
theme_minimal()
#facet_wrap(c("tag", "stemtag"), labeller="label_both")
print(q)
}
dev.off()
View(all_stems$stemID_13201)
View(all_stems$stemID_14158)
View(all_stems$stemID_14265)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data", pattern="_201[0-8]*.csv")
years <- c(2010:2018)
#1a. this loop breaks up each year's dendroband trees into separate dataframes by stemID
all_years <- list()
for (k in seq(along=dirs)){
file <- dirs[[k]]
yr <- read.csv(file)
yr_intra <- yr[yr$intraannual==1, ]
all_years[[k]] <- split(yr_intra, yr_intra$stemID)
#  if (file == dirs[[1]]){
#   all_years[[k]] <- split(yr, yr$stemID)
#  }
#  else{
#    all_years[[k]] <- split(yr_intra, yr_intra$stemID)
#  }
}
tent_name <- paste0("trees", sep="_", years)
names(all_years) <- tent_name
View(all_years)
all_stems <- list()
for(stemID in sort(unique(unlist(sapply(all_years, names))))) {
all_stems[[paste0("stemID_", stemID)]] <-  do.call(rbind, lapply(years, function(year) all_years[[paste0("trees", sep="_", year)]][[stemID]]))
}
View(all_stems)
objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
library(zoo)
for(stems in names(all_stems)) {
tree.n <- all_stems[[stems]]
tree.n$dbh2 <- NA
tree.n$dbh2[1] <- tree.n$dbh[1]
tree.n$dbh2 <- as.numeric(tree.n$dbh2)
tree.n$measure <- as.numeric(tree.n$measure)
tree.n$dbh <- as.numeric(tree.n$dbh)
q <- mean(unlist(tapply(tree.n$measure, tree.n$dendroID, diff)), na.rm=TRUE)
for(i in 2:(nrow(tree.n))){
tree.n$dbh2[[i]] <-
ifelse(tree.n$new.band[[i]] == 0 & tree.n$survey.ID[[i]] == 2014.01 & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & !is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tree.n$dbh2[[i-1]], tree.n$measure[[i-1]], tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tail(na.locf(tree.n$dbh2[1:i-1]), n=1), tail(na.locf(tree.n$measure[1:i-1]), n=1), tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & is.na(tree.n$measure[[i]]), NA,
ifelse(tree.n$new.band[[i]]==1 & !is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 1 & !is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1: i-1]), na.rm = T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[i] + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=TRUE),
tree.n$dbh2))))))))
}
all_stems[[stems]] <- tree.n
}
View(all_stems)
View(all_stems$stemID_10045)
View(all_stems$stemID_14979)
View(all_stems$stemID_15051)
View(all_stems$stemID_15189)
View(all_stems$stemID_1609)
View(all_stems$stemID_16317)
View(all_stems$stemID_18164)
View(all_stems$stemID_23254)
View(all_stems$stemID_26817)
View(all_stems$stemID_28251)
View(all_stems$stemID_28848)
View(all_stems$stemID_29241)
View(all_stems$stemID_30595)
View(all_stems$stemID_31371)
View(all_stems$stemID_4096)
View(all_stems$stemID_5042)
View(all_stems$stemID_5045)
View(all_stems$stemID_7401)
View(all_stems$stemID_7442)
View(all_stems$stemID_7548)
View(all_stems$stemID_7558)
View(all_stems$stemID_7560)
View(all_stems$stemID_8126)
View(all_stems$stemID_70097)
View(all_stems$stemID_8126)
View(all_stems$stemID_8580)
View(all_stems$stemID_8948)
View(all_stems$stemID_9047)
View(all_stems$stemID_9066)
dendro2010 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2010.csv")
dendro2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
dendro2012 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2012.csv")
dendro2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2013.csv")
dendro2014 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2014.csv")
dendro2015 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2015.csv")
dendro2016 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2016.csv")
dendro2017 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2017.csv")
dendro2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
dendro2011 <- dendro2011[dendro2011$new.band==1, ]
dendro2012 <- dendro2012[dendro2012$new.band==1, ]
dendro2013 <- dendro2013[dendro2013$new.band==1, ]
dendro2014 <- dendro2014[dendro2014$new.band==1, ]
dendro2015 <- dendro2015[dendro2015$new.band==1, ]
dendro2016 <- dendro2016[dendro2016$new.band==1, ]
dendro2017 <- dendro2017[dendro2017$new.band==1, ]
dendro2018 <- dendro2018[dendro2018$new.band==1, ]
install <- rbind(dendro2010, dendro2011, dendro2012, dendro2013, dendro2014, dendro2015, dendro2016, dendro2017, dendro2018)
install <- install[ ,colnames(install) %in% c("tag", "stemtag", "sp", "quadrat", "stemID", "treeID", "biannual", "intraannual", "survey.ID", "dendDiam", "dbh", "new.band", "dendroID", "type", "dir", "dendHt", "crown.condition", "crown.illum", "lianas", "measureID")]
install <- install[order(install$tag, install$stemtag), ]
q <- install[duplicated(install$dendroID), ]
View(q)
p <- install[install$dendroID==854, ]
View(p)
dendro2010 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2010.csv")
dendro2011 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2011.csv")
dendro2012 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2012.csv")
dendro2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2013.csv")
dendro2014 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2014.csv")
dendro2015 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2015.csv")
dendro2016 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2016.csv")
dendro2017 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2017.csv")
dendro2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
dendro2011 <- dendro2011[dendro2011$new.band==1, ]
dendro2012 <- dendro2012[dendro2012$new.band==1, ]
dendro2013 <- dendro2013[dendro2013$new.band==1, ]
dendro2014 <- dendro2014[dendro2014$new.band==1, ]
dendro2015 <- dendro2015[dendro2015$new.band==1, ]
dendro2016 <- dendro2016[dendro2016$new.band==1, ]
dendro2017 <- dendro2017[dendro2017$new.band==1, ]
dendro2018 <- dendro2018[dendro2018$new.band==1, ]
install <- rbind(dendro2010, dendro2011, dendro2012, dendro2013, dendro2014, dendro2015, dendro2016, dendro2017, dendro2018)
install <- install[ ,colnames(install) %in% c("tag", "stemtag", "sp", "quadrat", "stemID", "treeID", "biannual", "intraannual", "survey.ID", "dendDiam", "dbh", "new.band", "dendroID", "type", "dir", "dendHt", "crown.condition", "crown.illum", "lianas", "measureID")]
install <- install[order(install$tag, install$stemtag), ]
q <- install[duplicated(install$dendroID), ]
p <- install[install$dendroID==854, ]
write.csv(install, "dendroID.csv", row.names=FALSE)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data", pattern="_201[0-8]*.csv")
years <- c(2010:2018)
#1a. this loop breaks up each year's dendroband trees into separate dataframes by stemID
all_years <- list()
for (k in seq(along=dirs)){
file <- dirs[[k]]
yr <- read.csv(file)
yr_intra <- yr[yr$intraannual==1, ]
all_years[[k]] <- split(yr_intra, yr_intra$stemID)
#  if (file == dirs[[1]]){
#   all_years[[k]] <- split(yr, yr$stemID)
#  }
#  else{
#    all_years[[k]] <- split(yr_intra, yr_intra$stemID)
#  }
}
tent_name <- paste0("trees", sep="_", years)
names(all_years) <- tent_name
#the below loop takes all the unique stemIDs from each year and rbinds them.
all_stems <- list()
for(stemID in sort(unique(unlist(sapply(all_years, names))))) {
all_stems[[paste0("stemID_", stemID)]] <-  do.call(rbind, lapply(years, function(year) all_years[[paste0("trees", sep="_", year)]][[stemID]]))
}
#sort(unique(unlist(sapply(all_years, names)))) -> an explainer:
#sapply says find all the names within all_years
#unlist says take all those names (all those stemIDS) and dump them all together
#unique gets rid of the duplicates, and sort sorts them
#need to call in Condit's functions (also saved in separate R code) for the next bit
objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
#1b. this loop says the following:
##1. Assigns the first dbh of the growth column as the first dbh.
##2. Says the following:
##2i.If new.band=0 (no band change), we have a measure, and we have a previous dbh2, use Condit's function to determine next dbh2 based on caliper measurement.
##2ii. If new.band=0, we have a measure, and the previous dbh2 is NA, use Condit's function by comparing the new measure with the most recent non-NA dbh2.
##2iii. If new.band=0 and the previous measure is NA, give dbh2 a value of NA.
##2iv. If new.band=1 (band and measurement change), we have a measure, and there's a new dbh, assign that dbh to dbh2.
##2v. If new.band=1, we have a measure, and there's no new dbh (indicating a new dbh wasn't recorded when the band was changed), dbh2 is the sum of the differences of the previous dbh2's added to the most recent dbh2.
##2vi. UNCOMMON If new.band=1 , measure is NA, and the dbh in the original column is unchanged , dbh2 is the sum of the differences of the previous dbh2's added to the most recent dbh2.
##2vii. UNCOMMON If new.band=1, measure is NA, and dbh is different, dbh2 is the new dbh plus the mean of the differences of the previous dbh2's.
library(zoo)
for(stems in names(all_stems)) {
tree.n <- all_stems[[stems]]
tree.n$dbh2 <- NA
tree.n$dbh2[1] <- tree.n$dbh[1]
tree.n$dbh2 <- as.numeric(tree.n$dbh2)
tree.n$measure <- as.numeric(tree.n$measure)
tree.n$dbh <- as.numeric(tree.n$dbh)
q <- mean(unlist(tapply(tree.n$measure, tree.n$dendroID, diff)), na.rm=TRUE)
for(i in 2:(nrow(tree.n))){
tree.n$dbh2[[i]] <-
ifelse(tree.n$new.band[[i]] == 0 & tree.n$survey.ID[[i]] == 2014.01 & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & !is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tree.n$dbh2[[i-1]], tree.n$measure[[i-1]], tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & !is.na(tree.n$measure[[i]]) & is.na(tree.n$dbh2[[i-1]]),
findDendroDBH(tail(na.locf(tree.n$dbh2[1:i-1]), n=1), tail(na.locf(tree.n$measure[1:i-1]), n=1), tree.n$measure[[i]]),
ifelse(tree.n$new.band[[i]] == 0 & is.na(tree.n$measure[[i]]), NA,
ifelse(tree.n$new.band[[i]]==1 & !is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[[i]],
ifelse(tree.n$new.band[[i]] == 1 & !is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1: i-1]), na.rm = T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
max(tree.n$dbh2[1: i-1], na.rm = T) + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=T),
ifelse(tree.n$new.band[[i]] == 1 & is.na(tree.n$measure[[i]]) & !identical(tree.n$dbh[[i]], tree.n$dbh[[i-1]]),
tree.n$dbh[i] + mean(diff(tree.n$dbh2[1:(i-1)]), na.rm=TRUE),
tree.n$dbh2))))))))
}
all_stems[[stems]] <- tree.n
}
library(ggplot2)
pdf(file = "DBH_growth_Dendrobands.pdf")
for (j in names(all_stems)){
dendro <- all_stems[[j]]
dendro$date <- paste0(dendro$month, sep="/", dendro$day, sep="/", dendro$year)
dendro$date <- as.Date(dendro$date, format="%m/%d/%Y")
#dendro$date <- factor(dendro$date, ordered=TRUE)
#dendro$doy <- julian(dendro$month, dendro$day, dendro$year, origin=c(01,01,2018))
q <- ggplot(dendro, aes(x = date, y = dbh2)) +
geom_line(color = "#0c4c8a") +
labs(title = "Tree Growth from Dendrobands 2011-2018",
subtitle = paste0("Tag: ", dendro$tag, sep=", ",
"Stemtag:", dendro$stemtag, sep=", ",
"StemID: ", dendro$stemID),
x = "Date",
y = "DBH in mm") +
theme_minimal()
#facet_wrap(c("tag", "stemtag"), labeller="label_both")
print(q)
}
dev.off()
View(all_stems$stemID_11143)

}
for (i in tags){
growth <- ifelse(band18$intraannual == 1, subset(band18, band18$tag == i), "")
}
View(growth)
?if
)
?if()
for (i in tags){
i <- subset(band18, band18$tag == i & band18$intraannual == 1)
}
growth_10671 <- subset(band18, band18$tag == 16071 & band18$intraannual == 1)
growth_10671 <- subset(band18, band18$tag == 16071 & band18$intraannual == "1")
View(growth_10671)
growth_10671 <- subset(band18, band18$tag == "16071" & band18$intraannual == "1")
intra <- subset(band18, band18$intraannual == 1)
tagsintra <- c(unique(intra$tag))
intraannual <- lapply(band18, subset(band18, band18$tag))
intraannual <- lapply(band18, subset(band18, unique(band18$tag)))
intraannual <- lapply(band18, subset(band18, band18$tag %in% tagsintra))
intraannual <- split(band18, f=tagsintra)
View(intraannual)
intraannual[[16071]]
intraannual[16071]
View(intraannual[["30225"]])
surveys <- c(unique(intra$survey.ID))
intraannual <- split(band18, f=surveys)
View(intraannual)
View(intraannual[["10671"]])
View(intraannual[["30331"]])
?split
band18$survey.ID <- as.factor(band18$survey.ID)
intraannual <- split(band18, f=surveys)
View(intraannual)
View(intraannual[["30233"]])
intraannual <- split(band18, f=tagsintra)
View(intraannual)
View(intraannual[["10671"]])
?lapply
intraannual <- split(intra, f=tagsintra)
View(intraannual)
intraannual <- split(intra, f=surveys)
View(intraannual)
View(intraannual[["30225"]])
intraannual <- lapply(intra, subset)
intraannual <- lapply(tagsintra, subset)
intraannual <- lapply(tagsintra, subset, intra)
intraannual <- lapply(tagsintra, subset(intra))
intraannual <- lapply(tagsintra, subset, unique(intra$survey.ID))
intraannual <- lapply(tagsintra, subset, intra$survey.ID == surveys)
View(intraannual)
View(intraannual[["12025"]])
intraannual <- lapply(tagsintra, subset, duplicated(intra$survey.ID))
intraannual <- lapply(tagsintra, subset, duplicated(intra$tag))
View(intraannual)
View(intraannual[["30233"]])
test <- lapply(tagsintra, subset, duplicated(intra$tag))
View(test)
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
library(chron)
band18$doy <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
intra <- subset(band18, band18$intraannual == 1)
tagsintra <- c(unique(intra$tag))
surveys <- c(unique(intra$survey.ID))
test <- lapply(tagsintra, subset, duplicated(intra$tag))
View(test)
test <- lapply(tagsintra, subset, intra$tag %in% tagsintra)
View(test)
new <- lapply(tagsintra, subset, intra$tag %in% tagsintra)
View(new)
intraannual <- split(intra, f=intra$tag)
View(intraannual)
View(intraannual[["10671"]])
View(intraannual)
View(intraannual[["30339"]])
View(intraannual)
View(intraannual[["40564"]])
?split
intraannual <- split(intra, f=c(intra$tag, intra$stemtag)
intraannual <- split(intra, f=c(intra$tag, intra$stemtag))
View(intraannual)
View(intraannual[["30339"]])
intraannual <- split(intra, f=c(intra$tag))
library(esquisse)
esquisser(intra)
View(intra)
fullsp <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/species_lists/Tree ecology/SCBI_ForestGEO_sp_ecology.csv")
subsp <- fullsp[,c(1:3,5)]
subsp$species <- as.character(subsp$species)
subsp$sp <- c(paste0(fullsp$genus, sep="_", fullsp$species))
##change species names if need be (more current versions)
subsp$species <- gsub("prinus", "montana", subsp$species)
subsp$sp <- gsub("prinus", "montana", subsp$sp)
splist <- c(subsp$sp)
##read in BIEN website data and make clear what species are on website
library(data.table)
test <- fread("http://vegbiendev.nceas.ucsb.edu/bien/data/ranges/shapefiles/")
colnames(test) <- c("full.string", "align", "breaks")
test$sp <- sub(".*zip\">", "", test$full.string)
test$sp <- sub("_range.*$", "", test$sp)
test$mapsource <- "BIEN"
##species in the BIEN database will be marked
subsp$mapsource <- test$mapsource[match(subsp$sp, test$sp)]
##this creates a vector of species that match between the fullsp list and the secies available on the BIEN website.
matches <- unique (grep(paste(splist,collapse="|"),
test$sp, value=TRUE))
## create list of URLs based on the matches
spfiles <- c(paste0("http://vegbiendev.nceas.ucsb.edu/bien/data/ranges/shapefiles/", matches, "_range.zip"))
URLs <- spfiles
View(subsp)
fullsp <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/species_lists/Tree ecology/SCBI_ForestGEO_sp_ecology.csv")
subsp <- fullsp[,c(1:3,5)]
subsp$species <- as.character(subsp$species)
subsp$sp <- c(paste0(fullsp$genus, sep="_", fullsp$species))
fullsp <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/species_lists/Tree ecology/SCBI_ForestGEO_sp_ecology.csv")
subsp <- fullsp[,c(1:3,5)]
subsp$species <- as.character(subsp$species)
subsp$sp <- c(paste0(fullsp$genus, sep="_", fullsp$species))
View(subsp)
fullsp <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/species_lists/Tree ecology/SCBI_ForestGEO_sp_ecology.csv")
subsp <- fullsp[,c(1:3,5)]
subsp$species <- as.character(subsp$species)
subsp$sp <- c(paste0(fullsp$genus, sep="_", fullsp$species))
View(subsp)
subsp$sp <- gsub("Carya_ovalis", "Carya_glabra", subsp$sp)
subsp$sp <- gsub("Carya_tomentosa", "Carya_alba", subsp$sp)
subsp$sp <- gsub("Sambucus_canadensis var. canadensis", "Sambucus_canadensis", subsp$sp)
splist <- c(subsp$sp)
splist
library(data.table)
test <- fread("http://vegbiendev.nceas.ucsb.edu/bien/data/ranges/shapefiles/")
colnames(test) <- c("full.string", "align", "breaks")
test$sp <- sub(".*zip\">", "", test$full.string)
test$sp <- sub("_range.*$", "", test$sp)
test$mapsource <- "BIEN"
##species in the BIEN database will be marked
subsp$mapsource <- test$mapsource[match(subsp$sp, test$sp)]
##this creates a vector of species that match between the fullsp list and the secies available on the BIEN website.
matches <- unique (grep(paste(splist,collapse="|"),
test$sp, value=TRUE))
## create list of URLs based on the matches
spfiles <- c(paste0("http://vegbiendev.nceas.ucsb.edu/bien/data/ranges/shapefiles/", matches, "_range.zip"))
URLs <- spfiles
library(leaflet)
library(maps)
library(htmlwidgets)
library(maptools)
##the following code snippet defines a function whereby shapefile zip files are downloaded into a temp folder and directory.
##temp folders are automatically unlinked (deleted) and the working directory is set back to original within every iteration of the function. This means no shapefiles are stored to the drive.
##source: Kay Cichini (https://www.r-bloggers.com/batch-downloading-zipped-shapefiles-with-r/)
url_shp_to_spdf <- function(URL) {
require(rgdal)
wd <- getwd()
td <- tempdir()
setwd(td)
temp <- tempfile(fileext = ".zip")
download.file(URL, temp)
unzip(temp)
shp <- dir(tempdir(), "*.shp$")
lyr <- sub(".shp$", "", shp)
y <- lapply(X = lyr, FUN = function(x) readOGR(dsn=shp, layer=lyr))
names(y) <- lyr
unlink(dir(td))
setwd(wd)
return(y)
}
##now, run the function for each URL defined above
y <- sapply(URLs, url_shp_to_spdf)
# z <- unlist(y, recursive=TRUE) #this makes y easier to read, but also replicates the large list
##define the names of the list (y) as the sp names from matches. They are in the same order because the URL list was created from the matches vector.
##without this code, the leaflet function below gives error of "can't draw path from object of class list"
names(y) <- matches
##change working directory, then create maps of each shapefile
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-Plot-Book/maps_and_figures/range_maps")
for (sp in names(y)){
sp.poly <- y[[sp]]
map <- leaflet() %>%
addProviderTiles("CartoDB.Positron", group = "Map") %>%
addProviderTiles("Esri.WorldTopoMap", group = "Topo") %>%
addProviderTiles("Esri.WorldShadedRelief", group = "Relief") %>%
addPolygons(data=sp.poly, weight=2, fillOpacity = 0) %>%
addScaleBar(position = "bottomleft") %>%
addLayersControl(
baseGroups = c("Map", "Topo", "Relief"),
options = layersControlOptions(collapsed = FALSE)
)
invisible(print(map))
saveWidget(map, file=paste0(sp,"_map.html"), selfcontained=TRUE)
}
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
library(chron)
band18$doy <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
intra <- subset(band18, band18$intraannual == 1)
tagsintra <- c(unique(intra$tag))
surveys <- c(unique(intra$survey.ID))
intraannual <- split(intra, f=c(intra$tag))
View(intra)
?julian
class(intra$doy)
intra$doy <- as.Date(intra$doy)
View(intra)
?as.Date
intra$doy <- as.Date(intra$doy, format="%m/%d/%Y")
View(intra)
band18$doy <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
intra <- subset(band18, band18$intraannual == 1)
tagsintra <- c(unique(intra$tag))
surveys <- c(unique(intra$survey.ID))
intraannual <- split(intra, f=c(intra$tag))
intra$doy <- as.Date(intra$doy, format="%m/%d/%Y")
View(intra)
library(esquisse)
esquisse:::esquisser()
X10671 <- subset(intra, intra$tag == 10671)
esquisse:::esquisser()
for (i in intra$tag){
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = "Dendroband Growth 2018",
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
library(ggplot)
library(ggplot2)
for (i in intra$tag){
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = "Dendroband Growth 2018",
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
for (i in intraannual){
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = "Dendroband Growth 2018",
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
for (i in intraannual){
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
for (i in intraannual){
pdf(paste("plot",i,".pdf"))
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
View(intraannual)
for (i in intraannual){
pdf(paste("plot",names(i),".pdf"))
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
for (i in intraannual){
pdf(paste("plot",names(i),".pdf"))
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
dev.off()
}
getwd()
?pdf
for (i in intraannual){
pdf(paste(names(i),"2018.pdf"))
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
dev.off()
}
dev.list()
for (i in intraannual){
pdf(paste(unique(names(i)),"2018.pdf"))
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
dev.off()
}
for (i in intraannual){
pdf(file = (paste(unique(names(i)),"2018.pdf")))
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
dev.off()
}
pdf(file = (paste(unique(names(i)),"2018.pdf")))
pdf(file = "Dendrobands_2018.pdf")
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
library(chron)
band18$doy <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
intra <- subset(band18, band18$intraannual == 1)
tagsintra <- c(unique(intra$tag))
surveys <- c(unique(intra$survey.ID))
intraannual <- split(intra, f=c(intra$tag))
intra$doy <- as.Date(intra$doy, format="%m/%d/%Y")
library(ggplot2)
pdf(file = "Dendrobands_2018.pdf")
for (i in intraannual){
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
dev.off()
}
pdf(file = "Dendrobands_2018.pdf")
for (i in intraannual){
ggplot(data = i) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
dev.off()
pdf(file = "Dendrobands_2018.pdf")
for (i in names(intraannual)){
ggplot(data = intrannual[[i]]) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
dev.off()
pdf(file = "Dendrobands_2018.pdf")
for (i in names(intraannual)){
ggplot(data = intraannual[[i]]) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
}
dev.off()
for (i in names(intraannual)){
pdf(file = "Dendrobands_2018.pdf")
dendro <- intraannual[[i]]
ggplot(data = dendro) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", names(i)),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
dev.off()
}
View(dendro)
for (i in names(intraannual)){
pdf(file = "Dendrobands_2018.pdf")
dendro <- intraannual[[i]]
ggplot(data = dendro) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
dev.off()
}
plot_list = list()
for (i in names(intraannual)){
pdf(file = "Dendrobands_2018.pdf")
dendro <- intraannual[[i]]
p <- ggplot(data = dendro) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
print(plot_list[[i]])
dev.off()
}
View(p)
plot_list = list()
for (i in names(intraannual)){
pdf(file = "Dendrobands_2018.pdf")
dendro <- intraannual[[i]]
p <- ggplot(data = dendro) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
print(plot_list[[dendro]])
dev.off()
}
plot_list = list()
for (i in names(intraannual)){
pdf(file = "Dendrobands_2018.pdf")
dendro <- intraannual[[i]]
ggplot(data = dendro) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
print(plot_list[[dendro]])
dev.off()
}
for (i in names(intraannual)){
pdf(file = "Dendrobands_2018.pdf")
dendro <- intraannual[[i]]
ggplot(data = dendro) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
print(list([[dendro]]))
dev.off()
}
for (i in names(intraannual)){
pdf(file = "Dendrobands_2018.pdf")
dendro <- intraannual[[i]]
ggplot(data = dendro) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
print(list(dendro))
dev.off()
}
X10671 <- subset(intra, intra$tag == 10671)
p <- ggplot(data =X16071) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
p <- ggplot(data = X16071) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
?ggplot
p <- ggplot(X16071) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
View(X10671)
test <- subset(intra, intra$tag == 10671)
p <- ggplot(test) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()
print(p)
ggplot(test) +
aes(x = doy, y = measure) +
geom_line(color = "#0c4c8a") +
labs(title = paste0("Dendroband Growth 2018 ", i),
x = "Date 2018",
y = "Caliper measurements") +
theme_minimal()

#our 2018 data shows
recensus2018 <- read.csv("I:/recensus2018.csv")
othersp <- c("NULL", "unk")
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)))
unique(recensus2018$Mnemonic)
length(unique(scbi$code6))
length(unique(recensus2018$Mnemonic))
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
View(scbi.stem2)
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^....", "^..", scbi$code6)
View(scbi)
scbi <- hq[hq$SCBI>0, ]
#convert brian spcode to what we're used to
scbi$code6 <- gsub("(^..)..", "\\1", scbi$code6)
View(scbi)
scbi <- hq[hq$SCBI>0, ]
scbi$code6
#convert brian spcode to what we're used to
scbi$code6 <- gsub("(^..)..", "\\1", scbi$code6)
scbi$code6
scbi_brian <- scbi.stem2[scbi.stem2$Mnemonic %in% scbi$code6, ]
scbi_brian <- scbi.stem2[, scbi.stem2$Mnemonic %in% scbi$code6]
scbi_brian <- scbi.stem2[scbi.stem2$Mnemonic %in% scbi$code6, ]
View(scbi)
scbi.stem2[scbi.stem2$sp == caovl, ]
scbi.stem2[scbi.stem2$sp == caov, ]
scbi.stem2[scbi.stem2$sp == "caov", ]
scbi.stem2[scbi.stem2$sp == "caovl", ]
scbi <- ifelse(scbi$Genus == "Crataegus", gsub("1", "p", scbi$code6))
scbi$code6 <- ifelse(scbi$Genus == "Crataegus", gsub("1", "p", scbi$code6), scbi$code6)
scbi$code6 <- ifelse(scbi$GenusSpp == "Carya ovalis", gsub("1", "vl", scbi$code6), scbi$code6)
View(scbi)
scbi_brian <- scbi.stem2[scbi.stem2$sp %in% scbi$code6, ]
length(scbi.stem2 %in% scbi$code6)
setdiff(scbi.stem2$sp, scbi$code6)
length(unique(scbi_brian$sp))
setdiff(scbi$code6, scbi_brian$sp)
View(scbi)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
#now subset our census list for those species that match brian's sp
scbi_brian <- scbi.stem2[scbi.stem2$sp %in% scbi$code6, ]
setdiff(scbi$code6, scbi_brian$sp)
scbi <- [order(scbi$code6), ]
scbi <- scbi[order(scbi$code6), ]
View(scbi)
test <- scbi_brian$sp
test <- scbi_brian[scbi_brian$sp]
test <- scbi_brian[, scbi_brian$sp]
test <- scbi_brian[ ,scbi_brian$sp]
test <- scbi_brian[scbi_brian$sp, ]
test <- scbi_brian[scbi_brian$code6, ]
View(scbi_brian)
test <- scbi[scbi$code6, ]
View(scbi)
test <- data.frame(scbi$code6)
View(test)
library(data.table)
colnames(test) <- "sp"
View(test)
View(scbi_brian)
View(scbi)
test <- scbi[ ,c(3:9)]
?colnames()
colnames(test)[4] <- "sp"
View(test)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
View(test)
if (scbi.stem2$sp == "litu"){}
if (scbi.stem2$sp == "litu"){sum(scbi.stem2$sp)}
if (scbi.stem2$sp %in% "litu"){sum(scbi.stem2$sp)}
?str_count
library(stringr)
?str_count
str_count(scbi.stem2$sp, "litu")
ssum(str_count(scbi.stem2$sp, "litu"))
sum(str_count(scbi.stem2$sp, "litu"))
View(scbi.stem2)
test$n.alive <- ifelse(test$sp == "litu" & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, "litu"), 0)
)
test$n.alive <- ifelse(test$sp == "litu" & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, "litu")), 0)
sp <- c(test$sp)
test$n.alive <- ""
for (i in sp){
test$n.alive <- ifelse(test$sp == [i] & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, [i])), 0)
}
for (i in seq(along=sp)){
test$n.alive <- ifelse(test$sp == [[i]] & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, [[i]])), 0)
}
for (i in seq(along=test$sp)){
species <- sp[[i]]
test$n.alive <- ifelse(scbi.stem2$sp == species & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, species)), 0)
}
for (i in seq(along=test$sp)){
species <- sp[[i]]
test$n.alive <- ifelse(scbi.stem2$sp == species & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, species)), test$n.alive)
}
for (i in seq(along=test$sp)){
species <- sp[[i]]
test$n.alive <- ifelse(scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, species)), test$n.alive)
}
View(test)
test$n.alive <- ifelse(scbi.stem2$sp == "litu" & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, "litu")), 0)
ifelse(scbi.stem2$sp == "litu" & scbi.stem2$DFstatus == "alive", sum(str_count(scbi.stem2$sp, "litu")), 0)
for (i in seq(along=sp)){
species <- sp[[i]]
species_alive <- subset(scbi.stem2, scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species, sum(str_count(species_alive$sp, species)), test$n.alive)
}
View(test)
View(species_alive)
for (i in seq(along=sp)){
species <- sp[[i]]
test$n.alive <- ifelse(test$sp %in% species & scbi.stem2$sp %in% species, sum(species_alive$tag, species), test$n.alive)
}
for (i in seq(along=test$sp)){
species <- sp[[i]]
test$n.alive <- ifelse(scbi.stem2$sp %in% species, sum(species_alive$tag, species), test$n.alive)
}
for (i in seq(along=test$sp)){
species <- sp[[i]]
test$n.alive <- ifelse(scbi.stem2$sp %in% species, sum(species_alive$tag), test$n.alive)
}
for (i in seq(along=test$sp)){
species <- sp[[i]]
test$n.alive <- ifelse(scbi.stem2$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive)
}
for (i in seq(along=test$sp)){
species <- test$sp[[i]]
test$n.alive <- ifelse(scbi.stem2$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive)
}
for (i in seq(along=sp)){
species <- sp[[i]]
test$n.alive <- ifelse(test$sp %in% species,
ifelse(species_alive$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive), test$n.alive)
}
View(test)
for (i in seq(along=sp)){
species <- sp[[i]]
species <- subset(scbi.stem2, scbi.stem2$sp %in% sp & scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species,
ifelse(species_alive$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive), test$n.alive)
}
for (i in seq(along=sp)){
species <- sp[[i]]
species <- subset(scbi.stem2, scbi.stem2$sp %in% sp, scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species,
ifelse(species_alive$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive), test$n.alive)
}
hq <- read.csv("I:/Krista Lab/Leaf collection/SCBISERCcombolistEd_20190204.csv")
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
#our 2018 data shows more sp than Brian's
recensus2018 <- read.csv("I:/recensus2018.csv")
othersp <- c("NULL", "unk")
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)))
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
test$n.alive <- ""
View(test)
scbi$code6 <- gsub("(^..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
sp <- c(test$sp)
test$n.alive <- ""
View(test)
scbi$code6 <- gsub("(^..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
View(test)
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
#convert brian spcode to what we're used to
scbi$code6 <- gsub("(^..)..", "\\1", scbi$code6)
View(test)
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
View(scbi)
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^(..)..", "\\1", scbi$code6)
View(test)
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
View(scbi)
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^(..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
test$n.alive <- ""
for (i in seq(along=sp)){
species <- sp[[i]]
species <- subset(scbi.stem2, scbi.stem2$sp %in% sp, scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species,
ifelse(species_alive$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive), test$n.alive)
}
for (i in seq(along=sp)){
species <- sp[[i]]
species <- subset(scbi.stem2, scbi.stem2$sp %in% species, scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species,
ifelse(species_alive$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive), test$n.alive)
}
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species, scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species,
ifelse(species_alive$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive), test$n.alive)
}
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species,
ifelse(species_alive$sp %in% species, length(unique(scbi.stem2$tag)), test$n.alive), test$n.alive)
}
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive")
test$n.alive <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.alive)
}
View(test)
View(check)
View(test)
test_noplot <- test[test$n.alive < 15, ]
View(test_noplot)
class(test$n.alive)
test$n.alive <- as.numeric(test$n.alive)
test_noplot <- test[test$n.alive < 15, ]
View(test_noplot)
test_noplot <- test[test$n.alive < 5, ]
View(test_noplot)
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)) & !(grepl("D", recensus2018$codes)))
#our 2018 data shows more sp than Brian's
recensus2018 <- read.csv("I:/recensus2018.csv")
View(recensus2018)
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)) & !(grepl("D", recensus2018$Codes)))
test$n.alive.2018 <- ""
#for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$n.alive <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.alive)
}
View(test)
test$n.alive.2013 <- ""
test$n.alive.2018 <- ""
#for 2013 data
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive")
test$n.alive.2013 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.alive.2013)
}
#for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$n.alive.2018 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.alive.2018)
}
View(test)
hq <- read.csv("I:/Krista Lab/Leaf collection/SCBISERCcombolistEd_20190204.csv")
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
#our 2018 data shows more sp than Brian's
recensus2018 <- read.csv("I:/recensus2018.csv")
othersp <- c("NULL", "unk")
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)) & !(grepl("D", recensus2018$Codes)))
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^(..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
test$n.alive.2013 <- ""
test$n.alive.2018 <- ""
#for 2013 data
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive")
test$n.alive.2013 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.alive.2013)
}
#for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$n.alive.2018 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.alive.2018)
}
View(test)
grepl("D", recensus2018$Codes)
grep("D", recensus2018$Codes)
unique(recensus2018$Codes)
View(recensus2018)
#for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$n.alive.2018 <- ifelse(test$sp %in% species, length(unique(check$Tag)), test$n.alive.2018)
}
View(test)
hq <- read.csv("I:/Krista Lab/Leaf collection/SCBISERCcombolistEd_20190204.csv")
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
scbi <- scbi[order(scbi$code6, descending=FALSE), ]
?order
scbi <- scbi[order(scbi$code6, decreasing=FALSE), ]
View(scbi)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
#read in year's data
dendro2019 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2019.csv")
install <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/dendroID.csv")
#subset by new.band=1 and then subset by columns to match install
dendro2019 <- dendro2019[dendro2019$new.band==1, ]
dendro2019 <- dendro2019[ ,colnames(install) %in% c("tag", "stemtag", "sp", "quadrat", "stemID", "treeID", "biannual", "intraannual", "survey.ID", "dendDiam", "dbh", "new.band", "dendroID", "type", "dir", "dendHt", "crown.condition", "crown.illum", "lianas", "measureID")]
#append the rows to install
install_new <- rbind(dendro2019, install)
View(install)
install$new <- ""
View(install)
library(stringr)
hq <- read.csv("I:/Krista Lab/Leaf collection/SCBISERCcombolistEd_20190204.csv")
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
#our 2018 data shows more sp than Brian's
recensus2018 <- read.csv("I:/recensus2018.csv")
othersp <- c("NULL", "unk")
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)) & !(grepl("D", recensus2018$Codes)))
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^(..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
test$n.alive.2013 <- ""
test$n.alive.2018 <- ""
#for 2013 data
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive")
test$n.alive.2013 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.alive.2013)
}
#for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$n.alive.2018 <- ifelse(test$sp %in% species, length(unique(check$Tag)), test$n.alive.2018)
}
View(test)
test$n.alive.2018 <- as.numeric(test$n.alive)
test_noplot <- test[test$n.alive.2018 < 5, ]
View(test_noplot)
test$n.alive.2018 <- as.numeric(test$n.alive.2018)
test_noplot <- test[test$n.alive.2018 < 5, ]
View(test_noplot)
View(recensus2018)
View(scbi.stem2)
max(scbi.stem2)
max(scbi.stem2$dbh)
max(!is.na(scbi.stem2$dbh))
othersp <- c("NULL", "unk")
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)) & !(grepl("D", recensus2018$Codes)) & recensus2018$DBH<=35)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive" & scbi.stem2$dbh <= 350)
test$n.subcan_alive.2013 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.subcan_alive.2013)
}
#number of alive individuals for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$test$n.subcan_alive.2018 <- ifelse(test$sp %in% species, length(unique(check$Tag)), test$test$n.subcan_alive.2018)
}
hq <- read.csv("I:/Krista Lab/Leaf collection/SCBISERCcombolistEd_20190204.csv")
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
#our 2018 data shows more sp than Brian's
recensus2018 <- read.csv("I:/recensus2018.csv")
othersp <- c("NULL", "unk")
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)) & !(grepl("D", recensus2018$Codes)) & recensus2018$DBH<=35)
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^(..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
test$n.subcan_alive.2013 <- ""
test$n.subcan_alive.2018 <- ""
#number of alive individuals for 2013 data
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive" & scbi.stem2$dbh <= 350)
test$n.subcan_alive.2013 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.subcan_alive.2013)
}
#number of alive individuals for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$test$n.subcan_alive.2018 <- ifelse(test$sp %in% species, length(unique(check$Tag)), test$test$n.subcan_alive.2018)
}
test$test$n.subcan_alive.2018 <- as.numeric(test$test$n.subcan_alive.2018)
test_noplot <- test[test$test$n.subcan_alive.2018 < 5, ]
View(test)
#number of alive individuals for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$test$n.subcan_alive.2018 <- ifelse(test$sp %in% species, length(unique(check$Tag)), test$test$n.subcan_alive.2018)
}
test$n.subcan_alive.2018 <- as.numeric(test$n.subcan_alive.2018)
test_noplot <- test[test$test$n.subcan_alive.2018 < 5, ]
View(test)
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^(..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
test$n.subcan_alive.2013 <- ""
test$n.subcan_alive.2018 <- ""
#number of alive individuals for 2013 data
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive" & scbi.stem2$dbh <= 350)
test$n.subcan_alive.2013 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.subcan_alive.2013)
}
#number of alive individuals for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$n.subcan_alive.2018 <- ifelse(test$sp %in% species, length(unique(check$Tag)), test$n.subcan_alive.2018)
}
test$n.subcan_alive.2018 <- as.numeric(test$n.subcan_alive.2018)
test_noplot <- test[test$test$n.subcan_alive.2018 < 5, ]
View(test)
View(scbi)
hq <- read.csv("I:/Krista Lab/Leaf collection/SCBISERCcombolistEd_20190204.csv")
scbi <- hq[hq$SCBI>0, ]
scbi <- scbi[order(scbi$code6), ]
#our 2018 data shows more sp than Brian's
recensus2018 <- read.csv("I:/recensus2018.csv")
othersp <- c("NULL", "unk")
recensus2018 <- subset(recensus2018, !(recensus2018$Mnemonic %in% othersp) & !(grepl("sp", recensus2018$Mnemonic)) & !(grepl("D", recensus2018$Codes)) & recensus2018$DBH<=35)
#length(unique(recensus2018$Mnemonic))
#[1] 65
#length(unique(scbi$code6))
#[1] 61
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-csv-files/scbi.stem2.csv")
#convert brian spcode to what we're used to
scbi$code6 <- gsub("^(..)..", "\\1", scbi$code6)
scbi$code6 <- gsub("crs1", "crsp", scbi$code6)
scbi$code6 <- gsub("cao1", "caovl", scbi$code6)
scbi$code6 <- gsub("qura", "quru", scbi$code6)
library(stringr)
test <- scbi[ ,c(3:9)]
colnames(test)[2] <- "sp"
sp <- c(test$sp)
test$n.subcan_alive.2013 <- ""
test$n.subcan_alive.2018 <- ""
#number of alive individuals for 2013 data
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(scbi.stem2, scbi.stem2$sp %in% species & scbi.stem2$DFstatus == "alive" & scbi.stem2$dbh <= 350)
test$n.subcan_alive.2013 <- ifelse(test$sp %in% species, length(unique(check$tag)), test$n.subcan_alive.2013)
}
#number of alive individuals for 2018 data (recensus2018 subset above)
for (i in seq(along=sp)){
species <- sp[[i]]
check <- subset(recensus2018, recensus2018$Mnemonic %in% species)
test$n.subcan_alive.2018 <- ifelse(test$sp %in% species, length(unique(check$Tag)), test$n.subcan_alive.2018)
}
test$n.subcan_alive.2018 <- as.numeric(test$n.subcan_alive.2018)
test_noplot <- test[test$test$n.subcan_alive.2018 < 5, ]
View(test)
test_noplot <- test[test$n.subcan_alive.2018 < 5, ]
View(test_noplot)
test$n.subcan_alive.2013 <- as.numeric(test$n.subcan_alive.2013)
test$n.subcan_alive.2018 <- as.numeric(test$n.subcan_alive.2018)
test_noplot <- test[test$n.subcan_alive.2018 < 5, ]
View(test)
scbi.stem2 <- subset(scbi.stem2, scbi.stem2$DFstatus == "alive" & scbi.stem2$dbh <= 350)
max(recensus2018$DBH)
max(scbi.stem2$dbh)
View(test)
View(test_noplot)
View(test)

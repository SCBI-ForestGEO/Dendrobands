year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "growth")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$growth) & sprange$growth <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("growth")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "growth")]
}
colnames(sprange) <- c("sp", paste0("avg_growth",date[j],"_mm"))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
#round to 2nd decimal
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
#find range of years
step2$mingrowth_mm <- apply(step2[, 2:9], 1, min, na.rm=TRUE)
step2$maxgrowth_mm <- apply(step2[, 2:9], 1, max, na.rm=TRUE)
step2$avg_growth_range_mm <- step2[, "maxgrowth_mm"] - step2[, "mingrowth_mm"]
?julian
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
library(chron)
#band18$doy <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
band18$doy <- julian(band$day, band$month, band$year, origin=c(1,1,2018))
#band18$doy <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
band18$doy <- julian(band18$day, band18$month, band18$year, origin=c(1,1,2018))
View(band18)
?julian
band18$date <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
band18$doy <- julian(band18$date, origin=as.Date("2018-01-01"))
?as.Date
View(band18)
band18$doy <- julian(band18$date, origin=as.POSIXct("2018-01-01", tz="EST"))
band18$doy <- julian(band18$month, band18$date, band18$year, origin=c(1,1,2018))
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
library(chron)
band18$date <- paste0(band18$month, sep="/", band18$day, sep="/", band18$year)
band18$doy <- julian(band18$month, band18$date, band18$year, origin=c(01,01,2018))
View(band18)
band18$doy <- julian(band18$month, band18$day, band18$year, origin=c(01,01,2018))
View(band18)
intra <- subset(band18, band18$intraannual == 1)
tagsintra <- c(unique(intra$tag))
surveys <- c(unique(intra$survey.ID))
intra$doy <- as.Date(intra$doy, format="%m/%d/%Y")
intra$doy <- factor(intra$doy, ordered=TRUE)
intraannual <- split(intra, f=c(intra$tag))
intra$date <- as.Date(intra$date, format="%m/%d/%Y")
intra$date <- factor(intra$date, ordered=TRUE)
intraannual <- split(intra, f=c(intra$tag))
View(intra)
test <- subset(intra, intra$tag == 10671)
plot(test$doy, test$measure, xlab = "Day of the year", ylab = "DBH (cm)", pch = 18,
col = "tomato", main = "Cumulative annual growth")
plot(test$doy, test$measure, xlab = "Day of the year", ylab = "DBH (cm)", pch = 18,
col = "red", main = "Cumulative annual growth")
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
intra <- band18[band18$intraannual==1, ]
intra$dbh2 <- NA
x10671 <- intra[intra$tag==10671, ]
cal <- c(x10671$measure)
x10671$dbh2[[1]] <- x10671$dbh[[1]]
#x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.01), x10671$dbh, x10671$dbh2)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.02, findDendroDBH(x10671$dbh, cal[[1]], cal[[2]]), x10671$dbh2)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.03, findDendroDBH(x10671$dbh2[[2]], cal[[2]], cal[[3]]), x10671$dbh2)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.04, findDendroDBH(x10671$dbh2[[3]], cal[[3]], cal[[4]]), x10671$dbh2)
objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
intra <- band18[band18$intraannual==1, ]
intra$dbh2 <- NA
x10671 <- intra[intra$tag==10671, ]
cal <- c(x10671$measure)
x10671$dbh2[[1]] <- x10671$dbh[[1]]
#x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.01), x10671$dbh, x10671$dbh2)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.02, findDendroDBH(x10671$dbh, cal[[1]], cal[[2]]), x10671$dbh2)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.03, findDendroDBH(x10671$dbh2[[2]], cal[[2]], cal[[3]]), x10671$dbh2)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.04, findDendroDBH(x10671$dbh2[[3]], cal[[3]], cal[[4]]), x10671$dbh2)
View(x10671)
View(band18)
test <- intra[intra$tag==30512, ]
View(test)
cal <- c(test$measure)
id <- c(test$survey.ID)
for (i in 2:nrow){
cal <- c(test$measure)
test$dbh2 <- NA
test$dbh2[[1]] <- test$dbh[[1]]
test$dbh2 <- if (test$new.band ==0){
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
else (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]], mean(diff(test$dbh2[[1:i-1]])), test$dbh2)
}
for (i in 2:nrow){
cal <- c(test$measure)
test$dbh2 <- NA
test$dbh2[[1]] <- test$dbh[[1]]
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]], mean(diff(test$dbh2[[1:i-1]])), test$dbh2)
}
for (i in 2:nrow){
cal <- c(test$measure)
test$dbh2 <- ""
test$dbh2[[1]] <- test$dbh[[1]]
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]], mean(diff(test$dbh2[[1:i-1]])), test$dbh2)
}
View(test)
test$dbh2 <- ""
View(test)
for (i in 2:nrow){
cal <- c(test$measure)
test$dbh2[[1]] <- test$dbh[[1]]
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]], mean(diff(test$dbh2[[1:i-1]])), test$dbh2)
}
test$dbh2 <- NULL
for (i in 2:nrow){
cal <- c(test$measure)
test$dbh2[[1]] <- test$dbh[[1]]
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]], mean(diff(test$dbh2[[1:i-1]])), test$dbh2)
}
for (i in 2:nrow){
cal <- c(test$measure)
test$dbh2[[1]] <- test$dbh[[1]]
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
}
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[[1]] <- test$dbh[[1]]
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
}
test$dbh2 <-NULL
test$dbh2[[1]] <- test$dbh[[1]]
test$dbh2[1] <- test$dbh[1]
test$dbh2 <-NULL
test$dbh2[1] <- test$dbh[1]
test$dbh2 <-NULL
test[1, dbh2] <- test[1, dbh]
test[1, test$dbh2] <- test[1, test$dbh]
test[1, test$dbh2] <- test[1, 23]
View(test)
test[1, test$dbh2] <- test[1, 23]
test$dbh2 <- test$dbh
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2 <- test$dbh
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]], test$dbh2)
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
}
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2 <- test$dbh
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
}
warnings()
test$dbh[1]
test$dbh2 <-NULL
test$dbh2[1] <- test$dbh[1]
View(test)
test$dbh2 <- NA
test$dbh2[1] <- test$dbh[1]
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
if (test$new.band ==0){
test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
}
if (test$new.band==1){
test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
}
View(test)
test$dbh2 <- NA
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2 <- ifelse(test$new.band ==0, findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
test$dbh2 <- NA
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2 <- ifelse(test$new.band[i] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
test$dbh2 <- NA
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2 <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
intra <- band18[band18$intraannual==1, ]
test <- intra[intra$tag==30512, ]
test$dbh2 <- NA
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2 <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2 <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2[i]))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh2[[i-1]] == test$dbh[[i]],
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2[i]))
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh2[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2[i])
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]])
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]]),
mean(diff(test$dbh2[1:i-1])) + test$dbh2[[i-1]])
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
diff(test$dbh2[1:4])
test$dbh2[2] <- ifelse(test$new.band[[2]] ==0,
findDendroDBH(test$dbh2[[2]], cal[[1]], cal[[2]]), test$dbh2)
View(test)
test$dbh2<- ifelse(test$new.band ==0,
findDendroDBH(test$dbh2[[2]], cal[[1]], cal[[2]]), test$dbh2)
View(test)
test$dbh2[2] <- ifelse(test$new.band ==0,
findDendroDBH(test$dbh2[[2]], cal[[1]], cal[[2]]), test$dbh2)
test$dbh2 <- NA
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
mean(test$dbh2[1:i-1]) + test$dbh2[[i-1]])
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
test$dbh2 <- NA
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
mean(diff(test$dbh2[1:i-1])) + test$dbh2[[i-1]])
#if (test$new.band ==0){
#  test$dbh2 <- findDendroDBH(test$dbh2[[i]], cal[[i-1]], cal[[i]])
#}
#if (test$new.band==1){
#  test$dbh2 <- ifelse(test$dbh2[[i-1]] == test$dbh[[i]],
#                      mean(diff(test$dbh2[[1:i-1]])) + test$dbh2[[i-1]], test$dbh2)
#}
}
View(test)
names(intra)
stems <- c(band18$stemID)
stems <- c(intra$stemID)
stems <- c(!duplicated(intra$stemID))
stems <- c(!duplicated(intra$stemID, fixed=TRUE))
stems <- c(!duplicated(intra$stemID, value=TRUE))
stems <- c(intra$stemID[!duplicated(intra$stemID), ]
)
stems <- c(intra$stemID[ ,!duplicated(intra$stemID)])
stems <- c(intra$stemID[, !duplicated(intra$stemID)])
stems <- intra$stemID[, !duplicated(intra$stemID)]
stems <- c(unique(intra$stemID))
?split
split(intra, intra$stemID)
str(split(intra, intra$stemID))
trees <- list(split(intra, intra$stemID))
View(trees)
trees <- split(intra, intra$stemID)
View(trees)
band18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
intra <- band18[band18$intraannual==1, ]
stems <- c(unique(intra$stemID))
trees <- split(intra, intra$stemID) #split data into list of dataframes
View(trees)

pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols
dev.off()
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.5, color="black", angle=1.2)
# Plot
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_bw()
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_minimal()
dev.off()
map <- ggplot() +
geom_path(data = scbi_plot_df, aes(x = long, y = lat, group = group))+
geom_path(data=roads_df, aes(x=long, y=lat, group=group),
color="#996600", linetype=2)+
geom_path(data=streams_df, aes(x=long, y=lat, group=group), color="blue")+
geom_path(data=survey_areas_df, aes(x=long, y=lat, group=group), size=1.5)+
geom_point(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y), shape=19)+
geom_text(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y, label=tag),
size=3, hjust=1.25, nudge_y=-1, nudge_x=1, check_overlap=TRUE)+
labs(subtitle="Dendrobands_Biannual_2019")+
coord_sf(crs = "crs = +proj=merc", xlim=c(747350,747800), ylim=c(4308500, 4309125))+
panel.grid.major=element_line(colour="transparent")
#coord_cartesian(xlim=c(747350,747800), ylim=c(4308500, 4309200), default=TRUE)+
#coord_map(projection="mercator", xlim=c(747350,747800), ylim=c(4308500, 4309200))
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
# Plot
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_minimal()
dev.off()
map <- ggplot() +
geom_path(data = scbi_plot_df, aes(x = long, y = lat, group = group))+
geom_path(data=roads_df, aes(x=long, y=lat, group=group),
color="#996600", linetype=2)+
geom_path(data=streams_df, aes(x=long, y=lat, group=group), color="blue")+
geom_path(data=survey_areas_df, aes(x=long, y=lat, group=group), size=1.5)+
geom_point(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y), shape=19)+
geom_text(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y, label=tag),
size=3, hjust=1.25, nudge_y=-1, nudge_x=1, check_overlap=TRUE)+
labs(subtitle="Dendrobands_Biannual_2019")+
coord_sf(crs = "crs = +proj=merc", xlim=c(747350,747800), ylim=c(4308500, 4309125))+
theme(panel.grid.major=element_line(colour="transparent"))
#coord_cartesian(xlim=c(747350,747800), ylim=c(4308500, 4309200), default=TRUE)+
#coord_map(projection="mercator", xlim=c(747350,747800), ylim=c(4308500, 4309200))
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
# Plot
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_minimal()
dev.off()
map <- ggplot() +
geom_path(data = scbi_plot_df, aes(x = long, y = lat, group = group))+
geom_path(data=roads_df, aes(x=long, y=lat, group=group),
color="#996600", linetype=2)+
geom_path(data=streams_df, aes(x=long, y=lat, group=group), color="blue")+
geom_path(data=survey_areas_df, aes(x=long, y=lat, group=group), size=1.5)+
geom_point(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y), shape=19)+
geom_text(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y, label=tag),
size=3, hjust=1.25, nudge_y=-1, nudge_x=1, check_overlap=TRUE)+
labs(subtitle="Dendrobands_Biannual_2019")+
coord_sf(crs = "crs = +proj=merc", xlim=c(747350,747800), ylim=c(4308500, 4309125))+
#theme(panel.grid.major=element_line(colour="transparent"))
#coord_cartesian(xlim=c(747350,747800), ylim=c(4308500, 4309200), default=TRUE)+
#coord_map(projection="mercator", xlim=c(747350,747800), ylim=c(4308500, 4309200))
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
# Plot
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
coord_sf(datum=NA)
theme_minimal()
dev.off()
map <- ggplot() +
geom_path(data = scbi_plot_df, aes(x = long, y = lat, group = group))+
geom_path(data=roads_df, aes(x=long, y=lat, group=group),
color="#996600", linetype=2)+
geom_path(data=streams_df, aes(x=long, y=lat, group=group), color="blue")+
geom_path(data=survey_areas_df, aes(x=long, y=lat, group=group), size=1.5)+
geom_point(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y), shape=19)+
geom_text(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y, label=tag),
size=3, hjust=1.25, nudge_y=-1, nudge_x=1, check_overlap=TRUE)+
labs(subtitle="Dendrobands_Biannual_2019")+
coord_sf(crs = "crs = +proj=merc", xlim=c(747350,747800), ylim=c(4308500, 4309125))+
theme(panel.grid.major=element_line(colour="transparent"))
#coord_cartesian(xlim=c(747350,747800), ylim=c(4308500, 4309200), default=TRUE)+
#coord_map(projection="mercator", xlim=c(747350,747800), ylim=c(4308500, 4309200))
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
# Plot
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_minimal()
dev.off()
map <- ggplot() +
geom_path(data = scbi_plot_df, aes(x = long, y = lat, group = group))+
geom_path(data=roads_df, aes(x=long, y=lat, group=group),
color="#996600", linetype=2)+
geom_path(data=streams_df, aes(x=long, y=lat, group=group), color="blue")+
geom_path(data=survey_areas_df, aes(x=long, y=lat, group=group), size=1.5)+
geom_point(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y), shape=19)+
geom_text(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y, label=tag),
size=3, hjust=1.25, nudge_y=-1, nudge_x=1, check_overlap=TRUE)+
labs(subtitle="Dendrobands_Biannual_2019")+
coord_sf(crs = "crs = +proj=merc", xlim=c(747350,747800), ylim=c(4308500, 4309125))
#coord_cartesian(xlim=c(747350,747800), ylim=c(4308500, 4309200), default=TRUE)+
#coord_map(projection="mercator", xlim=c(747350,747800), ylim=c(4308500, 4309200))
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
# Plot
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme(panel.grid.major = element_line(colour = 'transparent'), panel.grid.minor = element_line(colour = 'transparent'))
theme_minimal()
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme(panel.grid.major = element_line(colour = 'transparent'), panel.grid.minor = element_line(colour = 'transparent'))+
theme_minimal()
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
#theme(panel.grid.major = element_line(colour = 'transparent'), panel.grid.minor = element_line(colour = 'transparent'))+
theme_minimal()+
theme_map()
dev.off()
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
#theme(panel.grid.major = element_line(colour = 'transparent'), panel.grid.minor = element_line(colour = 'transparent'))+
theme_minimal()+
theme_map()
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme(panel.grid.major = element_line(colour = 'transparent'), panel.grid.minor = element_line(colour = 'transparent'))+
#theme_minimal()+
theme_map()
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme(panel.grid.major = element_line(colour = 'transparent'))+
#theme_minimal()+
theme_map()
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
#theme(panel.grid.major = element_line(colour = 'transparent'))+
#theme_minimal()+
theme_map()
dev.off()
?ggthemes
setwd("E:/Github_SCBI/Dendrobands/data")
#we are using dendro_trees for this code as opposed to "scbi.dendroAll_YEAR.csv" because 1. dendro_trees reflects the data in the all of the YEAR files and 2. dendro_trees has the necessary mapping information in lx/ly, gx/gy, NAD83X/Y, AND lat/lon in decimal degrees.
dendro_trees <- read.csv("E:/Github_SCBI/Dendrobands/data/dendro_trees.csv")
#to start off, filter by all the trees that are alive as of the end of last year's fall survey.
bands_2018 <- dendro_trees[is.na(dendro_trees$mortality.year), ]
bands_2018 <- bands_2018[complete.cases(bands_2018[, c("NAD83_X", "NAD83_Y")]),] # remove one tree with missing coordinates
##this should be fixed when 131352 is found with 2018 data!!!!
library(ggplot2)
library(rgdal)
scbi_plot <- readOGR("V:/SIGEO/GIS_data/20m_grid.shp")
deer <- readOGR("V:/SIGEO/GIS_data/deer_exclosure_2011.shp")
roads <- readOGR("V:/SIGEO/GIS_data/SCBI_roads_edits.shp")
streams <- readOGR("V:/SIGEO/GIS_data/SCBI_streams_edits.shp")
survey_areas <- readOGR("V:/SIGEO/GIS_data/dendroband surveys/dendroband (bi)annual/biannual_survey_areas.shp")
#convert all shp to dataframe so that it can be used by ggplot
library(broom)
scbi_plot_df <- tidy(scbi_plot)
deer_df <- tidy(deer)
roads_df <- tidy(roads)
streams_df <- tidy(streams)
survey_areas_df <- tidy(survey_areas)
library(ggrepel)
library(sf)
map <- ggplot() +
geom_path(data = scbi_plot_df, aes(x = long, y = lat, group = group))+
geom_path(data=roads_df, aes(x=long, y=lat, group=group),
color="#996600", linetype=2)+
geom_path(data=streams_df, aes(x=long, y=lat, group=group), color="blue")+
geom_path(data=survey_areas_df, aes(x=long, y=lat, group=group), size=1.5)+
geom_point(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y), shape=19)+
geom_text(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y, label=tag),
size=3, hjust=1.25, nudge_y=-1, nudge_x=1, check_overlap=TRUE)+
labs(subtitle="Dendrobands_Biannual_2019")+
coord_sf(crs = "crs = +proj=merc", xlim=c(747350,747800), ylim=c(4308500, 4309125))
#coord_cartesian(xlim=c(747350,747800), ylim=c(4308500, 4309200), default=TRUE)+
#coord_map(projection="mercator", xlim=c(747350,747800), ylim=c(4308500, 4309200))
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
library(ggthemes)
# Plot
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
#theme(panel.grid.major = element_line(colour = 'transparent'))+
#theme_minimal()+
theme_map()
dev.off()
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
#theme_minimal()+
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
?annotate
rows <- annotate("text", x=747350, ymin=4308500, ymax=4309125, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
#rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
rows <- annotate("text", xmin=747350, xmin=747360, ymin=4308500, ymax=4309125, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
#rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", 747580, 4308495, label = paste("01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20",collapse=" "), size=5.4, color="black", angle=1.2)
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", xmin=747350, xmin=747360, ymin=4308500, ymax=4309125, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", xmin=747350, xmax=747360, ymin=4308500, ymax=4309125, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", xmin=747350, xmax=747600, ymin=4308500, ymax=4309125, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("rect", xmin=747350, xmax=747600, ymin=4308500, ymax=4309125, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", x = 747350, y = seq(4309125, 4308500, length.out = 32), label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
rows
seq(4309125, 4308500, length.out = 32)
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", x = 747350, y = seq(4309125, 4308500, length.out = 32), label = 32:1, size=5.25, color="black", angle=1.1)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
library(stringr)
sprintf("%02d", 32:1)
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", x = 747350, y = seq(4309125, 4308500, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black", angle=1.1)
cols <- annotate("text", x = seq(747350, 747800, length.out = 20), y = 4308495, label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.2)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
cols <- annotate("text", x = seq(747450, 747800, length.out = 20), y = 4308495, label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.2)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
cols <- annotate("text", x = seq(747390, 747800, length.out = 20), y = 4308495, label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.2)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
cols <- annotate("text", x = seq(747390, 747780, length.out = 20), y = 4308495, label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.2)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
cols <- annotate("text", x = seq(747390, 747760, length.out = 20), y = 4308495, label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.2)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
cols <- annotate("text", x = seq(747390, 747760, length.out = 20), y = 4308495, label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
setwd("E:/Github_SCBI/Dendrobands/data")
#we are using dendro_trees for this code as opposed to "scbi.dendroAll_YEAR.csv" because 1. dendro_trees reflects the data in the all of the YEAR files and 2. dendro_trees has the necessary mapping information in lx/ly, gx/gy, NAD83X/Y, AND lat/lon in decimal degrees.
dendro_trees <- read.csv("E:/Github_SCBI/Dendrobands/data/dendro_trees.csv")
#to start off, filter by all the trees that are alive as of the end of last year's fall survey.
bands_2018 <- dendro_trees[is.na(dendro_trees$mortality.year), ]
bands_2018 <- bands_2018[complete.cases(bands_2018[, c("NAD83_X", "NAD83_Y")]),] # remove one tree with missing coordinates
##this should be fixed when 131352 is found with 2018 data!!!!
library(ggplot2)
library(rgdal)
scbi_plot <- readOGR("V:/SIGEO/GIS_data/20m_grid.shp")
deer <- readOGR("V:/SIGEO/GIS_data/deer_exclosure_2011.shp")
roads <- readOGR("V:/SIGEO/GIS_data/SCBI_roads_edits.shp")
streams <- readOGR("V:/SIGEO/GIS_data/SCBI_streams_edits.shp")
survey_areas <- readOGR("V:/SIGEO/GIS_data/dendroband surveys/dendroband (bi)annual/biannual_survey_areas.shp")
#convert all shp to dataframe so that it can be used by ggplot
library(broom)
scbi_plot_df <- tidy(scbi_plot)
deer_df <- tidy(deer)
roads_df <- tidy(roads)
streams_df <- tidy(streams)
survey_areas_df <- tidy(survey_areas)
library(ggrepel)
library(sf)
map <- ggplot() +
geom_path(data = scbi_plot_df, aes(x = long, y = lat, group = group))+
geom_path(data=roads_df, aes(x=long, y=lat, group=group),
color="#996600", linetype=2)+
geom_path(data=streams_df, aes(x=long, y=lat, group=group), color="blue")+
geom_path(data=survey_areas_df, aes(x=long, y=lat, group=group), size=1.5)+
geom_point(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y), shape=19)+
geom_text(data=bands_2018, aes(x=NAD83_X, y=NAD83_Y, label=tag),
size=3, hjust=1.25, nudge_y=-1, nudge_x=1, check_overlap=TRUE)+
labs(subtitle="Dendrobands_Biannual_2019")+
coord_sf(crs = "crs = +proj=merc", xlim=c(747350,747800), ylim=c(4308500, 4309125))
#coord_cartesian(xlim=c(747350,747800), ylim=c(4308500, 4309200), default=TRUE)+
#coord_map(projection="mercator", xlim=c(747350,747800), ylim=c(4308500, 4309200))
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", x = 747350, y = seq(4309125, 4308500, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black", angle=1.1)
#rows <- annotate("text", 747350, 4308825, label = paste(c(32:1), collapse = "\n"), size=5.25, color="black", angle=1.1)
cols <- annotate("text", x = seq(747390, 747760, length.out = 20), y = 4308495, label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
cols <- annotate("text", x = seq(747390, 747760, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
#x and y give the x/yposition on the plot; rot=angle rotation
rows <- annotate("text", x = seq(747350, 747370, length.out = 32), y = seq(4309125, 4308500, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black", angle=1.1)
cols <- annotate("text", x = seq(747390, 747760, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
cols <- annotate("text", x = seq(747390, 747765, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
rows <- annotate("text", x = seq(747350, 747370, length.out = 32), y = seq(4309130, 4308500, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black", angle=1.1)
cols <- annotate("text", x = seq(747390, 747765, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
rows <- annotate("text", x = seq(747350, 747370, length.out = 32), y = seq(4309125, 4308495, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black", angle=1.1)
cols <- annotate("text", x = seq(747390, 747765, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
rows <- annotate("text", x = seq(747350, 747370, length.out = 32), y = seq(4309125, 4308505, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black", angle=1.1)
cols <- annotate("text", x = seq(747390, 747765, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black", angle=1.4)
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
rows <- annotate("text", x = seq(747350, 747360, length.out = 32), y = seq(4309125, 4308505, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black")
cols <- annotate("text", x = seq(747390, 747765, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black")
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
rows <- annotate("text", x = seq(747350, 747365, length.out = 32), y = seq(4309125, 4308505, length.out = 32), label = sprintf("%02d", 32:1) , size=5.25, color="black")
cols <- annotate("text", x = seq(747390, 747765, length.out = 20), y = seq(4308495, 4308505, length.out = 20), label = sprintf("%02d", 1:20), size=5.4, color="black")
#now, we add the row and column labels
##to get rid of the graticules (the lat/lon labels and lines), you need to have both "theme" calls in the following function.
library(ggthemes)
pdf("test_output.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()
pdf("dendroband_biannual_map.pdf", width = 8.5, height=11)
map +
rows +
cols +
theme_map()+
theme(panel.grid.major = element_line(colour = 'transparent'))
dev.off()

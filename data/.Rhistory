setwd("E:/Github_SCBI/Dendrobands/data")
dirs <- dir("E:/Github_SCBI/Dendrobands/data", pattern="_201[1-8]*.csv")
years <- c(2011:2018)
#1a. this loop breaks up each year's dendroband trees into separate dataframes by stemID
all_years <- list()
for (k in seq(along=dirs)){
file <- dirs[[k]]
yr <- read.csv(file)
yr_intra <- yr[yr$intraannual==1, ]
all_years[[k]] <- split(yr_intra, yr_intra$stemID)
}
tent_name <- paste0("trees", sep="_", years)
names(all_years) <- tent_name
#the below loop takes all the unique stemIDs from each year and rbinds them.
all_stems <- list()
for(stemID in sort(unique(unlist(sapply(all_years, names))))) {
all_stems[[paste0("stemID_", stemID)]] <-  do.call(rbind, lapply(years, function(year) all_years[[paste0("trees", sep="_", year)]][[stemID]]))
}
#sort(unique(unlist(sapply(all_years, names)))) -> an explainer:
#sapply says find all the names within all_years
#unlist says take all those names (all those stemIDS) and dump them all together
#unique gets rid of the duplicates, and sort sorts them
#need to call in Condit's functions (also saved in separate R code) for the next bit
objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
dendro_2018 <- read.csv("E:/Github_SCBI/Dendrobands/data/scbi.dendroAll_2018.csv")
intra <- dendro_2018[dendro_2018$intraannual==1, ]
test <- intra[intra$tag==12025, ] #12025 has band replaced
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <- ifelse(test$new.band[[i]] ==0,
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$dbh[[i]] == test$dbh[[i-1]],
mean(diff(test$dbh2[1:i-1])) + test$dbh2[[i-1]],
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]])))
}
View(test)
dendro_2017 <- read.csv("E:/Github_SCBI/Dendrobands/data/scbi.dendroAll_2017.csv")
intra <- dendro_2017[dendro_2017$intraannual==1, ]
test <- intra[intra$tag==10671, ] #10671 has band replaced but with NAs for a few measurements
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <-
ifelse(test$new.band[[i]] ==0 & !is.na(test$measure[[i]]),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$new.band[[i]] == 0 & is.na(test$measure[[i]]),
is.na(test$db2[[i]]),
ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])) + (max(which(!is.na(test$dbh2)))),
ifelse(test$new.band[[i]]==1 & !is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]]),
mean(diff(test$dbh2[1:i-1])) + test$dbh2[[i-1]],
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]))))
}
View(test)
library(tidyverse)
library(tidyr)
install.packages("tidyr")
library(tidyr)
install.packages("tidyr")
library(tidyr)
?coalesce
NonNAindex <- which(!is.na(test$dbh2))
firstNonNA <- min(NonNAindex)
NonNAindex <- as.numeric(which(!is.na(test$dbh2)))
NonNAindex <- which(as.numeric(!is.na(test$dbh2)))
sapply(!is.na(test$dbh2), tail, 1)
tapply(!is.na(test$dbh2), tail, 1)
?sapply
lapply(!is.na(test$dbh2), tail, 1)
min(!is.na(test$dbh2))
sapply(test$dbh2, function(x) max(which(!is.na(x)))
sapply(test$dbh2, function(x) max(which(!is.na(x))))
install.packages("dplyr")
library(dplyr)
?coalesce
coalese(test$dbh2)
library(dplyr)
coalesce(test$dbh2)
test[7,11] <- NA
View(test)
max(which(complete.cases(test$dbh2)))
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <-
ifelse(test$new.band[[i]] ==0 & !is.na(test$measure[[i]]),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$new.band[[i]] == 0 & is.na(test$measure[[i]]),
is.na(test$db2[[i]]),
ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:i-1]), na.rm=TRUE), test$dbh2[[i-1]], na.rm=TRUE),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]))))
}
View(test)
y <- c(851, 851.99, 852.35, 853.08, 853.38, NA, NA, NA, NA, NA, NA)
test$dbh3 <- y
View(test)
i=6
sum(mean(diff(test$dbh3[1:i-1]), na.rm=TRUE), test$dbh2[[i-1]])
sum(mean(diff(test$dbh3[1:i-1]), na.rm=TRUE), test$dbh2[[i-1]], na.rm=TRUE)
test$dbh3[[i-1]]
test$dbh3[[max(!is.na(test$dbh3))]]
test$dbh3[[min(!is.na(test$dbh3))]]
test$dbh3[[max(which(!is.na(test$dbh3)))]]
sum(mean(diff(test$dbh3[1:i-1]), na.rm=TRUE), test$dbh3[[max(which(!is.na(test$dbh3)))]])
i=8
sum(mean(diff(test$dbh3[1:i-1]), na.rm=TRUE), test$dbh2[[i-1]], na.rm=TRUE)
sum(mean(diff(test$dbh3[1:i-1]), na.rm=TRUE), test$dbh3[[i-1]], na.rm=TRUE)
sum(mean(diff(test$dbh3[[max(which(!is.na(test$dbh3)))]]), na.rm=TRUE), test$dbh3[[max(which(!is.na(test$dbh3)))]])
sum(mean(diff(test$dbh3[max(which(!is.na(test$dbh3)))]), na.rm=TRUE), test$dbh3[[max(which(!is.na(test$dbh3)))]])
sum(mean(diff(test$dbh3[1:max(which(!is.na(test$dbh3)))]), na.rm=TRUE), test$dbh3[[max(which(!is.na(test$dbh3)))]])
y <- max(which(!is.na(test$dbh2)))
sum(mean(diff(test$dbh3[1:max(which(!is.na(test$dbh3)))])), test$dbh3[[max(which(!is.na(test$dbh3)))]])
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
y <- max(which(!is.na(test$dbh2)))
test$dbh2[i] <-
ifelse(test$new.band[[i]] ==0 & !is.na(test$measure[[i]]),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$new.band[[i]] == 0 & is.na(test$measure[[i]]),
is.na(test$db2[[i]]),
ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]]),
findDendroDBH(test$dbh2[[max(which(!is.na(test$dbh2)))]], cal[[max(which(!is.na(test$dbh2)))]], cal[[i]]))))
}
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <-
ifelse(test$new.band[[i]] ==0 & !is.na(test$measure[[i]]),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$new.band[[i]] == 0 & is.na(test$measure[[i]]),
is.na(test$db2[[i]]),
ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]]),
ifelse(test$new.band[[i]]==1 & !is.na(test$dbh2[[i-1]] & test$dbh[[i]]==test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:i-1])), test$dbh2[[i-1]]),
findDendroDBH(test$dbh2[[max(which(!is.na(test$dbh2)))]], cal[[max(which(!is.na(test$dbh2)))]], cal[[i]]))))))
}
View(test)
test <- intra[intra$tag==60459, ] #60459 has band replaced but with NAs for a few measurements. The following code was also tried with tag 10671 that had one NA measurement and it worked.
View(test)
dendro_2017 <- read.csv("E:/Github_SCBI/Dendrobands/data/scbi.dendroAll_2017.csv")
intra <- dendro_2017[dendro_2017$intraannual==1, ]
test <- intra[intra$tag==60459, ] #60459 has band replaced but with NAs for a few measurements. The following code was also tried with tag 10671 that had one NA measurement and it worked.
View(intra)
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <-
ifelse(test$new.band[[i]] ==0 & !is.na(test$measure[[i]]),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$new.band[[i]] == 0 & is.na(test$measure[[i]]),
is.na(test$db2[[i]]),
ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]]),
ifelse(test$new.band[[i]]==1 & !is.na(test$dbh2[[i-1]] & test$dbh[[i]]==test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:i-1])), test$dbh2[[i-1]]),
findDendroDBH(test$dbh2[[max(which(!is.na(test$dbh2)))]], cal[[max(which(!is.na(test$dbh2)))]], cal[[i]]))))))
}
View(test)
i
i=7
test$dbh2[[i]]
test$dbh2[[max(which(!is.na(test$dbh2)))]]
mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))]))
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]])
test$dbh2[i] <- ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]]), test$dbh2
)
View(test)
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <-
ifelse(test$new.band[[i]] ==0 & !is.na(test$measure[[i]]),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$new.band[[i]] == 0 & is.na(test$measure[[i]]),
is.na(test$db2[[i]]),
ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]]),
ifelse(test$new.band[[i]]==1 & !is.na(test$dbh2[[i-1]] & test$dbh[[i]]==test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:i-1])), test$dbh2[[i-1]]),
findDendroDBH(test$dbh2[[max(which(!is.na(test$dbh2)))]], cal[[max(which(!is.na(test$dbh2)))]], cal[[i]]))))))
}
View(test)
i=7
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]])
for (i in 2:nrow(test)){
cal <- c(test$measure)
test$dbh2[1] <- test$dbh[1]
test$dbh2[i] <-
ifelse(test$new.band[[i]] ==0 & !is.na(test$measure[[i]]),
findDendroDBH(test$dbh2[[i-1]], cal[[i-1]], cal[[i]]),
ifelse(test$new.band[[i]] == 0 & is.na(test$measure[[i]]),
is.na(test$db2[[i]]),
ifelse(test$new.band[[i]]==1 & is.na(test$dbh2[[i-1]]) & test$dbh[[i]] == test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:max(which(!is.na(test$dbh2)))])), test$dbh2[[max(which(!is.na(test$dbh2)))]]),
ifelse(test$new.band[[i]]==1 & !is.na(test$dbh2[[i-1]]) & test$dbh[[i]]==test$dbh[[i-1]],
sum(mean(diff(test$dbh2[1:i-1])), test$dbh2[[i-1]]),
findDendroDBH(test$dbh2[[max(which(!is.na(test$dbh2)))]], cal[[max(which(!is.na(test$dbh2)))]], cal[[i]])))))
}
View(test)

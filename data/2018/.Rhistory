##the main csv is located in the Dendrobands repo
dendro_cored_full <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/dendro_cored_full.csv")
library(dplyr)
dendro <- dendro_cored_full %>%
filter(status=="A")
View(dendro_cored_full)
dendro <- dendro[c(1:4,7,9:10)]
dendro$crown.position <- ""
View(dendro)
dendro <- dendro_cored_full %>%
filter(status=="A")
dendro <- dendro[c(1:4,7,9:10)]
dendro$dbh2018 <- ""
dendro$crown.position <- ""
View(dendro)
write.csv(dendro, "scbi.crownposition.csv")
getwd()
scbi.stem1 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-cvs-files/scbi.stem1.csv")
View(scbi.stem1)
scbi.stem2 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-cvs-files/scbi.stem2.csv")
View(scbi.stem2)
data2008 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-cvs-files/scbi.stem1.csv")
data2013 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-cvs-files/scbi.stem2.csv")
library(dplyr)
install.packages("rlang")
##the main csv is located in the Dendrobands repo
dendro_cored_full <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/dendro_cored_full.csv")
cores <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/climate_sensitivity_cores/data/census_data_for_cored_trees.csv")
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/dendro_trees.csv")
library(data.table)
setnames(cores, old=c("StemTag"), new=c("stemtag"))
dendro_trees$year.cored <-cores$year.cored[match(dendro_trees$tag,cores$tag)]
dendro_merge <- merge(dendro_trees, cores, by=c("tag", "stemtag", "sp", "quadrat", "treeID", "stemID", "status", "gx", "gy","year.cored"), all.x=TRUE, all.y=TRUE)
dendro_all <- dendro_merge[c(1:19)]
##order the data and remove the crossovers (btwn biannual and cored) that don't have biannual marked already
dendro_all <- dendro_all[order(dendro_all$tag,dendro_all$biannual),]
dendro_all$stemID[is.na(dendro_all$stemID)] <- 0
##WARNING:assign stemID values for 30365 and 131352 (discrepancy with 2013 census). THIS PART SHOULD BE DELETED once the 2018 census data includes these tags with the appropriate info.
dendro_all[91,6]=11
dendro_all[867,6]=12
dendro_all<-dendro_all[!duplicated(dendro_all$stemID),]
##populate with geographic coordinates
latlon <- read.csv("V:/SIGEO/GIS_data/dendroband surveys/Merged_dendroband_utm_lat_lon.csv")
dendro_all$NAD83_X <- latlon$NAD83_X[match(dendro_all$stemID, latlon$stemID)]
dendro_all$NAD83_Y <- latlon$NAD83_Y[match(dendro_all$stemID, latlon$stemID)]
dendro_all$lat <- latlon$lat[match(dendro_all$stemID, latlon$stemID)]
dendro_all$lon <- latlon$lon[match(dendro_all$stemID, latlon$stemID)]
##populate with lx, ly, and status (once ForestGEO 2018 census data is added, use that for base status)
census_2013 <- read.csv("V:/SIGEO/3-RECENSUS 2013/DATA/FINAL DATA to use, to share/scbi.stem2.csv")
dendro_all$lx <- $lx[match(dendro_all$stemID, $stemID)]
dendro_all$ly <- $ly[match(dendro_all$stemID, $stemID)]
##update status from most recent mortality data (this will update only some of the trees, hence why the census data is used first)
mortality_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/SCBI_mortality/raw data/Mortality_Survey_2018.csv")
dendro_all$status <- mortality_2018$new.status[match(dendro_all$tag, mortality_2018$tag)]
missing <- ifelse(is.na(dendro_all$status), dendro_all$tag, "")
missingdf <- dendro_all[!complete.cases(dendro_all$status),]
missingdf <- missingdf[c(1:2)]
setnames(census_2013, old=c("StemTag"), new=c("stemtag"))
dendro_test <- merge(missingdf, census_2013[,c("tag", "stemtag","status")], by=c("tag","stemtag"))
dendro_all <- merge(dendro_all, dendro_test, by="tag", all.x=TRUE)
setnames(dendro_all, old="stemtag.x", new="stemtag")
library(tidyr)
dendro_all <- unite(dendro_all, status, status.x, status.y)
dendro_all$status <- gsub("_NA", "", dendro_all$status)
dendro_all$status <- gsub("NA_", "", dendro_all$status)
dendro_all$status <- gsub("PD", "D", dendro_all$status)
dendro_all$status <- gsub("DS", "D", dendro_all$status)
dendro_all$status <- gsub("DC", "D", dendro_all$status)
dendro_all$status <- gsub("AU", "A", dendro_all$status)
##get rid of NA
dendro_all$biannual[is.na(dendro_all$biannual)] <- 0
dendro_all$intraannual[is.na(dendro_all$intraannual)] <- 0
dendro_all$cored[is.na(dendro_all$cored)] <- 1
rm(dendro_cored_full)
census_2008 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-cvs-files/scbi.stem1.csv")
View(dendro_all)
dendro_all$dbh2008 <- ""
dendro_all$dbh2013 <- ""
View(census_2008)
cores <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/climate_sensitivity_cores/data/census_data_for_cored_trees.csv")
dendro_trees <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/dendro_trees.csv")
library(data.table)
setnames(cores, old=c("StemTag"), new=c("stemtag"))
dendro_trees$year.cored <-cores$year.cored[match(dendro_trees$tag,cores$tag)]
dendro_merge <- merge(dendro_trees, cores, by=c("tag", "stemtag", "sp", "quadrat", "treeID", "stemID", "status", "gx", "gy","year.cored"), all.x=TRUE, all.y=TRUE)
dendro_all <- dendro_merge[c(1:19)]
##order the data and remove the crossovers (btwn biannual and cored) that don't have biannual marked already
dendro_all <- dendro_all[order(dendro_all$tag,dendro_all$biannual),]
dendro_all$stemID[is.na(dendro_all$stemID)] <- 0
##WARNING:assign stemID values for 30365 and 131352 (discrepancy with 2013 census). THIS PART SHOULD BE DELETED once the 2018 census data includes these tags with the appropriate info.
dendro_all[91,6]=11
dendro_all[867,6]=12
dendro_all<-dendro_all[!duplicated(dendro_all$stemID),]
##populate with geographic coordinates
latlon <- read.csv("V:/SIGEO/GIS_data/dendroband surveys/Merged_dendroband_utm_lat_lon.csv")
dendro_all$NAD83_X <- latlon$NAD83_X[match(dendro_all$stemID, latlon$stemID)]
dendro_all$NAD83_Y <- latlon$NAD83_Y[match(dendro_all$stemID, latlon$stemID)]
dendro_all$lat <- latlon$lat[match(dendro_all$stemID, latlon$stemID)]
dendro_all$lon <- latlon$lon[match(dendro_all$stemID, latlon$stemID)]
##populate with lx, ly, and status (once ForestGEO 2018 census data is added, use that for base status)
census_2013 <- read.csv("V:/SIGEO/3-RECENSUS 2013/DATA/FINAL DATA to use, to share/scbi.stem2.csv")
dendro_all$lx <- $lx[match(dendro_all$stemID, $stemID)]
dendro_all$ly <- $ly[match(dendro_all$stemID, $stemID)]
##update status from most recent mortality data (this will update only some of the trees, hence why the census data is used first)
mortality_2018 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data_private/SCBI_mortality/raw data/Mortality_Survey_2018.csv")
dendro_all$status <- mortality_2018$new.status[match(dendro_all$tag, mortality_2018$tag)]
missing <- ifelse(is.na(dendro_all$status), dendro_all$tag, "")
missingdf <- dendro_all[!complete.cases(dendro_all$status),]
missingdf <- missingdf[c(1:2)]
setnames(census_2013, old=c("StemTag"), new=c("stemtag"))
dendro_test <- merge(missingdf, census_2013[,c("tag", "stemtag","status")], by=c("tag","stemtag"))
dendro_all <- merge(dendro_all, dendro_test, by="tag", all.x=TRUE)
setnames(dendro_all, old="stemtag.x", new="stemtag")
library(tidyr)
dendro_all <- unite(dendro_all, status, status.x, status.y)
dendro_all$status <- gsub("_NA", "", dendro_all$status)
dendro_all$status <- gsub("NA_", "", dendro_all$status)
dendro_all$status <- gsub("PD", "D", dendro_all$status)
dendro_all$status <- gsub("DS", "D", dendro_all$status)
dendro_all$status <- gsub("DC", "D", dendro_all$status)
dendro_all$status <- gsub("AU", "A", dendro_all$status)
##get rid of NA
dendro_all$biannual[is.na(dendro_all$biannual)] <- 0
dendro_all$intraannual[is.na(dendro_all$intraannual)] <- 0
dendro_all$cored[is.na(dendro_all$cored)] <- 1
census_2008 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/SCBI-ForestGEO-Data/tree_main_census/data/census-cvs-files/scbi.stem1.csv")
View(dendro_all)
dendro_all$dbh2008 <- census_2008$dbh[match(dendro_all$stemID, census_2008$stemID)]
dendro_all$dbh2013 <- census_2013$dbh[match(dendro_all$stemID, census_2013$stemID)]
##re-order
dendro_all <- dendro_all[c(1:6,21:22,11:13,10,7,14:15,8:9,16:19)]
#get rid of final duplicates now that all rows are the same
dendro_all <- dendro_all[!duplicated(dendro_all),]
write.csv(dendro_all, "dendro_cored_full.csv", row.names=FALSE)
getwd()
##the main csv is located in the Dendrobands repo
dendro_cored_full <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/dendro_cored_full.csv")
library(dplyr)
dendro <- dendro_cored_full %>%
filter(status=="A")
View(dendro)
dendro <- dendro[c(1:4,9,11:12,7:8)]
View(dendro)
dendro$dbh2018 <- ""
dendro$crown.position <- ""
View(dendro)
write.csv(dendro, "scbi.crownposition.csv", row.names=FALSE)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/clean_data_files/2018")
data_2018 <- read.csv("scbi.dendroAll_2018.csv")
prevmeasbi <- subset(data_2018,survey.ID=="2018.01" & biannual=="1") #subset by previous survey.ID
data_bi <- subset(data_2018,survey.ID=="2018.01" & biannual=="1") #subset by 2018.01 (one entry per stem)
data_bi<-data_bi[ ,c(1,2,7:12,15,22)]
data_bi$measure = NA
data_bi$codes = NA
data_bi$"Fall Collector:  "= NA
library(dplyr)
data_bi<-data_bi %>% rename("Spring Collector:" = measure, "codes&notes" = codes, "stem" = stemtag)
data_bi$prevmeas = prevmeasbi$measure
data_bi[is.na(data_bi)&!is.na(data_bi$prevmeas)] <- " "
data_bi<-data_bi[,c(1:3,10,4:6,12,7,11,8:9)]
data_bi$location<-gsub("South", "S", data_bi$location)
data_bi$location<-gsub("North", "N", data_bi$location)
#assign values per tag by survey area (based on biannual map in https://github.com/SCBI-ForestGEO/Dendrobands/tree/master/maps)
data_bi$area <- ""
data_bi$area <-
ifelse((data_bi$quadrat %in% c(1301:1303))|
(data_bi$quadrat %in% c(1401:1404))|
(data_bi$quadrat %in% c(1501:1515))|
(data_bi$quadrat %in% c(1601:1615))|
(data_bi$quadrat %in% c(1701:1715))|
(data_bi$quadrat %in% c(1801:1815))|
(data_bi$quadrat %in% c(1901:1915))|
(data_bi$quadrat %in% c(2001:2015)), 1,
ifelse((data_bi$quadrat %in% c(504:507))|
(data_bi$quadrat %in% c(608))|
(data_bi$quadrat %in% c(703:712))|
(data_bi$quadrat %in% c(803:813))|
(data_bi$quadrat %in% c(901:913))|
(data_bi$quadrat %in% c(1003:1012))|
(data_bi$quadrat %in% c(1101:1112))|
(data_bi$quadrat %in% c(1201:1212))|
(data_bi$quadrat %in% c(1304:1311))|
(data_bi$quadrat %in% c(1405:1411)), 2,
ifelse((data_bi$quadrat %in% c(101:115))|
(data_bi$quadrat %in% c(201:215))|
(data_bi$quadrat %in% c(301:315))|
(data_bi$quadrat %in% c(401:415))|
(data_bi$quadrat %in% c(502,514,515,610,611,614
,615,701,702,713,714,715
,801,1001,1014,1313,1314
,1315,1413)), 3,
ifelse((data_bi$quadrat %in% c(116:132))|
(data_bi$quadrat %in% c(216:232))|
(data_bi$quadrat %in% c(316:332))|
(data_bi$quadrat %in% c(416:432))|
(data_bi$quadrat %in% c(516:532))|
(data_bi$quadrat %in% c(616:624))|
(data_bi$quadrat %in% c(716:724))|
(data_bi$quadrat %in% c(816:824)), 4,
ifelse((data_bi$quadrat %in% c(916:924))|
(data_bi$quadrat %in% c(1016:1024))|
(data_bi$quadrat %in% c(1116:1124))|
(data_bi$quadrat %in% c(1216:1224))|
(data_bi$quadrat %in% c(1316:1324))|
(data_bi$quadrat %in% c(1416,1417,1422)), 5,
ifelse((data_bi$quadrat %in% c(1419))|
(data_bi$quadrat %in% c(1516:1524))|
(data_bi$quadrat %in% c(1616:1624))|
(data_bi$quadrat %in% c(1716:1724))|
(data_bi$quadrat %in% c(1816:1824))|
(data_bi$quadrat %in% c(1916:1924))|
(data_bi$quadrat %in% c(2016:2024)), 6,
ifelse((data_bi$quadrat %in% c(625:632))|
(data_bi$quadrat %in% c(725:732))|
(data_bi$quadrat %in% c(825:832))|
(data_bi$quadrat %in% c(925:932))|
(data_bi$quadrat %in% c(1025:1029,1031,1032)), 7,
ifelse((data_bi$quadrat %in% c(1030))|
(data_bi$quadrat %in% c(1125:1132))|
(data_bi$quadrat %in% c(1225:1232))|
(data_bi$quadrat %in% c(1325:1332))|
(data_bi$quadrat %in% c(1425:1432)), 8,
ifelse((data_bi$quadrat %in% c(1525:1532))|
(data_bi$quadrat %in% c(1625:1632))|
(data_bi$quadrat %in% c(1725:1732))|
(data_bi$quadrat %in% c(1825:1832))|
(data_bi$quadrat %in% c(1925:1932))|
(data_bi$quadrat %in% c(2025:2032)), 9, "")))))))))
data_bi <- data_bi[c(1:11,13,12)]
matrix <- function(data_bi, table_title) {
rbind(c(table_title, rep('', ncol(data_bi)-1)), # title
names(data_bi), # column names
unname(sapply(data_bi, as.character))) # data
}
temp <- matrix(data_bi, table_title=('Biannual Survey            SpringDate:                       SpringSurveyID:                             FallDate:                       FallSurveyID:'))
library(xlsx)
write.xlsx(temp, "field_form_biannual.xlsx", row.names=FALSE, col.names=FALSE) #we write the file to .xlsx to more easily change print settings and cell dimensions

objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
dendro18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
View(dendro18)
setwd("E:/Github_SCBI/Dendrobands/data")
#2010 not included because only one measurement
dirs <- dir("E:/Github_SCBI/Dendrobands/data", pattern="_201[1-9]*.csv")
library(data.table)
date <- c(2011:2018)
filename <- paste(date, "range", sep="_")
all_sp <- list()
all_files <- list()
#this nested for-loop first makes a list of each species' average growth (max-min) in a year. Then, it combines all the years into one list (all_files).
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "growth")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$growth) & sprange$growth <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("growth")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "growth")]
}
colnames(sprange) <- c("sp", paste0("avg_growth",date[j],"_mm"))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
#round to 2nd decimal
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
#find range of years
step2$mingrowth_mm <- apply(step2[, 2:9], 1, min, na.rm=TRUE)
step2$maxgrowth_mm <- apply(step2[, 2:9], 1, max, na.rm=TRUE)
step2$avg_growth_range_mm <- step2[, "maxgrowth_mm"] - step2[, "mingrowth_mm"]
setwd("E:/Github_SCBI/Dendrobands/results")
setwd("E:/Github_SCBI/Dendrobands/data")
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
#2010 not included because only one measurement
dirs <- dir("E:/Github_SCBI/Dendrobands/data", pattern="_201[1-9]*.csv")
library(data.table)
date <- c(2011:2018)
filename <- paste(date, "range", sep="_")
all_sp <- list()
all_files <- list()
#this nested for-loop first makes a list of each species' average growth (max-min) in a year. Then, it combines all the years into one list (all_files).
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "growth")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$growth) & sprange$growth <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("growth")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "growth")]
}
colnames(sprange) <- c("sp", paste0("avg_growth",date[j],"_mm"))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
#round to 2nd decimal
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
#find range of years
step2$mingrowth_mm <- apply(step2[, 2:9], 1, min, na.rm=TRUE)
step2$maxgrowth_mm <- apply(step2[, 2:9], 1, max, na.rm=TRUE)
step2$avg_growth_range_mm <- step2[, "maxgrowth_mm"] - step2[, "mingrowth_mm"]
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data")
#2010 not included because only one measurement
dirs <- dir("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data", pattern="_201[1-9]*.csv")
library(data.table)
date <- c(2011:2018)
filename <- paste(date, "range", sep="_")
all_sp <- list()
all_files <- list()
#this nested for-loop first makes a list of each species' average growth (max-min) in a year. Then, it combines all the years into one list (all_files).
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "growth")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$growth) & sprange$growth <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("growth")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "growth")]
}
colnames(sprange) <- c("sp", paste0("avg_growth",date[j],"_mm"))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
#round to 2nd decimal
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
#find range of years
step2$mingrowth_mm <- apply(step2[, 2:9], 1, min, na.rm=TRUE)
step2$maxgrowth_mm <- apply(step2[, 2:9], 1, max, na.rm=TRUE)
step2$avg_growth_range_mm <- step2[, "maxgrowth_mm"] - step2[, "mingrowth_mm"]
View(step2)
setwd("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/results")
write.csv(step2, "growth_variability_by_sp.csv", row.names=FALSE)
View(sprange)
dendro18 <- read.csv("C:/Users/mcgregori/Dropbox (Smithsonian)/Github_Ian/Dendrobands/data/scbi.dendroAll_2018.csv")
View(dendro18)
#####################################################################################
#convert intraannual growth to dbh####
intra <- dendro18[dendro18$intraannual==1, ]
View(intra)
intra$dbh2 <- NA
objectiveFuncDendro= function(diameter2,diameter1,gap1,gap2){
if(gap1>diameter1) return(20)
if(gap2>diameter2) return(20)
delta=abs(diameter1 - diameter2 + (1/pi) * diameter2 * asin(gap2/diameter2) - (1/pi) * diameter1 * asin(gap1/diameter1))
return(return(delta))
}
findOneDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
if(is.na(dbh1)|is.na(m1)|is.na(m2)|dbh1<=0) return(NA)
if(m2>0) upper=dbh1+m2
else upper=dbh1+1
if(m2<m1) lower=0
else lower=dbh1
result=optimize(f=func,interval=c(lower,upper),diameter1=dbh1,gap1=m1,gap2=m2)
return(result$minimum)
}
findDendroDBH= function(dbh1,m1,m2,func=objectiveFuncDendro){
records=max(length(dbh1),length(m1),length(m2))
if(length(dbh1)==1) dbh1=rep(dbh1,records)
if(length(m1)==1) m1=rep(m1,records)
if(length(m2)==1) m2=rep(m2,records)
dbh2=numeric()
for(i in 1:records) dbh2[i]=findOneDendroDBH(dbh1[i],m1[i],m2[i],func)
return(dbh2)
}
x10671 <- intra[intra$tag==10671, ]
cal <- c(x10671$measure)
cal
findDendroDBH(x10671$dbh, cal[1], cal[2])
findDendroDBH(x10671$dbh, cal[[1]], cal[[2]])
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.02, findDendroDBH(x10671$dbh, cal[[1]], cal[[2]]), x10671$dbh2)
View(x10671)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.03, findDendroDBH(x10671$dbh, cal[[2]], cal[[3]]), x10671$dbh2[[2]])
View(x10671)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.03, findDendroDBH(x10671$dbh2[[2]], cal[[2]], cal[[3]]), x10671$dbh2)
View(x10671)
intra <- dendro18[dendro18$intraannual==1, ]
intra$dbh2 <- NA
x10671 <- intra[intra$tag==10671, ]
cal <- c(x10671$measure)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.02, findDendroDBH(x10671$dbh, cal[[1]], cal[[2]]), x10671$dbh2)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.03, findDendroDBH(x10671$dbh2[[2]], cal[[2]], cal[[3]]), x10671$dbh2)
View(x10671)
x10671$dbh2[[1]] <- x10671$dbh
x10671$dbh2[[1]] <- x10671$dbh[[1]]
View(x10671)
x10671$dbh2 <- ifelse(x10671$survey.ID == 2018.04, findDendroDBH(x10671$dbh2[[3]], cal[[3]], cal[[4]]), x10671$dbh2)
View(x10671)

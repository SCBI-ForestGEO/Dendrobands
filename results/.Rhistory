sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,1:2]
}
colnames(sprange) <- c("sp", "avg_range")
all <- rbind(all_sp, sprange)
View(all)
spec <- sp[[1]]
name <- paste0(spec, "data")
sprange <- paste(sp[[1]], "range", sep="_")
name <- subset(dendro_2018, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- ifelse((nrow(sprange)>=2),
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean),
sprange[ ,1:2])
colnames(sprange) <- c("sp", "avg_range")
all <- rbind(all_sp, sprange)
spec <- sp[[1]]
name <- paste0(spec, "data")
sprange <- paste(sp[[1]], "range", sep="_")
name <- subset(dendro_2018, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
nrow(sprange)>=2
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
#take the average of the ranges
sprange <- ifelse((nrow(sprange)>=2),
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean),
sprange[ ,1:2])
spec <- sp[[1]]
name <- paste0(spec, "data")
sprange <- paste(sp[[1]], "range", sep="_")
name <- subset(dendro_2018, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,1:2]
}
colnames(sprange) <- c("sp", "avg_range")
for (i in seq(along=sp)){
spec <- sp[[1]]
name <- paste0(spec, "data")
sprange <- paste(sp[[1]], "range", sep="_")
name <- subset(dendro_2018, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,1:2]
}
colnames(sprange) <- c("sp", "avg_range")
all <- rbind(all_sp, sprange)
}
View(all)
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(dendro_2018, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,1:2]
}
colnames(sprange) <- c("sp", "avg_range")
all <- rbind(all_sp, sprange)
}
View(name)
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
View(sprange)
View(name)
View(sprange)
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(dendro_2018, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "measure_range")]
}
colnames(sprange) <- c("sp", "avg_range")
all <- rbind(all_sp, sprange)
}
View(all)
a
all_sp <- list()
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(dendro_2018, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "measure_range")]
}
colnames(sprange) <- c("sp", "avg_range")
all_sp[[i]] <- sprange
}
View(all_sp)
file <- rbindlist(all_sp)
file <- rbind(all_sp)
View(file)
library(data.table)
file <- rbindlist(all_sp)
colnames(file) <- c("sp", "avg_range")
View(file)
setwd("E:/Github_SCBI/Dendrobands/data")
#2010 not included because only one measurement
dirs <- dir("E:/Github_SCBI/Dendrobands/data", pattern="_201[1-9]*.csv")
library(data.table)
date <- c(2011:2018)
filename <- paste(date, "range", sep="_")
all_sp <- list()
all_files <- list()
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "measure_range")]
}
colnames(sprange) <- c("sp", "avg_range")
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
View(all_files)
names(all_files)
View(all_files)
colnames(sprange) <- c("sp", paste0("avg_range",filename[i]))
View(sprange)
colnames(sprange) <- c("sp", paste0("avg_range",filename[j]))
View(sprange)
colnames(sprange) <- c("sp", paste0("avg_range",date[j]))
View(sprange)
all_sp <- list()
all_files <- list()
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "measure_range")]
}
colnames(sprange) <- c("sp", paste0("avg_range",date[j]))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
View(all_files)
View(all_files)
aa  <-  as.data.frame(matrix(unlist(all_files)))
dd  <-  as.data.frame(matrix(unlist(all_files), nrow=length(unlist(all_files[1]))))
View(dd)
df= as.data.frame(t(as.data.frame(all_files)))
bb <- do.call(rbind, listHolder)
bb <- do.call(rbind, all_files)
bb <- do.call(cbind, all_files)
step1 <- lapply(all_files, rbindlist, id = 'sp')
View(step1)
# bind the resulting list together and include the experiment id
step2 <- cbindlist(step1) #id = 'experiment')
?cbindlist
library(data.table)
?cbindlist
?cbind
?data.table
# bind the resulting list together and include the experiment id
step2 <- cbind(step1) #id = 'experiment')
View(step2)
test <- as.data.frame(step2)
View(test)
View(step2)
step1 <- lapply(all_files, rbindlist)
View(step1)
View(step1)
# bind the resulting list together and include the experiment id
library(dplyr)
?bind_rows
step2 <- bind_rows(step1, .id = "column_label")
View(step2)
step2 <- bind_rows(step1)
View(step2)
?bind_columns
step2 <- bind_cols(step1)
View(step1)
step2 <- ldply(all_files, data.frame)
# bind the resulting list together and include the experiment id
library(plyr)
step2 <- ldply(all_files, data.frame)
# bind the resulting list together and include the experiment id
library(tidyverse) # or, library(dplyr); library(purrr)
install.packages("tidyverse")
# bind the resulting list together and include the experiment id
library(tidyverse) # or, library(dplyr); library(purrr)
df <- all_files %>% reduce(bind_cols)
?rbindlist
step2 <- rbindlist(all_files)
step2 <- rbindlist(all_files, fill=TRUE)
View(step1)
step2 <- cbind(all_files, fill=TRUE)
step2 <- rbindlist(step1, fill=TRUE)
View(step2)
step2 <- cbind(step1, fill=TRUE)
View(step2)
View(step2)
library(tidyverse)
step2 <- step1 %>%
reduce(inner_join, by = "sp")
View(step2)
step2 <- step1 %>%
reduce(inner_join, by = "sp", all=TRUE)
?reduce
View(step2)
?inner_join
step2 <- step1 %>%
reduce2(inner_join, by = "sp", all=TRUE)
step2 <- reduce2(step1, by = "sp", all=TRUE, inner_join)
step2 <- reduce2(step1, by = "sp", all=TRUE, merge)
step2 <- reduce(step1, merge, by = "sp", all=TRUE, merge)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
View(step2)
View(step2)
library(esquisse)
esquisse:::esquisser()
setwd("E:/Github_SCBI/Dendrobands/data")
#2010 not included because only one measurement
dirs <- dir("E:/Github_SCBI/Dendrobands/data", pattern="_201[1-9]*.csv")
library(data.table)
date <- c(2011:2018)
filename <- paste(date, "range", sep="_")
all_sp <- list()
all_files <- list()
#this nested for-loop first makes a list of each species' average growth (max-min) in a year. Then, it combines all the years into one list (all_files).
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "measure_range")]
}
colnames(sprange) <- c("sp", paste0("avg_range",date[j]))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
View(step2)
step2 <- round(step2, digits=2)
step2 <- round(step2[ ,c(2:9)], digits=2)
View(step2)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
View(step2)
all_sp <- list()
all_files <- list()
#this nested for-loop first makes a list of each species' average growth (max-min) in a year. Then, it combines all the years into one list (all_files).
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "measure_range")]
}
colnames(sprange) <- c("sp", paste0("avg_range",date[j],"_mm"))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
View(step2)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
View(step2)
setwd("E:/Github_SCBI/Dendrobands/data")
#2010 not included because only one measurement
dirs <- dir("E:/Github_SCBI/Dendrobands/data", pattern="_201[1-9]*.csv")
library(data.table)
date <- c(2011:2018)
filename <- paste(date, "range", sep="_")
all_sp <- list()
all_files <- list()
#this nested for-loop first makes a list of each species' average growth (max-min) in a year. Then, it combines all the years into one list (all_files).
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "measure_range")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$measure_range) & sprange$measure_range <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("measure_range")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "measure_range")]
}
colnames(sprange) <- c("sp", paste0("avg_range",date[j],"_mm"))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
View(step2)
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
?max
#find range of years
step2$maxgrowth_mm <- max(step2[ ,c(2:9)])
View(step2)
#round to 2nd decimal
step2[ ,c(2:9)] <- round(step2[c(2:9), ], digits=2)
#find range of years
step2$maxgrowth_mm <- max(step2[c(2:9), ])
#find range of years
step2$maxgrowth_mm <- apply(step2[, 2:9], 1, max)
View(step2)
setwd("E:/Github_SCBI/Dendrobands/data")
#2010 not included because only one measurement
dirs <- dir("E:/Github_SCBI/Dendrobands/data", pattern="_201[1-9]*.csv")
library(data.table)
date <- c(2011:2018)
filename <- paste(date, "range", sep="_")
all_sp <- list()
all_files <- list()
#this nested for-loop first makes a list of each species' average growth (max-min) in a year. Then, it combines all the years into one list (all_files).
for (j in seq(along=dirs)){
year <- read.csv(dirs[[j]])
year$sp <- as.character(year$sp)
sp <- c(unique(year$sp))
for (i in seq(along=sp)){
spec <- sp[[i]]
name <- paste0(spec, "data")
sprange <- paste(sp[[i]], "range", sep="_")
name <- subset(year, sp %in% spec)
name <- name[ ,c("tag", "stemtag", "sp", "measure", "codes")]
#get range (max-min) of measurements by tag
sprange <- aggregate(name[, c("measure")], list(name$tag, name$stemtag, name$sp), FUN = function(i)max(i) - min(i))
colnames(sprange) <- c("tag", "stemtag", "sp", "growth")
#remove NA and values over 50 (would indicate band replacement)
sprange <- subset(sprange, !is.na(sprange$growth) & sprange$growth <= 50)
#take the average of the ranges
sprange <- if (nrow(sprange)>=2){
aggregate(sprange[, c("growth")], list(sprange$sp), mean)
}
else {
sprange[ ,c("sp", "growth")]
}
colnames(sprange) <- c("sp", paste0("avg_growth",date[j],"_mm"))
all_sp[[i]] <- sprange
}
all_files[[j]] <- all_sp
}
#now, coerce the list of lists into a usable dataframe
step1 <- lapply(all_files, rbindlist)
library(tidyverse)
step2 <- reduce(step1, merge, by = "sp", all=TRUE)
#round to 2nd decimal
step2[ ,c(2:9)] <- round(step2[ ,c(2:9)], digits=2)
#find range of years
step2$mingrowth_mm <- apply(step2[, 2:9], 1, min)
step2$maxgrowth_mm <- apply(step2[, 2:9], 1, max)
View(step2)
step2$mingrowth_mm <- do.call(pmin, step2[2:9], na.rm=TRUE)
step2$mingrowth_mm <- do.call(pmin(na.rm=TRUE), step2[2:9])
?apply
#find range of years
step2$mingrowth_mm <- apply(step2[, 2:9], 1, min, na.rm=TRUE)
step2$maxgrowth_mm <- apply(step2[, 2:9], 1, max, na.rm=TRUE)
View(step2)
library(esquisse)
esquisse:::esquisser()
setwd("E:/Github_SCBI/Dendrobands/results")
write.csv(step2, "mean_growth_by_sp.csv", row.names=FALSE)
